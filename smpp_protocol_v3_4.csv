chunk_id,text
0,Issue 1.2
1,Protocol Specification v3.4
2,Document Version:- 12-Oct-1999 Issue 1.2
3,©SMPP Developers Forum
4,Issue 1.2
5,SMPP Protocol Specification v3.4
6,12-Oct-1999 Issue 1.2
7, 1999 SMPP Developers Forum.
8,COPYRIGHT
9,"All rights reserved. This document or any part thereof may not, without the prior written"
10,"consent of SMPP Developers Forum, be copied, reprinted or reproduced in any material form"
11,"including, but without prejudice to the foregoing and not by way of exception photocopying,"
12,"transcribing, transmitting or storing in any medium or translating into any language, in any form"
13,"or by any means, including but not limited to, electronic, mechanical, xerographic, optical,"
14,"magnetic, digital or other methodology."
15,DISCLAIMER
16,WHILST THE GREATEST CARE HAS BEEN TAKEN TO ENSURE THE ACCURACY OF THE
17,"INFORMATION AND DATA CONTAINED HEREIN, SMPP DEVELOPERS FORUM DOES NOT"
18,WARRANT THE ACCURACY OR SUITABILITY OF SAME FOR ANY SPECIFIC USE. SMPP
19,"DEVELOPERS FORUM EXPRESSLY DISCLAIMS ALL AND ANY LIABILITY TO ANY PERSON,"
20,"WHETHER A PURCHASER OR OTHERWISE, IN RESPECT OF ANY CONSEQUENCES OF ANYTHING"
21,DONE OR OMITTED TO BE DONE BY ANY SUCH PERSON IN PARTIAL OR TOTAL RELIANCE UPON
22,THE WHOLE OR ANY PART OF THE CONTENTS OF THIS PUBLICATION OR ANY DERIVATIVE
23,THEREOF.
24,THE INFORMATION CONTAINED HEREIN IS BELIEVED TO BE ACCURATE AND RELIABLE.
25,"HOWEVER, SMPP DEVELOPERS FORUM ACCEPTS NO RESPONSIBILITY FOR IT’S USE BY ANY"
26,MEANS OR IN ANY WAY WHATSOEVER. SMPP DEVELOPERS FORUM SHALL NOT BE LIABLE FOR
27,"ANY EXPENSES, COSTS OR DAMAGE THAT MAY RESULT FROM THE USE OF THE INFORMATION"
28,CONTAINED HOWSOEVER ARISING IN THIS DOCUMENT OR ANY DERIVATIVE THEREOF.
29,NOTE 1:THE INFORMATION CONTAINED IN THE WITHIN DOCUMENT AND ANY
30,DERIVATIVE THEREOF IS SUBJECT TO CHANGE WITHOUT NOTICE.
31,NOTE 2:THE CORPORATE NAME OF SMPP DEVELOPERS FORUM IS NORTHGROVE
32,"LIMITED, COMPANY NUMBER 309113, REGISTERED OFFICE GARDNER HOUSE,"
33,"WILTON PLACE, DUBLIN 2."
34,SMPP Protocol Specification v3.4
35,Errata
36,Issue 1.2
37,©SMPP Developers Forum
38,Errata
39,Erratum
40,Description of Correction to
41,address Erratum
42,Change
43,Request
44,Reference
45,In the SMPP Protocol Specification
46,v3.4. version 30-July-1999 Issue 1.1
47,section 4.1.5 “Bind_Transceiver”
48,the interface_version field was
49,inadvertently not included in the
50,bind_transceiver PDU.
51,The erratum was corrected in the
52,SMPP Protocol Specification v3.4
53,version 12-Oct-1999 Issue 1.2 as
54,follows:
55,In section 4.1.5 “Bind_Transceiver”
56,the interface_version field was
57,added as a mandatory field to the
58,bind_transceiver PDU.
59,Since it is a mandatory field all
60,implementations of the SMPP
61,Protocol Specification v3.4 must
62,include the interface_version field
63,when using the bind_transceiver
64,PDU.
65,SMPPV3.4-
66,05Oct99-01
67,©SMPP Developers Forum
68,Issue 1.2
69,Table of Contents
70,SMPP Protocol Specification v3.4
71,Table of Contents
72,1.
73,Introduction.................................................................................................................8
74,1.1
75,SMPP Overview...............................................................................................8
76,1.2
77,Scope................................................................................................................9
78,1.3
79,Glossary .........................................................................................................10
80,1.4
81,References......................................................................................................11
82,2.
83,SMPP Protocol Overview.........................................................................................12
84,2.1
85,SMPP Protocol Definition .............................................................................13
86,2.2
87,SMPP Session Description ............................................................................14
88,2.2.1
89,Outbind .........................................................................................16
90,2.3
91,SMPP PDUs...................................................................................................17
92,2.4
93,SMPP Network Layer Connections ...............................................................19
94,2.5
95,SMPP messages sent from ESME to SMSC..................................................20
96,2.5.1
97,SMPP Message Response from SMSC to ESME.........................20
98,2.5.2
99,Typical SMPP session sequence - ESME Transmitter .................21
100,2.6
101,SMPP messages sent from SMSC to ESME..................................................23
102,2.6.1
103,SMPP Message Response from ESME to SMSC.........................23
104,2.6.2
105,Typical SMPP session sequence - ESME Receiver......................24
106,2.7
107,Duplex message exchange between an SMSC and an ESME .......................26
108,2.7.1
109,Typical SMPP session sequence - ESME Transceiver .................27
110,2.8
111,SMPP Error Handling....................................................................................29
112,2.9
113,SMPP Timers.................................................................................................29
114,2.10
115,Message Modes..............................................................................................30
116,2.10.1
117,Store and Forward Message Mode ...............................................30
118,2.10.2
119,Datagram Message Mode .............................................................32
120,2.10.3
121,Transaction Message Mode ..........................................................33
122,2.11
123,Message Types...............................................................................................34
124,3.
125,SMPP PDU Type and Format Definitions..............................................................36
126,3.1
127,SMPP PDU - Type Definitions......................................................................36
128,3.1.1
129,SMPP Parameter Field Size Notation...........................................37
130,3.2
131,SMPP PDU Format - Overview.....................................................................38
132,3.2.1
133,SMPP PDU Layout.......................................................................39
134,3.2.2
135,SMPP PDU Length.......................................................................41
136,3.2.3
137,SMPP Message length and extended message length...................41
138,3.2.4
139,Optional Parameters......................................................................42
140,3.2.4.1
141,Optional Parameter Format.....................................42
142,3.3
143,Guidelines for SMPP Forward Compatibility................................................43
144,3.4
145,Guidelines for SMPP Backward Compatibility.............................................44
146,4.
147,SMPP PDU Definition ..............................................................................................45
148,4.1
149,“BIND” Operation .........................................................................................45
150,4.1.1
151,“BIND_TRANSMITTER” Syntax ...............................................46
152,4.1.2
153,“BIND_TRANSMITTER_RESP” Syntax....................................47
154,4.1.3
155,“BIND_RECEIVER” Syntax........................................................48
156,4.1.4
157,“BIND_RECEIVER_RESP” ........................................................50
158,4.1.5
159,“BIND_TRANSCEIVER” Syntax................................................51
160,4.1.6
161,“BIND_TRANSCEIVER_RESP” ................................................53
162,SMPP Protocol Specification v3.4
163,Table of Contents
164,Issue 1.2
165,©SMPP Developers Forum
166,4.1.7
167,“OUTBIND” Operation................................................................54
168,4.1.7.1
169,“OUTBIND” Syntax..............................................54
170,4.2
171,“UNBIND” Operation....................................................................................55
172,4.2.1
173,“UNBIND” ...................................................................................56
174,4.2.2
175,“UNBIND_RESP”.......................................................................56
176,4.3
177,“GENERIC_NACK” PDU ............................................................................57
178,4.3.1
179,“GENERIC_NACK” Syntax ........................................................57
180,4.4
181,“SUBMIT_SM” Operation ............................................................................58
182,4.4.1
183,“SUBMIT_SM” Syntax................................................................59
184,4.4.1.1
185,Source and Destination Addressing .......................66
186,4.4.1.2
187,Message Replace operation in “SUBMIT_SM”.....66
188,4.4.2
189,“SUBMIT_SM_RESP”.................................................................67
190,4.5
191,“SUBMIT_MULTI” Operation .....................................................................68
192,4.5.1
193,“SUBMIT_MULTI” Syntax .........................................................69
194,4.5.1.1
195,Destination Address definition ...............................75
196,4.5.1.2
197,Distribution List (DL) definition ............................75
198,4.5.2
199,“SUBMIT_MULTI_RESP” Syntax..............................................76
200,4.5.2.1
201,Unsuccessful deliveries ..........................................77
202,4.6
203,“DELIVER_SM” Operation ..........................................................................78
204,4.6.1
205,“DELIVER_SM” Syntax..............................................................79
206,4.6.2
207,“DELIVER_SM_RESP” Syntax ..................................................85
208,4.7
209,“DATA_SM” Operation ................................................................................86
210,4.7.1
211,“DATA_SM” Syntax....................................................................87
212,4.7.2
213,“DATA_SM_RESP” Syntax ........................................................93
214,4.8
215,“QUERY_SM” Operation..............................................................................94
216,4.8.1
217,“QUERY_SM” Syntax .................................................................95
218,4.8.2
219,“QUERY_SM_RESP” Syntax......................................................96
220,4.9
221,“CANCEL_SM” Operation ...........................................................................97
222,4.9.1
223,“CANCEL_SM” Syntax ...............................................................98
224,4.9.2
225,“CANCEL_SM_RESP” Syntax..................................................100
226,4.10
227,“REPLACE_SM” Operation........................................................................101
228,4.10.1
229,“REPLACE_SM” Syntax ...........................................................102
230,4.10.2
231,“REPLACE_SM_RESP” Syntax................................................104
232,4.11
233,“ENQUIRE_LINK” Operation....................................................................105
234,4.11.1
235,“ENQUIRE_LINK” Syntax........................................................106
236,4.11.2
237,“ENQUIRE_LINK_RESP” Syntax ............................................106
238,4.12
239,“ALERT_NOTIFICATION” Operation......................................................107
240,4.12.1
241,“ALERT_NOTIFICATION” Syntax..........................................108
242,5.
243,SMPP Parameter Definition...................................................................................109
244,5.1
245,Command Header Parameters.....................................................................109
246,5.1.1
247,command_length.........................................................................109
248,5.1.2
249,command_id................................................................................109
250,5.1.2.1
251,SMPP Command set.............................................110
252,5.1.3
253,command_status..........................................................................112
254,5.1.4
255,sequence_number........................................................................115
256,5.2
257,Mandatory SMPP Parameters ......................................................................116
258,5.2.1
259,system_id ....................................................................................116
260,5.2.2
261,password .....................................................................................116
262,5.2.3
263,system_type.................................................................................116
264,5.2.4
265,interface_version.........................................................................116
266,©SMPP Developers Forum
267,Issue 1.2
268,Table of Contents
269,SMPP Protocol Specification v3.4
270,5.2.5
271,"addr_ton, source_addr_ton, dest_addr_ton, esme_addr_ton.......117"
272,5.2.6
273,"addr_npi, source_addr_npi, dest_addr_npi, esme_addr_npi.......118"
274,5.2.7
275,address_range..............................................................................118
276,5.2.8
277,source_addr.................................................................................119
278,5.2.9
279,destination_addr..........................................................................119
280,5.2.10
281,esme_addr ...................................................................................119
282,5.2.11
283,service_type ................................................................................120
284,5.2.12
285,esm_class ....................................................................................121
286,5.2.13
287,protocol_id ..................................................................................123
288,5.2.14
289,priority_flag ................................................................................123
290,5.2.15
291,schedule_delivery_time ..............................................................124
292,5.2.16
293,validity_period ............................................................................124
294,5.2.17
295,registered_delivery......................................................................124
296,5.2.18
297,replace_if_present_flag...............................................................125
298,5.2.19
299,data_coding.................................................................................126
300,5.2.20
301,sm_default_msg_id.....................................................................127
302,5.2.21
303,sm_length....................................................................................128
304,5.2.22
305,short_message.............................................................................128
306,5.2.23
307,message_id..................................................................................128
308,5.2.24
309,number_of_dests.........................................................................128
310,5.2.25
311,dest_flag......................................................................................129
312,5.2.26
313,no_unsuccess...............................................................................129
314,5.2.27
315,dl_name.......................................................................................129
316,5.2.28
317,message_state..............................................................................130
318,5.3
319,SMPP Optional Parameter Description........................................................131
320,5.3.1
321,Optional Parameter Tag Identifiers.............................................131
322,5.3.2
323,SMPP Optional Parameter Tag definitions.................................132
324,5.3.2.1
325,dest_addr_subunit.................................................134
326,5.3.2.2
327,source_addr_subunit.............................................134
328,5.3.2.3
329,dest_network_type................................................135
330,5.3.2.4
331,source_network_type............................................135
332,5.3.2.5
333,dest_bearer_type...................................................136
334,5.3.2.6
335,source_bearer_type...............................................136
336,5.3.2.7
337,dest_telematics_id.................................................137
338,5.3.2.8
339,source_telematics_id.............................................137
340,5.3.2.9
341,qos_time_to_live...................................................138
342,5.3.2.10
343,payload_type.........................................................138
344,5.3.2.11
345,additional_status_info_text...................................139
346,5.3.2.12
347,receipted_message_id...........................................139
348,5.3.2.13
349,ms_msg_wait_facilities ........................................140
350,5.3.2.14
351,privacy_indicator ..................................................141
352,5.3.2.15
353,source_subaddress ................................................142
354,5.3.2.16
355,dest_subaddress ....................................................143
356,5.3.2.17
357,user_message_reference .......................................143
358,5.3.2.18
359,user_response_code ..............................................144
360,5.3.2.19
361,language_indicator................................................144
362,5.3.2.20
363,source_port ...........................................................145
364,5.3.2.21
365,destination_port ....................................................145
366,5.3.2.22
367,sar_msg_ref_num .................................................146
368,5.3.2.23
369,sar_total_segments................................................147
370,5.3.2.24
371,sar_segment_seqnum............................................147
372,SMPP Protocol Specification v3.4
373,Table of Contents
374,Issue 1.2
375,©SMPP Developers Forum
376,5.3.2.25
377,sc_interface_version .............................................148
378,5.3.2.26
379,display_time..........................................................148
380,5.3.2.27
381,ms_validity ...........................................................149
382,5.3.2.28
383,dpf_result ..............................................................149
384,5.3.2.29
385,set_dpf...................................................................150
386,5.3.2.30
387,ms_availability_status...........................................151
388,5.3.2.31
389,network_error_code..............................................152
390,5.3.2.32
391,message_payload..................................................153
392,5.3.2.33
393,delivery_failure_reason ........................................153
394,5.3.2.34
395,more_messages_to_send.......................................154
396,5.3.2.35
397,message_state .......................................................154
398,5.3.2.36
399,callback_num........................................................155
400,5.3.2.37
401,callback_num_pres_ind........................................156
402,5.3.2.38
403,callback_num_atag ...............................................157
404,5.3.2.39
405,number_of_messages............................................158
406,5.3.2.40
407,sms_signal.............................................................158
408,5.3.2.41
409,alert_on_message_delivery...................................159
410,5.3.2.42
411,its_reply_type .......................................................159
412,5.3.2.43
413,its_session_info.....................................................160
414,5.3.2.44
415,ussd_service_op....................................................161
416,6.
417,Network Implementation........................................................................................162
418,6.1
419,Network Error Codes ...................................................................................162
420,6.2
421,Maximum Message Length..........................................................................162
422,7.
423,General Definitions .................................................................................................163
424,7.1
425,Time Definitions ..........................................................................................163
426,7.1.1
427,Time Format................................................................................163
428,7.1.1.1
429,Absolute Time format...........................................163
430,7.1.1.2
431,Relative Time Format...........................................164
432,7.2
433,Timer Definitions.........................................................................................165
434,Appendix A ..........................................................................................................................166
435,Appendix B ..........................................................................................................................167
436,Appendix C ..........................................................................................................................169
437,©SMPP Developers Forum
438,Issue 1.2
439,Introduction
440,SMPP Protocol Specification v3.4
441,1.
442,Introduction
443,1.1
444,SMPP Overview
445,The designed to provide a flexible data communications interface for transfer of short message data
446,"between a Message Center, such as a Short Message Service Centre (SMSC), GSM"
447,Unstructured Supplementary Services Data (USSD) Server or other type of Message Center
448,"and a SMS application system, such as a WAP Proxy Server, EMail Gateway or other"
449,Messaging Gateway.
450,Note:
451,"For sake of brevity, the term SMSC will be used throughout this document to describe"
452,"any SMPP ‘server’ entity to which an SMPP ‘client’, termed an External Short"
453,"Message Entity (ESME), can be connected."
454,SMPP Release v3.4 supports Digital Cellular Network technologies including:-
455,•
456,GSM
457,•
458,IS-95 (CDMA)
459,•
460,ANSI-136 (TDMA)
461,•
462,iDEN
463,"Using the SMPP protocol, an SMS application system called the ‘External Short Message"
464,Entity’ (ESME) may initiate an application layer connection with an SMSC over a TCP/IP or
465,X.25 network connection and may then send short messages and receive short messages to and
466,"from the SMSC respectively. The ESME may also query, cancel or replace short messages"
467,using SMPP.
468,SMPP supports a full featured set of two-way messaging functions such as:-
469,•
470,Transmit messages from an ESME to single or multiple destinations via the SMSC
471,•
472,An ESME may receive messages via the SMSC from other SME’s (e.g. mobile
473,stations).
474,•
475,Query the status of a short message stored on the SMSC
476,•
477,Cancel or replace a short message stored on the SMSC
478,•
479,Send a registered short message (for which a ‘delivery receipt’ will be returned by the
480,SMSC to the message originator)
481,•
482,Schedule the message delivery date and time
483,•
484,"Select the message mode, i.e. datagram or store and forward"
485,•
486,Set the delivery priority of the short message
487,•
488,Define the data coding type of the short message
489,•
490,Set the short message validity period
491,•
492,Associate a service type with each message e.g. voice mail notification
493,SMPP Protocol Specification v3.4
494,Introduction
495,Issue 1.2
496,©SMPP Developers Forum
497,1.2
498,Scope
499,This document defines Version 3.4 of the SMPP protocol and specifies the command and
500,response format to be used when implementing an SMPP v3.4 protocol interface.
501,It is intended for designers and implementers of an SMPP v3.4 interface between an SMSC and
502,"an External Short Message Entity (ESME), as illustrated in the following diagram."
503,Figure 1-1: Context of SMPP in a Mobile Network
504,GSM
505,Telep
506,SMS
507,Mobile
508,VMS
509,WAP
510,Paging
511,Bureau
512,ESMEs
513,Mobile
514,Network
515,SMSC
516,Station
517,SMPP
518,SMPP
519,SMPP
520,Proxy Server
521,©SMPP Developers Forum
522,Issue 1.2
523,Introduction
524,SMPP Protocol Specification v3.4
525,1.3
526,Glossary
527,Note 1: In the context of this document ESME refers to such external sources and sinks of short
528,"messages as Voice Processing Systems, WAP Proxy Servers or Message Handling"
529,computers. It specifically excludes SMEs which are located within the Mobile
530,"Network, i.e., a mobile station (MS)."
531,ACK
532,Acknowledgement
533,API
534,Application Programming Interface
535,CDR
536,Call Detail Record
537,ESME
538,External Short Message Entity. Refer to note[1]
539,ETSI
540,European Telecommunications Standards Institute
541,HEADER
542,"Leading portion of the SMPP message, common to all SMPP PDUs"
543,MB
544,Message Bureau - This is typically an operator message bureau.
545,MSB
546,Most Significant Byte
547,MSC
548,Mobile Switching Centre
549,MS
550,Mobile Station
551,MWI
552,Message Waiting Indication
553,NACK
554,Negative Acknowledgement
555,NSAP
556,Network Service Access Point
557,PDU
558,Protocol Data Unit
559,PSSD
560,Process Unstructured Supplementary Services Data
561,PSSR
562,Process Unstructured Supplementary Services Request
563,SME
564,Short Message Entity
565,SMSC
566,Short Message Service Centre
567,SMPP
568,UDHI
569,User Data Header Indicator
570,URL
571,Uniform Resource Locator
572,USSN
573,Unstructured Supplementary Services Notification
574,USSR
575,Unstructured Supplementary Services Request
576,VMA
577,VoiceMail Alert
578,VPS
579,Voice Processing System
580,TIA
581,Telecommunications Industry Association
582,WAP
583,Wireless Application Protocol (http://www.wapforum.org)
584,WCMP
585,Wireless Control Message Protocol
586,WDP
587,Wireless Datagram Protocol
588,SMPP Protocol Specification v3.4
589,Introduction
590,Issue 1.2
591,©SMPP Developers Forum
592,1.4
593,References
594,Ref.
595,Document Title
596,Document Number
597,Version
598,Number
599,[GSM 03.40]
600,Technical Realisation of the Short
601,Message Service Point to Point
602,GSM 03.40
603,http://www.etsi.fr
604,v5.7.1
605,[GSM 03.38]
606,“Digital Cellular telecommunica-
607,tions system (Phase 2+); Alphabets
608,and language specific information”.
609,[GSM 03.38]
610,http://www.etsi.fr
611,v5.5.1
612,Sept. ‘97
613,[GSM MAP
614,09.02]
615,GSM Mobile Application Part
616,[GSM MAP 09.02]
617,http://www.etsi.fr
618,v5.11.0
619,[IS637]
620,Short Message Service for Spread
621,Spectrum Systems
622,TIA/EIA/IS-637-A
623,Rev A
624,[TSAR]
625,Teleservice Segmentation and Reas-
626,sembly (TSAR)
627,TIA/EIA-136-620
628,Rev 0
629,[CMT-136]
630,Short Message Service - Cellular
631,Messaging Teleservice
632,TIA/EIA-136-710-A
633,Rev A
634,[GUTS]
635,General UDP Transport Service
636,(GUTS)
637,TIA/EIA-136-750
638,Rev 0
639,[WAPARCH]
640,Wireless Application Protocol
641,Architecture Specification
642,WAP Forum
643,http://www.wapforum.org
644,Version
645,30-Apr.-
646,1998
647,[WCMP]
648,Wireless Control Message Protocol
649,Specification
650,WAP Forum
651,http://www.wapforum.org
652,Version
653,12-June-
654,1998
655,[WDP]
656,Wireless Datagram Protocol Specifi-
657,cation
658,WAP Forum
659,http://www.wapforum.org
660,Version
661,10-Feb.-
662,1999
663,[ITUT X.213]
664,Open Systems Interconnection - Net-
665,work Service Definition
666,[ITUT X.213]
667,11/95
668,[KOR ITS]
669,PCS operators common standards for
670,handset-SMS functionalities
671,PCS standardization com-
672,mittee
673,PCS-SMS-97-05-28
674,1.06 Rev
675,99-04-30
676,©SMPP Developers Forum
677,Issue 1.2
678,SMPP Protocol Overview
679,SMPP Protocol Specification v3.4
680,2.
681,SMPP Protocol Overview
682,short message entities (SMEs) outside the mobile network to interface with an SMSC. Non-
683,"mobile entities that submit messages to, or receive messages from an SMSC are known as"
684,External Short Message Entities (ESMEs).
685,The SMPP protocol defines:
686,•
687,a set of operations for the exchange of short messages between an ESME and an SMSC
688,•
689,the data that an ESME application must exchange with an SMSC during SMPP operations.
690,Subscribers to an SMS-capable Cellular Network may receive short messages on a Mobile
691,Station (MS) from one or more ESMEs. The means whereby these messages arrive at the ESME
692,"via an interface other than SMPP is beyond the scope of this document. However, examples of"
693,such ESME applications include:-
694,•
695,"Voicemail alerts originating from a VPS (Voice Processing System), indicating voice"
696,messages at a customer’s mailbox.
697,•
698,Numeric and alphanumeric paging services
699,•
700,"Information services. For example, an application that enables mobile subscribers to query"
701,currency rates or share-price information from a database or the WWW and have it
702,displayed as a short message on the handsets.
703,•
704,"Calls directly dialled or diverted to a message-bureau operator, who forwards the message"
705,"to the SMSC, for onward delivery to a subscriber’s handset."
706,•
707,A fleet management application that enables a central station to use the SMSC to
708,determine the location of its service vehicles and notify the closest vehicle of a service
709,request in their area.
710,•
711,"Telemetry applications. For example, a house-hold meter that transmits a short message to"
712,a utility company’s billing system to automatically record customer usage.
713,•
714,WAP Proxy Server. A WAP Proxy Server acts as the WAP gateway for wireless internet
715,applications. A WAP Proxy Server may select an SMS or USSD bearer for sending WDP
716,datagrams to and receiving WDP datagrams from a mobile station.
717,SMPP Protocol Specification v3.4
718,SMPP Protocol Overview
719,Issue 1.2
720,©SMPP Developers Forum
721,2.1
722,SMPP Protocol Definition
723,SMPP is based on the exchange of request and response protocol data units (PDUs) between
724,the ESME and the SMSC over an underlying TCP/IP or X.25 network connection. The SMPP
725,protocol defines:
726,•
727,a set of operations and associated Protocol Data Units (PDUs) for the exchange of short
728,messages between an ESME and an SMSC
729,•
730,the data that an ESME application can exchange with an SMSC during SMPP operations.
731,Note* Every SMPP operation must consist of a request PDU and associated response PDU.
732,The receiving entity must return the associated SMPP response to an SMPP PDU
733,request.
734,* The only exception to this rule is
735,- the alert_notification PDU for which there is no response
736,The exchange of messages between an ESME and SMSC via SMPP may be categorised under
737,three distinct groups of transactions as follows:
738,i)
739,messages sent from the ESME (Transmitter) to the SMSC
740,ii) messages sent from the SMSC to the ESME (Receiver)
741,iii) messages sent from the ESME (Transceiver) to the SMSC and messages sent from the
742,SMSC to the ESME (Transceiver)
743,"The following Figure 2-1 illustrates the above categories, which are explained in more detail in"
744,subsequent sections.
745,Figure 2-1: SMPP interface between SMSC and ESME
746,SMPP Transmitter
747,•
748,SMPP messages sent from ESME to SMSC
749,SMPP Receiver
750,•
751,SMPP messages sent from SMSC to ESME
752,ESME-001 (e.g. WAP Proxy/Server)
753,SMSC
754,ESME-002 (e.g. VPS)
755,ESME-003 (e.g. Email Gateway)
756,SMPP
757,I/F
758,N
759,e
760,t
761,w
762,o
763,r
764,k
765,SMPP
766,SMPP
767,SMPP
768,Transceiver
769,Transmitter
770,Receiver
771,SMPP Transceiver
772,•
773,SMPP messages sent from ESME to SMSC
774,•
775,SMPP messages sent from SMSC to ESME
776,©SMPP Developers Forum
777,Issue 1.2
778,SMPP Protocol Overview
779,SMPP Protocol Specification v3.4
780,2.2
781,SMPP Session Description
782,An SMPP session between an SMSC and an ESME is initiated by the ESME first establishing
783,a network connection with the SMSC and then issuing an SMPP Bind request to open an SMPP
784,session. An ESME wishing to submit and receive messages is required to establish two network
785,connections (TCP/IP or X.25) and two SMPP sessions (Transmitter and Receiver).
786,"Alternatively, in this version of the protocol an ESME may establish an SMPP Transceiver"
787,session over a single network connection.
788,"During an SMPP session, an ESME may issue a series of requests to an SMSC and shall receive"
789,"the appropriate responses to each request, from the SMSC. Likewise, the SMSC may issue"
790,"SMPP requests to the ESME, which must respond accordingly."
791,The SMPP session may be defined in terms of the following possible states:
792,•
793,OPEN (Connected and Bind Pending)
794,An ESME has established a network connection to the SMSC but has not yet issued a
795,Bind request.
796,•
797,BOUND_TX
798,A connected ESME has requested to bind as an ESME Transmitter (by issuing a
799,bind_transmitter PDU) and has received a response from the SMSC authorising its
800,bind request.
801,An ESME bound as a transmitter may send short messages to an SMSC for onward
802,"delivery to a Mobile Station or to another ESME. The ESME may also replace, query"
803,or cancel a previously submitted short message.
804,•
805,BOUND_RX
806,A connected ESME has requested to bind as an ESME Receiver (by issuing a
807,bind_receiver PDU) and has received a response from the SMSC authorising its Bind
808,request.
809,An ESME bound as a receiver may receive short messages from an SMSC which may
810,"be originated by a mobile station, by another ESME or by the SMSC itself (for example"
811,an SMSC delivery receipt).
812,•
813,BOUND_TRX
814,A connected ESME has requested to bind as an ESME Transceiver (by issuing a
815,bind_transceiver PDU) and has received a response from the SMSC authorising its
816,Bind request. An ESME bound as a Transceiver supports the complete set of operations
817,supported by a Transmitter ESME and a Receiver ESME.
818,Thus an ESME bound as a transceiver may send short messages to an SMSC for onward
819,delivery to a Mobile Station or to another ESME. The ESME may also receive short
820,"messages from an SMSC which may be originated by a mobile station, by another"
821,ESME or by the SMSC itself (for example an SMSC delivery receipt).
822,SMPP Protocol Specification v3.4
823,SMPP Protocol Overview
824,Issue 1.2
825,©SMPP Developers Forum
826,•
827,CLOSED (Unbound and Disconnected)
828,An ESME has unbound from the SMSC and has closed the network connection. The
829,SMSC may also unbind from the ESME.
830,©SMPP Developers Forum
831,Issue 1.2
832,SMPP Protocol Overview
833,SMPP Protocol Specification v3.4
834,2.2.1
835,Outbind
836,The purpose of the outbind operation is to allow the SMSC signal an ESME to originate a
837,bind_receiver request to the SMSC. An example of where such a facility might be applicable
838,would be where the SMSC had outstanding messages for delivery to the ESME.
839,An outbind SMPP session between an SMSC and an ESME can be initiated by the SMSC first
840,establishing a network connection with the ESME.
841,"Once a network connection has been established, the SMSC should bind to the ESME by"
842,issuing an “outbind” request. The ESME should respond with a “bind_receiver” request to
843,which the SMSC will reply with a “bind_receiver_resp”.
844,If the ESME does not accept the outbind session (e.g. because of an illegal system_id or
845,password etc.) the ESME should disconnect the network connection.
846,Once the SMPP session is established the characteristics of the session are that of a normal
847,SMPP receiver session.
848,Figure 2-2: Sample Outbind Sequence
849,ESME
850,SMSC
851,bind_receiver_resp
852,outbind
853,bind_receiver
854,deliver_sm
855,deliver_sm_resp
856,SMPP Protocol Specification v3.4
857,SMPP Protocol Overview
858,Issue 1.2
859,©SMPP Developers Forum
860,2.3
861,SMPP PDUs
862,The following table lists the SMPP PDU set and the context in which each PDU may be used:
863,SMPP PDU Name
864,Required SMPP
865,Session State
866,Issued by
867,ESME
868,Issued by
869,SMSC
870,bind_transmitter
871,OPEN
872,Yes
873,No
874,bind_transmitter_resp
875,OPEN
876,No
877,Yes
878,bind_receiver
879,OPEN
880,Yes
881,No
882,bind_receiver_resp
883,OPEN
884,No
885,Yes
886,bind_transceiver
887,OPEN
888,Yes
889,No
890,bind_transceiver_resp
891,OPEN
892,No
893,Yes
894,outbind
895,OPEN
896,No
897,Yes
898,unbind
899,BOUND_TX
900,BOUND_RX
901,BOUND_TRX
902,Yes
903,Yes
904,Yes
905,Yes
906,Yes
907,Yes
908,unbind_resp
909,BOUND_TX
910,BOUND_RX
911,BOUND_TRX
912,Yes
913,Yes
914,Yes
915,Yes
916,Yes
917,Yes
918,submit_sm
919,BOUND_TX
920,BOUND_TRX
921,Yes
922,Yes
923,No
924,No
925,submit_sm_resp
926,BOUND_TX
927,BOUND_TRX
928,No
929,No
930,Yes
931,Yes
932,submit_sm_multi
933,BOUND_TX
934,BOUND_TRX
935,Yes
936,Yes
937,No
938,No
939,submit_sm_multi_resp
940,BOUND_TX
941,BOUND_TRX
942,No
943,No
944,Yes
945,Yes
946,data_sm
947,BOUND_TX
948,BOUND_RX
949,BOUND_TRX
950,Yes
951,Yes
952,Yes
953,Yes
954,Yes
955,Yes
956,data_sm_resp
957,BOUND_TX
958,BOUND_RX
959,BOUND_TRX
960,Yes
961,Yes
962,Yes
963,Yes
964,Yes
965,Yes
966,deliver_sm
967,BOUND_RX
968,BOUND_TRX
969,No
970,No
971,Yes
972,Yes
973,deliver_sm_resp
974,BOUND_RX
975,BOUND_TRX
976,Yes
977,Yes
978,No
979,No
980,query_sm
981,BOUND_TX
982,BOUND_TRX
983,Yes
984,Yes
985,No
986,No
987,query_sm_resp
988,BOUND_TX
989,BOUND_TRX
990,No
991,No
992,Yes
993,Yes
994,Table 2-1: SMPP PDU Summary List
995,©SMPP Developers Forum
996,Issue 1.2
997,SMPP Protocol Overview
998,SMPP Protocol Specification v3.4
999,cancel_sm
1000,BOUND_TX
1001,BOUND_TRX
1002,Yes
1003,Yes
1004,No
1005,No
1006,cancel_sm_resp
1007,BOUND_TX
1008,BOUND_TRX
1009,No
1010,No
1011,Yes
1012,Yes
1013,replace_sm
1014,BOUND_TX
1015,Yes
1016,No
1017,replace_sm_resp
1018,BOUND_TX
1019,No
1020,Yes
1021,enquire_link
1022,BOUND_TX
1023,BOUND_RX
1024,BOUND_TRX
1025,Yes
1026,Yes
1027,Yes
1028,Yes
1029,Yes
1030,Yes
1031,enquire_link_resp
1032,BOUND_TX
1033,BOUND_RX
1034,BOUND_TRX
1035,Yes
1036,Yes
1037,Yes
1038,Yes
1039,Yes
1040,Yes
1041,alert_notification
1042,BOUND_RX
1043,BOUND_TRX
1044,No
1045,No
1046,Yes
1047,Yes
1048,generic_nack
1049,BOUND_TX
1050,BOUND_RX
1051,BOUND_TRX
1052,Yes
1053,Yes
1054,Yes
1055,Yes
1056,Yes
1057,Yes
1058,SMPP PDU Name
1059,Required SMPP
1060,Session State
1061,Issued by
1062,ESME
1063,Issued by
1064,SMSC
1065,Table 2-1: SMPP PDU Summary List
1066,SMPP Protocol Specification v3.4
1067,SMPP Protocol Overview
1068,Issue 1.2
1069,©SMPP Developers Forum
1070,2.4
1071,SMPP Network Layer Connections
1072,The underlying transport interface between the SMSC and ESME may be based on a TCP/IP
1073,or X.25 network connection.
1074,SMPP is an application layer protocol and is not intended to offer transport functionality. It is
1075,therefore assumed that the underlying network connection will provide reliable data transfer
1076,"from point to point including packet encoding, windowing, flow control and error handling."
1077,"Thus, at the SMPP level, the ESME and SMSC should treat the network connection as a reliable"
1078,transport which manages delivery and receipt of SMPP PDUs.
1079,The following diagram illustrates a generic SMPP interface implementation between an ESME
1080,and SMSC.
1081,Figure 2-3: Model of SMPP SMSC-ESME Interface
1082,"If required, it is expected that the network layer at the sending entity will handle the"
1083,segmentation of the SMPP PDUs for transmission as a series of fragmented packets over the
1084,"network connection. Likewise, the network layer of the receiving entity, shall re-assemble a"
1085,fragmented SMPP PDU before passing the entire SMPP PDU to the SMPP layer.
1086,SMSC
1087,ESME
1088,N/W
1089,Layer
1090,N/W
1091,Layer
1092,SMPP Encoding/Decoding by ESME/SMSC
1093,"Packet encoding,"
1094,"Fragmentation,"
1095,windowing & Error
1096,Handling of N/W Layer
1097,TCP/IP
1098,or
1099,X.25
1100,TCP/IP
1101,or
1102,X.25
1103,SMPP
1104,SMPP
1105,Interface
1106,SMPP
1107,SMPP
1108,Interface
1109,©SMPP Developers Forum
1110,Issue 1.2
1111,SMPP Protocol Overview
1112,SMPP Protocol Specification v3.4
1113,2.5
1114,SMPP messages sent from ESME to SMSC
1115,An ESME which sends short messages to an SMSC must be connected to the SMSC as an
1116,ESME Transmitter or an ESME Transceiver.
1117,Examples of SMPP message Protocol Data Units (PDUs) which may be sent from an ESME
1118,transmitter to the SMSC include:
1119,•
1120,submit_sm
1121,•
1122,data_sm
1123,"In addition to submission of messages to the SMSC, an ESME may perform the following"
1124,SMPP operations using the message identifier returned by the SMSC in the message
1125,acknowledgement:
1126,•
1127,query_sm
1128,- Query the SMSC for the status of a previously submitted message
1129,•
1130,cancel_sm
1131,- Cancel delivery of a previously submitted message
1132,•
1133,replace_sm
1134,- Replace a previously submitted message
1135,"SMPP PDUs sent to the SMSC by an ESME must, when received, be acknowledged with a"
1136,PDU response by the SMSC.
1137,Refer to Table 2-1 for details on the SMPP operations which may be sent from an ESME to the
1138,SMSC.
1139,2.5.1
1140,SMPP Message Response from SMSC to ESME
1141,The SMPP PDU response for a message submission to the SMSC will include a message
1142,identifier (which must be a unique handle assigned to that particular message) and a status
1143,which informs the ESME whether the submitted message is valid (i.e. accepted by the SMSC
1144,"for onward delivery) or invalid. In the latter case, the SMSC will return an appropriate error"
1145,status.
1146,•
1147,submit_sm_resp
1148,•
1149,data_sm_resp
1150,•
1151,query_sm_resp
1152,•
1153,cancel_sm_resp
1154,•
1155,replace_sm_resp
1156,SMPP Protocol Specification v3.4
1157,SMPP Protocol Overview
1158,Issue 1.2
1159,©SMPP Developers Forum
1160,2.5.2
1161,Typical SMPP session sequence - ESME Transmitter
1162,The following diagram illustrates a typical SMPP request/response sequence between an SMSC
1163,and an ESME bound as a Transmitter.
1164,Figure 2-4: Typical SMPP request/response sequence for an ESME Transmitter
1165,•
1166,The exchange of SMPP request and response PDUs between an ESME Transmitter and
1167,"SMSC may occur synchronously or asynchronously as shown above. Thus an ESME may,"
1168,"if desired, send multiple requests to the SMSC, without synchronously waiting for the"
1169,associated response PDUs.
1170,•
1171,A series of successive SMPP requests issued asynchronously by an ESME (as denoted by
1172,the number in parentheses in Figure 2-4 above) must be followed shortly after by a series
1173,of associated responses from the SMSC.
1174,•
1175,SMPP responses should be returned by the SMSC in the same order in which the original
1176,requests were received from the ESME. However this is not mandatory within SMPP and
1177,the ESME should be capable of handling responses received out of sequence.
1178,ESME
1179,SMSC
1180,submit_sm(2)
1181,submit_sm_resp(2)
1182,submit_sm_resp(3)
1183,query_sm(5)
1184,submit_sm(6)
1185,query_sm_resp(5)
1186,submit_sm_resp(6)
1187,bind_transmitter(1)
1188,bind_transmitter_resp(1)
1189,submit_sm(3)
1190,submit_sm(4)
1191,submit_sm_resp(4)
1192,unbind(7)
1193,unbind_resp(7)
1194,©SMPP Developers Forum
1195,Issue 1.2
1196,SMPP Protocol Overview
1197,SMPP Protocol Specification v3.4
1198,•
1199,The ESME should return SMPP responses to the SMSC in the same order in which the
1200,original requests were received. The only relevant PDU response that an ESME
1201,Transmitter returns in a transmitter session is an enquire_link_resp.
1202,Note:
1203,The maximum number of outstanding (i.e. unacknowledged) SMPP operations
1204,between an ESME and SMSC and vice versa is not specified explicitly in the SMPP
1205,Protocol Specification and will be governed by the SMPP implementation on the
1206,SMSC.
1207,"However, as a guideline it is recommended that no more than 10 (ten) SMPP messages"
1208,are outstanding at any time.
1209,SMPP Protocol Specification v3.4
1210,SMPP Protocol Overview
1211,Issue 1.2
1212,©SMPP Developers Forum
1213,2.6
1214,SMPP messages sent from SMSC to ESME
1215,The SMSC may deliver short messages to an ESME. In this case the ESME must be connected
1216,to the SMSC as an ESME Receiver or as an ESME Transceiver.
1217,Typical applications in which an ESME would operate as an SMPP Receiver include:-
1218,•
1219,an e-mail gateway accepting messages originated by mobile stations for onward delivery
1220,to internet e-mail boxes.
1221,•
1222,The SMSC may also send a ‘delivery receipt’ to the ESME which contains a returned
1223,delivery status of a previously submitted short message.
1224,Examples of SMPP message Protocol Data Units (PDUs) which may be sent from an SMSC to
1225,an ESME receiver include:
1226,•
1227,deliver_sm
1228,•
1229,data_sm
1230,SMPP PDUs delivered to an ESME by the SMSC must be acknowledged with a SMPP PDU
1231,response by the ESME when received*.
1232,* Exceptions to this rule are:
1233,-
1234,the alert_notification PDU.
1235,Refer to Table 2-1 for details on the SMPP operations which may be sent from an SMSC to an
1236,ESME.
1237,2.6.1
1238,SMPP Message Response from ESME to SMSC
1239,The SMPP PDU response from an ESME Receiver must preserve the PDU transaction
1240,identifier (contained in the sequence_number parameter) sent by the SMSC. The response must
1241,also include the command status which informs the SMSC whether the message delivered to
1242,"the ESME was valid (i.e. accepted by the ESME) or invalid. In the latter case, the ESME should"
1243,return an appropriate SMPP error status.
1244,Examples of SMPP message responses which may be sent from an ESME receiver to the SMSC
1245,include:
1246,•
1247,deliver_sm_resp
1248,•
1249,data_sm_resp
1250,©SMPP Developers Forum
1251,Issue 1.2
1252,SMPP Protocol Overview
1253,SMPP Protocol Specification v3.4
1254,2.6.2
1255,Typical SMPP session sequence - ESME Receiver
1256,The following diagram illustrates a typical SMPP request/response sequence between an SMSC
1257,and an ESME bound as a Receiver.
1258,Figure 2-5: Typical SMPP request/response sequence for an ESME Receiver
1259,•
1260,The exchange of SMPP request and response PDUs between an SMSC and ESME
1261,Receiver may be implemented synchronously or asynchronously as shown above. Thus
1262,"the SMSC may send multiple deliver_sm requests to the ESME, without synchronously"
1263,waiting for the associated response PDUs.
1264,•
1265,A series of successive SMPP requests issued asynchronously by an SMSC (as denoted by
1266,the number in parentheses) must be followed shortly after by a series of associated
1267,responses from the ESME.
1268,•
1269,The ESME should always return SMPP responses to the SMSC in the same order in which
1270,the original requests were received. However this is not mandatory within SMPP and the
1271,SMSC should be capable of handling responses received out of sequence.
1272,ESME
1273,SMSC
1274,deliver_sm(1)
1275,deliver_sm(2)
1276,deliver_sm_resp(1)
1277,deliver_sm_resp(2)
1278,deliver_sm(3)
1279,deliver_sm(4)
1280,deliver_sm_resp(3)
1281,deliver_sm_resp(4)
1282,bind_receiver(1)
1283,bind_receiver_resp(1)
1284,unbind(2)
1285,unbind_resp(2)
1286,SMPP Protocol Specification v3.4
1287,SMPP Protocol Overview
1288,Issue 1.2
1289,©SMPP Developers Forum
1290,•
1291,SMPP responses should be returned by the SMSC in the same order in which the original
1292,requests were received from the ESME. However this is not mandatory within SMPP and
1293,the ESME should be capable of handling responses received out of sequence.
1294,Note:
1295,The maximum number of outstanding (i.e. unacknowledged) SMPP operations
1296,between an ESME and SMSC and vice versa is not specified explicitly in the SMPP
1297,Protocol Specification and will be governed by the SMPP implementation on the
1298,SMSC.
1299,"However, as a guideline it is recommended that no more than 10 (ten) SMPP messages"
1300,are outstanding at any time.
1301,©SMPP Developers Forum
1302,Issue 1.2
1303,SMPP Protocol Overview
1304,SMPP Protocol Specification v3.4
1305,2.7
1306,Duplex message exchange between an SMSC and an
1307,ESME
1308,"The SMSC and ESME may operate a duplex messaging session, i.e. messages are exchanged"
1309,in both directions. In this case the ESME must be connected to the SMSC as an ESME
1310,Transceiver.
1311,Typical applications in which an ESME would operate as an SMPP Transceiver include:-
1312,•
1313,"Two-way message exchange between a mobile station and an ESME, e.g a WAP Proxy/"
1314,Server. The mobile subscriber initiates an information request to the WAP Proxy Server
1315,and the information response is returned via the SMSC to the mobile station.
1316,Examples of SMPP message Protocol Data Units (PDUs) which may be sent on an SMPP
1317,Transceiver session include:
1318,•
1319,data_sm
1320,•
1321,submit_sm
1322,•
1323,deliver_sm
1324,"In addition to submission of messages to the SMSC, an ESME may perform the following"
1325,SMPP operations using the message identifier returned by the SMSC in the message
1326,acknowledgement:
1327,•
1328,query_sm
1329,- Query the SMSC for the status of a previously submitted message
1330,•
1331,cancel_sm
1332,- Cancel delivery of a previously submitted message
1333,•
1334,replace_sm
1335,- Replace a previously submitted message
1336,SMPP PDUs delivered to an ESME by the SMSC (or vice versa) must be acknowledged with
1337,a PDU response when received*.
1338,* Exceptions to this rule are:
1339,-
1340,the alert_notification PDU.
1341,Refer to Table 2-1 for details on the SMPP operations which may be sent on an SMPP
1342,Transceiver session.
1343,SMPP Protocol Specification v3.4
1344,SMPP Protocol Overview
1345,Issue 1.2
1346,©SMPP Developers Forum
1347,2.7.1
1348,Typical SMPP session sequence - ESME Transceiver
1349,The following diagram illustrates a typical SMPP request/response sequence between an SMSC
1350,and an ESME bound as a Transceiver.
1351,Figure 2-6: Typical SMPP request/response sequence for an ESME Transceiver
1352,•
1353,The exchange of SMPP request and response PDUs between an SMSC and ESME
1354,Transceiver may be implemented synchronously or asynchronously as shown above. Thus
1355,"the SMSC may send multiple data_sm requests to the ESME, without synchronously"
1356,waiting for the associated response PDUs.
1357,•
1358,A series of successive SMPP requests issued asynchronously by an SMSC (as denoted by
1359,the number in parentheses) must be followed shortly after by a series of associated
1360,responses from the ESME. The sequence_number parameter in the SMPP header is used
1361,to correlate the SMPP response PDU with the SMPP request PDU.
1362,ESME
1363,SMSC
1364,data_sm (1)
1365,data_sm (3)
1366,data_sm_resp (1)
1367,data_sm_resp (3)
1368,data_sm (2)
1369,data_sm(3)
1370,data_sm_resp (2)
1371,data_sm_resp (3)
1372,bind_transceiver (1)
1373,bind_transceiver_resp (1)
1374,unbind (4)
1375,unbind_resp (4)
1376,data_sm (2)
1377,data_sm_resp (2)
1378,©SMPP Developers Forum
1379,Issue 1.2
1380,SMPP Protocol Overview
1381,SMPP Protocol Specification v3.4
1382,•
1383,The ESME should always return SMPP PDU responses to the SMSC in the same order in
1384,which the original requests were received. However this is not mandatory within SMPP
1385,and the SMSC should be capable of handling responses received out of sequence
1386,•
1387,SMPP responses should be returned by the SMSC in the same order in which the original
1388,requests were received from the ESME. However this is not mandatory within SMPP and
1389,the ESME should be capable of handling responses received out of sequence.
1390,Note:
1391,The maximum number of outstanding (i.e. unacknowledged) SMPP operations
1392,between an ESME and SMSC and vice versa is not specified explicitly in the SMPP
1393,Protocol Specification and will be governed by the SMPP implementation on the
1394,SMSC.
1395,"However, as a guideline it is recommended that no more than 10 (ten) SMPP messages"
1396,are outstanding at any time.
1397,SMPP Protocol Specification v3.4
1398,SMPP Protocol Overview
1399,Issue 1.2
1400,©SMPP Developers Forum
1401,2.8
1402,SMPP Error Handling
1403,"All SMPP operations consist of a request PDU and associated response PDU, with the"
1404,exception of the alert_notification PDU (for which there is no SMPP response).
1405,"In all other cases, the receiving entity must return the associated SMPP response PDU to an"
1406,"SMPP request PDU, indicating that the original PDU has been received at the destination. Until"
1407,"such a response is received by the originator, it must be assumed that the PDU has not been"
1408,received at the destination.
1409,"In the event that the original SMPP request PDU is found to contain an error, the receiving"
1410,entity must return a response with an appropriate error code inserted in the command_status
1411,"field of the response PDU header (Ref. Section 3.2, “SMPP PDU Format - Overview” )."
1412,"If the receiving entity finds an error in the PDU header, it should return a generic_nak PDU to"
1413,"the originator (Ref. Section 4.3, “GENERIC_NACK” PDU)."
1414,2.9
1415,SMPP Timers
1416,"To ensure the efficient exchange of SMPP transactions, it is recommended that each SMPP"
1417,session be managed using configurable timers on both the ESME and SMSC communicating
1418,SMPP entities as follows:-
1419,•
1420,"An SMPP session initiation timer to ensure that when an ESME initiates an SMPP session,"
1421,that this occurs within a specified period after opening a network connection to the SMSC.
1422,•
1423,An SMPP session timer to enable either the ESME or SMSC request the SMPP session
1424,status of the other communicating SMPP entity via the enquire_link command.
1425,•
1426,"An SMPP inactivity timer which should specify the maximum period after which time, if"
1427,"no SMPP messages are exchanged, the SMPP session may be dropped gracefully."
1428,•
1429,An SMPP transaction timer which specifies the time lapse allowed between an SMPP
1430,request and the corresponding SMPP response.
1431,"Further details on implementation of SMPP timers are included in Section 7.2, “Timer"
1432,Definitions” .
1433,©SMPP Developers Forum
1434,Issue 1.2
1435,SMPP Protocol Overview
1436,SMPP Protocol Specification v3.4
1437,2.10 Message Modes
1438,"SMPP offers a Message Mode option which, if supported on the SMSC, allows an ESME to"
1439,select the SMSC message delivery mechanism. The typical delivery mechanisms that may be
1440,offered by an SMSC are:-
1441,•
1442,Store and Forward
1443,•
1444,Datagram
1445,•
1446,Transaction mode
1447,These Message Modes are described in more detail in the following sections.
1448,2.10.1
1449,Store and Forward Message Mode
1450,The conventional approach to SMS has been to store the message in a SMSC storage area (e.g.
1451,message database) before forwarding the message for delivery to the recipient SME. With this
1452,"model, the message remains securely stored until all delivery attempts have been made by the"
1453,SMSC. This mode of messaging is commonly referred to as “store and forward”.
1454,"SMPP supports the “store and forward” delivery mechanism via the submit_sm operation,"
1455,which enables the ESME to send a message to the SMSC where it is stored until it is
1456,successfully delivered or until the message validity period expires. The store and forward mode
1457,is also supported via the data_sm operation.
1458,The “store and forward” message mode also facilitates subsequent SMPP operations on the
1459,"stored short message such as query_sm, replace_sm and cancel_sm. The submit_sm PDU also"
1460,facilitates “replace-if-present” functionality which requires that the original message be stored
1461,on the SMSC.
1462,Note:
1463,"To determine the eventual outcome of the SMS delivery, the ESME must request an"
1464,SMSC Delivery Receipt in the submit_sm or data_sm operation.
1465,The following diagram shows the message flow for a store and forward message where the
1466,ESME is bound both as a Transmitter and as a Receiver. The ESME has requested an SMSC
1467,Delivery Receipt.
1468,SMPP Protocol Specification v3.4
1469,SMPP Protocol Overview
1470,Issue 1.2
1471,©SMPP Developers Forum
1472,Figure 2-7: Typical SMPP sequence for a registered store and forward message
1473,ESME
1474,SMSC
1475,bind_transmitter
1476,bind_transmitter_resp
1477,MS
1478,Network Delivery Attempt
1479,NACK
1480,Network Delivery Attempt
1481,ACK
1482,Network Delivery Attempt
1483,deliver_sm_resp
1484,submit_sm (registered_delivery
1485,submit_sm_resp
1486,bind_receiver
1487,bind_receiver_resp
1488,= SMSC Delivery Receipt)
1489,deliver_sm (esm_class
1490,= SMSC Delivery Receipt)
1491,deliver_sm_resp
1492,deliver_sm (esm_class
1493,= SMSC Delivery Receipt)
1494,submit_sm (registered_delivery
1495,submit_sm_resp
1496,= SMSC Delivery Receipt)
1497,Wireless Network Protocol
1498,SMPP
1499,ACK
1500,©SMPP Developers Forum
1501,Issue 1.2
1502,SMPP Protocol Overview
1503,SMPP Protocol Specification v3.4
1504,2.10.2
1505,Datagram Message Mode
1506,The Datagram Message Mode emulates the datagram paradigm used in other data
1507,communication protocols such as UDP datagram packet transfer and focuses on high message
1508,throughput without the associated secure storage and retry guarantees of Store and Forward
1509,Message Mode. In Datagram Message Mode the message originator (i.e. the ESME) does not
1510,receive any form of delivery acknowledgement.
1511,"In Datagram Message Mode, typical SMSC functions such as scheduled delivery, registered"
1512,delivery etc. do not apply. Datagram Message Mode is designed for high throughput
1513,applications that may not require the highly secure delivery functionality offered by the Store
1514,and Forward message mode. It is ideally suited for applications where the data content is
1515,"transient in nature, for example, vehicle tracking applications."
1516,SMPP supports datagram mode via the data_sm operation. The esm_class parameter is used to
1517,"select Datagram Message Mode. Refer to section 5.2.12, “esm_class” for details on the"
1518,esm_class parameter.
1519,The datagram mode is also supported in the submit_sm operation to provide easy evolution for
1520,existing SMPP applications.
1521,Figure 2-8: Typical SMPP sequence for message delivery in Datagram message mode
1522,ESME
1523,SMSC
1524,data_sm (esm_class = datagram)
1525,bind_transceiver
1526,bind_transceiver_resp
1527,MS
1528,Network Delivery Attempt
1529,ACK
1530,Wireless Network Protocol
1531,SMPP
1532,data_sm_resp
1533,SMPP Protocol Specification v3.4
1534,SMPP Protocol Overview
1535,Issue 1.2
1536,©SMPP Developers Forum
1537,2.10.3
1538,Transaction Message Mode
1539,Transaction Message Mode allows the ESME message originator to receive a form of delivery
1540,acknowledgment (that indicates if the message has been successfully or unsuccessfully
1541,delivered to the destination MS) within the SMPP response PDU.
1542,Transaction Message Mode is designed for applications that involve real-time messaging where
1543,"an ESME requires a synchronous end-to-end delivery outcome, without the need for long term"
1544,SMSC storage. Such applications could include for example multicast of dispatch information
1545,"to vehicle fleets, etc."
1546,SMPP supports Transaction Message Mode via the data_sm operation only. The esm_class
1547,"parameter is used to select Transaction Message Mode. Refer to section 5.2.12, for details on"
1548,the esm_class parameter.
1549,Note:
1550,The fundamental difference between the Datagram and Transaction Message Modes is
1551,"that in Transaction Message Mode, the ESME receives a data_sm_resp indicating the"
1552,"end-to-end delivery outcome. In Datagram Message Mode, the response PDU just"
1553,indicates that the message has been accepted by the SMSC over the SMPP connection.
1554,Figure 2-9: Typical SMPP sequence for message delivery in Transaction message mode
1555,ESME
1556,SMSC
1557,data_sm (esm_class = forward)
1558,bind_transmitter
1559,bind_transmitter_resp
1560,MS
1561,Network Delivery Attempt
1562,ACK
1563,data_sm_resp
1564,Wireless Data Protocol
1565,SMPP
1566,©SMPP Developers Forum
1567,Issue 1.2
1568,SMPP Protocol Overview
1569,SMPP Protocol Specification v3.4
1570,2.11 Message Types
1571,"In addition to “normal” short messages, special messages can be transferred between ESME"
1572,"and the SMSC in a submit_sm, deliver_sm or a data_sm operation. The message type is defined"
1573,in the esm_class parameter of the above SMPP operations.
1574,The following message types are supported in SMPP:
1575,SMSC Delivery Receipt
1576,"This message type is used to carry an SMSC delivery receipt. The SMSC, on detecting the final"
1577,"state of a registered message stored in the SMSC, should generate a receipt message addressed"
1578,to the originator of the message. The SMSC Delivery Receipt is carried as the user data payload
1579,in the SMPP deliver_sm or data_sm operation.
1580,The following fields are relevant in the deliver_sm and data_sm operations when used for
1581,transmitting delivery receipts.
1582,•
1583,"source address (i.e. source_addr_ton, source_addr_npi, source_addr)"
1584,The source address will be taken from the destination address of the original short message
1585,which generated the delivery receipt.
1586,•
1587,"destination address (i.e. dest_addr_ton, dest_addr_npi, destination_addr)"
1588,The destination address will be taken from the source address of the original short message
1589,which generated the delivery receipt.
1590,•
1591,esm_class
1592,•
1593,message_state
1594,•
1595,network_error_code
1596,•
1597,receipted_message_id
1598,Intermediate Notification
1599,An intermediate notification is a special form of message that the SMSC may send to an ESME
1600,for a mobile terminated message delivery. It provides an intermediate status of a message
1601,delivery attempt.
1602,Typical uses are
1603,•
1604,to provide a “memory capacity exceeded” notification to a Voice Mail System.
1605,•
1606,to report the outcome of the first delivery attempt that has failed but the message is still
1607,held in the SMSC for further delivery attempts.
1608,Support for Intermediate Notification functionality is specific to the SMSC implementation and
1609,the SMSC Service Provider and is beyond the scope of this specification.
1610,SME Delivery Acknowledgement
1611,"Despite its name, an SME Delivery Acknowledgement is not an indication that the short"
1612,"message has arrived at the SME, but rather an indication from the recipient SME that the user"
1613,has read the short message.
1614,SMPP Protocol Specification v3.4
1615,SMPP Protocol Overview
1616,Issue 1.2
1617,©SMPP Developers Forum
1618,"For an MS-based SME, an SME Delivery Acknowledgement is sent when the MS user or MS"
1619,application has read the message from the SMS storage unit (e.g. SIM card).
1620,For a fixed SME (i.e. ESME) the circumstances in which an SME Delivery Acknowledgement
1621,may be sent are beyond the scope of this specification.
1622,Note:
1623,The SME Delivery Acknowledgement function may not be supported on all network
1624,types.
1625,SME Manual/User Acknowledgement
1626,A Manual/User Acknowledgement is an application generated reply message sent in response
1627,"to an application request message. For example, this message type could contain a selected"
1628,menu item number from a menu list sent in an application request message.
1629,Note:
1630,The Manual/User Acknowledgement function may not be supported on all network
1631,types.
1632,Conversation Abort
1633,This message type is unique to Interactive Teleservice defined by the Korean CDMA carriers
1634,organization. It is sent by a MS-based SME to indicate the unexpected termination of an
1635,interactive session. A Conversation Abort may be carried in a deliver_sm or data_sm PDU.
1636,Note:
1637,The Conversation Abort function is not supported on all network types.
1638,©SMPP Developers Forum
1639,Issue 1.2
1640,SMPP PDU Type and Format Definitions
1641,SMPP Protocol Specification v3.4
1642,3.
1643,SMPP PDU Type and Format Definitions
1644,3.1
1645,SMPP PDU - Type Definitions
1646,The following SMPP PDU data type definitions are used to define the SMPP parameters:
1647,Notes: (i) Reference made to NULL settings of Octet-String fields implies that the field
1648,"consists of a single NULL character, i.e., an octet encoded with value 0x00 (zero)."
1649,"(ii) Where reference is made to NULL settings of Integer fields, this implies that the"
1650,field is zero filled.
1651,"(iii) In the case of all C-Octet String formats, the maximum field size is shown as a"
1652,"combination of string length and the NULL terminator, i.e., an 8-character C-Octet"
1653,String is encoded in 9 octets when the NULL terminator is included.
1654,Integer
1655,An unsigned value with the defined number of octets.
1656,The octets will always be transmitted MSB first (Big Endian).
1657,C-Octet String
1658,A series of ASCII characters terminated with the NULL character.
1659,C-Octet String
1660,(Decimal)
1661,"A series of ASCII characters, each character representing a"
1662,decimal digit (0 - 9) and terminated with the NULL character.
1663,C-Octet String
1664,(Hex)
1665,"A series of ASCII characters, each character representing a"
1666,hexadecimal digit (0 - F) and terminated with the NULL character.
1667,Octet String
1668,"A series of octets, not necessarily NULL terminated."
1669,SMPP Protocol Specification v3.4
1670,SMPP PDU Type and Format Definitions
1671,Issue 1.2
1672,©SMPP Developers Forum
1673,3.1.1
1674,SMPP Parameter Field Size Notation
1675,The following notation style is used throughout. Note that some SMPP strings are optional and
1676,others mandatory.
1677,Size octets
1678,Type
1679,Description of String type specified
1680,4
1681,Integer
1682,Fixed size integer field. In this example the integer is of size 32
1683,bits (4 octets)
1684,Var
1685,Max 16
1686,C-Octet
1687,String
1688,"This string is of variable length from 1-15 ASCII characters,"
1689,followed by an octet containing the NULL terminator.
1690,An empty string is encoded as a single octet containing the
1691,NULL character (0x00).
1692,Fixed
1693,1 or 17
1694,C-Octet
1695,String
1696,This string has two possible lengths:-
1697,1 octet containing the NULL character or
1698,a fixed number of characters terminated with the NULL
1699,character (in this example 16 characters plus the NULL
1700,character).
1701,Var
1702,0 - 254
1703,Octet
1704,String
1705,Variable size octet string field. In this example the size of the
1706,octet string field can vary from 0 to 254 octets.
1707,Table 3-1: C-Octet String Notation
1708,©SMPP Developers Forum
1709,Issue 1.2
1710,SMPP PDU Type and Format Definitions
1711,SMPP Protocol Specification v3.4
1712,3.2
1713,SMPP PDU Format - Overview
1714,The general format of an SMPP PDU consists of a PDU header followed by a PDU body as
1715,outlined in the following table.
1716,The SMPP Header is a mandatory part of every SMPP PDU and must always be present. The
1717,SMPP PDU Body is optional and may not be included with every SMPP PDU.
1718,"The format of each SMPP PDU is described in more detail in the following section 4. ""SMPP"
1719,"PDU Definition""."
1720,SMPP PDU
1721,PDU Header (mandatory)
1722,PDU Body (Optional)
1723,command
1724,length
1725,command
1726,id
1727,command
1728,status
1729,sequence
1730,number
1731,PDU Body
1732,4 octets
1733,Length = (Command Length value - 4) octets
1734,Table 3-2: SMPP PDU Format Overview
1735,SMPP Protocol Specification v3.4
1736,SMPP PDU Type and Format Definitions
1737,Issue 1.2
1738,©SMPP Developers Forum
1739,3.2.1
1740,SMPP PDU Layout
1741,H
1742,E
1743,A
1744,D
1745,E
1746,R
1747,SMPP PDU Field
1748,Size
1749,octets
1750,Type
1751,Description
1752,command_length
1753,4
1754,Integer
1755,The command_length field defines the total
1756,octet length of the SMPP PDU packet
1757,including the length field.
1758,command_id
1759,4
1760,Integer
1761,The command_id field identifies the particular
1762,"SMPP PDU, e.g., submit_sm, query_sm, etc."
1763,A unique command identifier is allocated to
1764,each SMPP request PDU in the range:
1765,0x00000000 to 0x000001FF
1766,A unique command identifier is also allocated
1767,to each SMPP response PDU in the range:
1768,0x80000000 to 0x800001FF
1769,(Note that an SMPP response command_id is
1770,identical to the corresponding request SMPP
1771,"command_id, but with bit 31 set)."
1772,Refer to chapter 5. for details of the complete
1773,SMPP Command ID set.
1774,command_status
1775,4
1776,Integer
1777,The command_status field indicates the
1778,success or failure of an SMPP request.
1779,It is relevant only in the SMPP response PDU
1780,and it must contain a NULL value in an SMPP
1781,request PDU.
1782,The complete list of SMPP Error codes is
1783,defined in Chapter 5.
1784,sequence_number
1785,4
1786,Integer
1787,This field contains a sequence number which
1788,allows SMPP requests and responses to be
1789,associated for correlation purposes. The use of
1790,sequence numbers for message correlation
1791,allows SMPP PDUs to be exchanged
1792,asynchronously.
1793,Assignment of the sequence_number is the
1794,responsibility of the SMPP PDU originator.
1795,The sequence_number should be increased
1796,monotonically for each submitted SMPP
1797,request PDU and must be preserved in the
1798,associated SMPP response PDU.
1799,The sequence_number may range from:
1800,0x00000001 to 0x7FFFFFFF.
1801,Table 3-3: SMPP PDU Format Description
1802,©SMPP Developers Forum
1803,Issue 1.2
1804,SMPP PDU Type and Format Definitions
1805,SMPP Protocol Specification v3.4
1806,Note:
1807,"Some SMPP PDUs may only have a Header part only, for example, the enquire_link"
1808,PDU.
1809,B
1810,O
1811,D
1812,Y
1813,Mandatory
1814,Parameters
1815,var.
1816,mixed
1817,A list of mandatory parameters corresponding
1818,to that SMPP PDU defined in the command_id
1819,field.
1820,The complete list of mandatory parameters is
1821,"detailed in section 4. ""SMPP PDU Definition"""
1822,with the description of each SMPP PDU.
1823,Optional
1824,Parameters
1825,var.
1826,mixed
1827,A list of Optional Parameters corresponding to
1828,that SMPP PDU defined in the command_id
1829,field and included as required.
1830,The complete list of optional parameters is
1831,"detailed in section 4. ""SMPP PDU"
1832,"Definition""with the description of each SMPP"
1833,PDU.
1834,Table 3-3: SMPP PDU Format Description
1835,SMPP Protocol Specification v3.4
1836,SMPP PDU Type and Format Definitions
1837,Issue 1.2
1838,©SMPP Developers Forum
1839,3.2.2
1840,SMPP PDU Length
1841,"The command_length field at the beginning of the SMPP PDU header, indicates the total"
1842,number of octets contained in that SMPP PDU. The command_length field contains a 4-octet
1843,integer transmitted in Big Endian format.
1844,"To decode an SMPP PDU, the ESME or SMSC should first read the command_length field (4"
1845,octets) to determine the PDU length. The amount of remaining data is then determined by
1846,subtracting the length of the command_length field (4 octets) from this total PDU length as
1847,"provided by the command_length field value. Thus, extracting a command length of value N,"
1848,indicates that N-4 octets are remaining for the given PDU.
1849,Example:-
1850,The following data-stream example illustrates how the SMPP PDU header is
1851,encoded:
1852,00 00 00 2F 00 00 00 02 00 00 00 00 00 00 00 01 53 4D 50 50 33 54 45 53 54 00
1853,73 65 63 72 65 74 30 38 00 53 55 42 4D 49 54 31 00 00 01 01 00
1854,Note:
1855,Values are shown in Hex format.
1856,The header would be decoded as follows:
1857,00 00 00 2F
1858,Command Length
1859,0x0000002F
1860,00 00 00 02
1861,Command ID
1862,0x00000002 (bind_transmitter)
1863,00 00 00 00
1864,Command Status
1865,0x00000000
1866,00 00 00 01
1867,Sequence Number
1868,0x00000001
1869,The remaining data represents the PDU body (which in this example relates to the
1870,bind_transmitter PDU).
1871,3.2.3
1872,SMPP Message length and extended message length
1873,The length of the short message text (or user data) is defined in the sm_length field of the
1874,"submit_sm, submit_multi, deliver_sm and replace_sm SMPP PDUs."
1875,The maximum message length which can be specified in sm_length field (see section 5.2.21) is
1876,"254 octets. If an ESME wishes to submit a message of length greater than 254 octets, the"
1877,sm_length field must be set to NULL and the message_payload optional parameter must be
1878,populated with the message length value and user data.
1879,"SMPP supports extended message lengths in the submit_sm, submit_multi, data_sm and"
1880,deliver_sm PDUs.
1881,"Refer to section 3.2.4 ""Optional Parameters"" for detail on Optional Parameters."
1882,Note:
1883,The actual short message length which can be transmitted to a MS may vary according
1884,to the underlying network.
1885,©SMPP Developers Forum
1886,Issue 1.2
1887,SMPP PDU Type and Format Definitions
1888,SMPP Protocol Specification v3.4
1889,3.2.4
1890,Optional Parameters
1891,"Optional Parameters are fields, which may be present in a message. Optional Parameters"
1892,"provide a mechanism for the future introduction of new parameters, as and when defined in"
1893,future versions of the SMPP protocol.
1894,"Optional Parameters must always appear at the end of a PDU , in the ""Optional Parameters"""
1895,"section of the SMPP PDU. However, they may be included in any convenient order within the"
1896,"""Optional Parameters"" section of the SMPP PDU and need not be encoded in the order"
1897,presented in this document.
1898,"For a particular SMPP PDU, the ESME or SMSC may include some, all or none of the defined"
1899,optional parameters as required for the particular application context. For example a paging
1900,system may only need to include the “callback number” related optional parameters in a
1901,submit_sm operation.
1902,3.2.4.1
1903,Optional Parameter Format
1904,"All optional parameters have the following general TLV (Tag, Length, Value) format. The"
1905,"definition of the Tag, Length and Value for each optional parameter is defined in chapter 5."
1906,Parameter Name
1907,Size
1908,Type
1909,Description
1910,Tag
1911,2
1912,Integer
1913,The Tag field is used to uniquely identify
1914,the particular optional parameter in
1915,question.
1916,The optional parameter Tag field is
1917,always 2 octets in length.
1918,Length
1919,2
1920,Integer
1921,The Length field indicates the length of
1922,the Value field in octets.
1923,Note that this length does not include the
1924,length of the Tag and Length fields.
1925,The optional parameter Length field is
1926,always 2 octets in length.
1927,Value
1928,variable
1929,variable
1930,The Value field contains the actual data
1931,for the optional parameter in question.
1932,Table 3-4: Optional Parameter Format
1933,SMPP Protocol Specification v3.4
1934,SMPP PDU Type and Format Definitions
1935,Issue 1.2
1936,©SMPP Developers Forum
1937,3.3
1938,Guidelines for SMPP Forward Compatibility
1939,Forward Compatibility procedures allow a functional entity (i.e. SMSC or ESME) using one
1940,"version of the SMPP protocol to easily communicate with an entity using a later, more enhanced"
1941,"version of the protocol. Hence, new enhancements to existing SMPP PDUs are implemented"
1942,using optional parameters.
1943,The following guidelines must be followed in SMPP implementations to ensure that this
1944,process is implemented successfully and consistently:
1945,•
1946,"If an SMPP entity receives an unrecognized PDU/command, it must return a"
1947,generic_nack PDU indicating an invalid command_id in the command_status field of the
1948,header.
1949,•
1950,The SMPP entity receiving a message which includes Optional Parameters shall first
1951,"inspect the Tag field of the Operational Parameter, as follows:"
1952,-
1953,If the Optional Parameter Tag is recognized and supported by the receiving SMPP
1954,"entity for the particular SMPP operation, the Optional Parameter shall be processed."
1955,-
1956,If an Optional Parameter Tag is recognized but not expected for the particular SMPP
1957,"operation, the optional parameter shall be ignored."
1958,-
1959,If the Optional Parameter Tag is unrecognized or unsupported by the receiving SMPP
1960,"entity, that particular Optional Parameter shall be ignored and the next Optional"
1961,Parameter in the sequence shall be processed.
1962,•
1963,An SMPP entity receiving a parameter value defined as “reserved” should use the default
1964,"value if a “default” setting is defined, otherwise the parameter should be ignored."
1965,•
1966,"If the Parameter value is otherwise unrecognized or invalid, the SMPP entity should return"
1967,an error indicating the Parameter Value is invalid.
1968,•
1969,"An SMPP entity detecting that an Optional Parameter, which is required in the context of"
1970,"the operation, is not present should return a response message with an “Expected Optional"
1971,Parameter missing” error.
1972,•
1973,A Variable length field Parameter may have it’s maximum length definition extended in
1974,subsequent versions of the SMPP protocol. An SMPP entity receiving a variable length
1975,Parameter whose length is greater than the maximum length the entity supports for that
1976,Parameter should reject the Parameter with an error indicating “invalid parameter length”.
1977,©SMPP Developers Forum
1978,Issue 1.2
1979,SMPP PDU Type and Format Definitions
1980,SMPP Protocol Specification v3.4
1981,3.4
1982,Guidelines for SMPP Backward Compatibility
1983,Backward Compatibility procedures allow a functional entity using one version of the SMPP
1984,protocol to communicate with an entity using an older version of the protocol.
1985,The following guidelines must be followed in SMPP implementations to ensure that this
1986,process is implemented successfully and consistently:
1987,•
1988,Existing SMPP PDUs must not be removed from the protocol.
1989,•
1990,The effect of receiving any existing message in a new modified format must be same as
1991,that in previous versions. Thus the addition of new parameters or parameter values is
1992,purely additive.
1993,•
1994,Optional parameters shall not become mandatory parameters.
1995,•
1996,Mandatory parameters shall not become optional parameters.
1997,•
1998,Additional mandatory parameters shall not be added to an existing SMPP PDU.
1999,•
2000,Existing mandatory parameters shall not be removed from an existing SMPP PDU.
2001,•
2002,The meaning of any existing parameter value shall not be changed in the new version of
2003,the protocol.
2004,"As the concept of Optional Parameters was introduced in this version of the protocol, the"
2005,following special guidelines are defined:
2006,•
2007,An SMSC that implements SMPP v3.4 or a later version of this protocol must not send
2008,optional parameters to an ESME that implements an earlier SMPP version (e.g. v3.3). An
2009,SMSC shall determine the SMPP version supported by an ESME during the bind
2010,operation. An ESME supporting SMPP v3.3 or earlier will set the interface_version
2011,parameter in the bind operation to a value less than 0x34.
2012,•
2013,An SMSC supporting v3.4 or later should return the SMPP version it supports in the
2014,sc_interface_version parameter of the bind response PDU. If a bind response does not
2015,"contain the sc_interface_version parameter, then the ESME should assume that the SMSC"
2016,does not support the use of optional parameters.
2017,•
2018,An ESME that implements SMPP v3.4 or a later version of this protocol must not send
2019,optional parameters to an SMSC that implements an earlier version of this protocol. The
2020,ESME shall determine the SMSC version support from the SMPP bind response PDU.
2021,•
2022,An SMSC that implements SMPP v3.4 or later must not generate message IDs greater than
2023,8 octets when communicating with an ESME that supports SMPP v3.3 or earlier.
2024,SMPP Protocol Specification v3.4
2025,SMPP PDU Definition
2026,Issue 1.2
2027,©SMPP Developers Forum
2028,4.
2029,SMPP PDU Definition
2030,4.1
2031,“BIND” Operation
2032,The purpose of the SMPP bind operation is to register an instance of an ESME with the SMSC
2033,system and request an SMPP session over this network connection for the submission or
2034,"delivery of messages. Thus, the Bind operation may be viewed as a form of SMSC login request"
2035,to authenticate the ESME entity wishing to establish a connection.
2036,"As described previously, an ESME may bind to the SMSC as either a Transmitter (called ESME"
2037,"Transmitter), a Receiver (called ESME Receiver) or a Transceiver (called ESME Transceiver)."
2038,"There are three SMPP bind PDUs to support the various modes of operation, namely"
2039,"bind_transmitter, bind_transceiver and bind_receiver. The command_id field setting specifies"
2040,which PDU is being used.
2041,An ESME may bind as both an SMPP Transmitter and Receiver using separate
2042,bind_transmitter and bind_receiver operations (having first established two separate network
2043,connections). Alternatively an ESME can also bind as a Transceiver having first established a
2044,single network connection.
2045,If an SMSC does not support the bind_transmitter and bind_receiver operations then it should
2046,return a response message with an ”Invalid Command ID” error and the ESME should
2047,reattempt to bind using the bind_transceiver operation. Similarly if an SMSC does not support
2048,the bind_transceiver command then it should return a response message with an ”Invalid
2049,Command ID” error and the ESME should reattempt to bind using the bind_transmitter or
2050,bind_receiver operations or both bind_transmitter and bind_receiver operations as
2051,appropriate.
2052,ESME Transmitter
2053,An ESME bound as a Transmitter is authorised to send short messages to the SMSC and to
2054,receive the corresponding SMPP responses from the SMSC.
2055,An ESME indicates its desire not to receive (mobile) originated messages from other SME’s
2056,(e.g. mobile stations) by binding as a Transmitter.
2057,Refer to section 2.3 for a summary list of the SMPP PDUs available to an ESME Transmitter.
2058,ESME Receiver
2059,An ESME bound as a Receiver is authorised to receive short messages from the SMSC and to
2060,return the corresponding SMPP message responses to the SMSC.
2061,Refer to section 2.3 for a summary list of the SMPP PDUs available to an ESME Receiver.
2062,ESME Transceiver
2063,An ESME bound as a Transceiver is allowed to send messages to the SMSC and receive
2064,messages from the SMSC over a single SMPP session.
2065,Refer to section 2.3 for a summary list of the SMPP PDUs available to an ESME Transceiver.
2066,©SMPP Developers Forum
2067,Issue 1.2
2068,SMPP PDU Definition
2069,SMPP Protocol Specification v3.4
2070,4.1.1
2071,“BIND_TRANSMITTER” Syntax
2072,The format of the SMPP bind_transmitter PDU is defined in the following table.
2073,H
2074,E
2075,A
2076,D
2077,E
2078,R
2079,Field Name
2080,Size
2081,octets
2082,Type
2083,Description
2084,Ref.
2085,command_length
2086,4
2087,Integer
2088,Defines the overall length of the
2089,bind_transmitter PDU.
2090,5.1.1
2091,command_id
2092,4
2093,Integer
2094,Value corresponding to
2095,bind_transmitter request.
2096,5.1.2
2097,command_status
2098,4
2099,Integer
2100,Not used in bind_transmitter PDU.
2101,Must be set to NULL.
2102,5.1.3
2103,sequence_numbera
2104,"a. There is no specific requirement on how the sequence_number should be set. However, it is recommended"
2105,that the sequence number be a monotonically increasing number.
2106,4
2107,Integer
2108,Set to a unique sequence number.
2109,The associated bind_transmitter_resp
2110,PDU will echo the same sequence
2111,number.
2112,5.1.4
2113,B
2114,O
2115,D
2116,Y
2117,system_idb
2118,"b. The recommended use of system_id is to identify the binding entity, e.g., “InternetGW” in the case of an"
2119,Internet Gateway or ‘VMS’ for a Voice Mail System.
2120,Var.
2121,max
2122,16
2123,C-
2124,Octet
2125,String
2126,Identifies the ESME system
2127,requesting to bind as a transmitter
2128,with the SMSC.
2129,5.2.1
2130,passwordc
2131,c. The password is used for authentication to secure SMSC access. The ESME may set the password to NULL
2132,to gain insecure access (if allowed by SMSC administration).
2133,Var.
2134,max
2135,9
2136,C-
2137,Octet
2138,String
2139,The password may be used by the
2140,SMSC to authenticate the ESME
2141,requesting to bind.
2142,5.2.2
2143,system_typed
2144,"d. The system_type (optional) may be used to categorise the system, e.g., “EMAIL”, “WWW”, etc."
2145,Var.
2146,13
2147,C-
2148,Octet
2149,String
2150,Identifies the type of ESME system
2151,requesting to bind as a transmitter
2152,with the SMSC.
2153,5.2.3
2154,interface_version
2155,1
2156,Integer
2157,Indicates the version of the SMPP
2158,protocol supported by the ESME.
2159,5.2.4
2160,addr_ton
2161,1
2162,Integer
2163,Indicates Type of Number of the
2164,ESME address.
2165,If not known set to NULL
2166,5.2.5
2167,addr_npi
2168,1
2169,Integer
2170,Numbering Plan Indicator for ESME
2171,address.
2172,If not known set to NULL.
2173,5.2.6
2174,address_range
2175,Var.
2176,max
2177,41
2178,C-
2179,Octet
2180,String
2181,The ESME address.
2182,If not known set to NULL.
2183,5.2.7
2184,Table 4-1: SMPP bind_transmitter PDU
2185,SMPP Protocol Specification v3.4
2186,SMPP PDU Definition
2187,Issue 1.2
2188,©SMPP Developers Forum
2189,4.1.2
2190,“BIND_TRANSMITTER_RESP” Syntax
2191,The SMPP bind_transmitter_resp PDU is used to reply to a bind_transmitter request. The
2192,format of the SMPP bind_transmitter_resp PDU is defined in the following table.
2193,Note:
2194,The body portion of the SMPP bind_transmitter_resp PDU is not returned if the
2195,"command_status field contains a non-zero value; i.e., if there is an error in the original"
2196,"bind_transmitter request, the SMSC system_id is not returned."
2197,H
2198,E
2199,A
2200,D
2201,E
2202,R
2203,Field Name
2204,Size
2205,octets
2206,Type
2207,Description
2208,Ref.
2209,command_length
2210,4
2211,Integer
2212,Defines the overall length of the
2213,bind_transmitter_resp PDU.
2214,5.1.1
2215,command_id
2216,4
2217,Integer
2218,Value corresponding to
2219,bind_transmitter_resp.
2220,5.1.2
2221,command_status
2222,4
2223,Integer
2224,Indicates status (success or error
2225,code) of original bind_transmitter
2226,request.
2227,5.1.3
2228,sequence_number
2229,4
2230,Integer
2231,Set to sequence number of original
2232,bind_transmitter request.
2233,5.1.4
2234,B
2235,O
2236,D
2237,Y
2238,system_id
2239,Var.
2240,max
2241,16
2242,C-
2243,Octet
2244,String
2245,SMSC identifier.
2246,Identifies the SMSC to the ESME.
2247,5.2.1
2248,OPTIONAL PARAMETERS for BIND_TRANSMITTER_RESP
2249,sc_interface_version
2250,TLV
2251,SMPP version supported by SMSC
2252,5.3.2.25
2253,Table 4-2: bind_transmitter_resp PDU
2254,©SMPP Developers Forum
2255,Issue 1.2
2256,SMPP PDU Definition
2257,SMPP Protocol Specification v3.4
2258,4.1.3
2259,“BIND_RECEIVER” Syntax
2260,The format of the SMPP bind_receiver PDU is defined in the following table.
2261,H
2262,E
2263,A
2264,D
2265,E
2266,R
2267,Field Name
2268,Size
2269,octets
2270,Type
2271,Description
2272,Ref.
2273,command_length
2274,4
2275,Integer
2276,Defines the overall length of the PDU
2277,in octets.
2278,5.1.1
2279,command_id
2280,4
2281,Integer
2282,Value corresponding to
2283,bind_receiver request.
2284,5.1.2
2285,command_status
2286,4
2287,Integer
2288,Not used in bind_receiver PDU.
2289,Set to NULL.
2290,5.1.3
2291,sequence_numbera
2292,4
2293,Integer
2294,Set to a unique sequence number.
2295,The associated bind_receiver_resp
2296,PDU will echo the same sequence
2297,number.
2298,5.1.4
2299,B
2300,O
2301,D
2302,Y
2303,system_idb
2304,Var.
2305,max
2306,16
2307,C-
2308,Octet
2309,String
2310,Identifies the ESME system
2311,requesting to bind as a receiver with
2312,the SMSC.
2313,5.2.1
2314,passwordc
2315,Var.
2316,max
2317,9
2318,C-
2319,Octet
2320,String
2321,The password may be used by the
2322,SMSC for security reasons to
2323,authenticate the ESME requesting to
2324,bind.
2325,5.2.2
2326,system_typed
2327,Var.
2328,max
2329,13
2330,C-
2331,Octet
2332,String
2333,Identifies the type of ESME system
2334,requesting to bind as a receiver with
2335,the SMSC.
2336,5.2.3
2337,interface_version
2338,1
2339,Integer
2340,Identifies the version of the SMPP
2341,protocol supported by the ESME.
2342,5.2.4
2343,addr_tone
2344,1
2345,Integer
2346,Type of Number (TON) for ESME
2347,address(es) served via this SMPP
2348,receiver session.
2349,Set to NULL if not known.
2350,5.2.5
2351,addr_npie
2352,1
2353,Integer
2354,Numbering Plan Indicator (NPI) for
2355,ESME address(es) served via this
2356,SMPP receiver session.
2357,Set to NULL if not known.
2358,5.2.6
2359,address_rangee
2360,Var.
2361,max
2362,41
2363,C-
2364,Octet
2365,String
2366,A single ESME address or a range of
2367,ESME addresses served via this
2368,SMPP receiver session. The parameter
2369,value is represented in UNIX regular
2370,expression format (see Appendix A).
2371,Set to NULL if not known.
2372,5.2.7
2373,Table 4-3: SMPP bind_receiver PDU
2374,SMPP Protocol Specification v3.4
2375,SMPP PDU Definition
2376,Issue 1.2
2377,©SMPP Developers Forum
2378,"a. There is no specific requirement on how the sequence_number should be set. However, it is rec-"
2379,ommended that the sequence number be a monotonically increasing number.
2380,"b. The recommended use of system_id is to identify the binding entity, e.g., “InternetGW” in the case"
2381,of an Internet Gateway or ‘VMS’ for a Voice Mail System.
2382,c. The password is used for authentication to secure SMSC access. The ESME may set it to NULL to
2383,gain insecure access (if allowed by SMSC administration).
2384,"d. The system_type (optional) may be used to categorise the system, e.g., “EMAIL”, “WWW”, etc."
2385,"e. The addr_ton, addr_npi and addr_range parameters may be used by the ESME to provide an iden-"
2386,tification of the SME address(es) that the ESME serves.
2387,©SMPP Developers Forum
2388,Issue 1.2
2389,SMPP PDU Definition
2390,SMPP Protocol Specification v3.4
2391,4.1.4
2392,“BIND_RECEIVER_RESP”
2393,The format of the SMPP bind_receiver_resp PDU is defined in the following table.
2394,Note:
2395,The bind_receiver_resp PDU Body is not returned if the command_status field
2396,"contains a non-zero value, i.e., if there is an error in the original bind_receiver request,"
2397,the SMSC system_id is not returned.
2398,H
2399,E
2400,A
2401,D
2402,E
2403,R
2404,Field Name
2405,Size
2406,octets
2407,Type
2408,Description
2409,Ref.
2410,command_length
2411,4
2412,Integer
2413,Defines the overall length of the PDU.
2414,5.1.1
2415,command_id
2416,4
2417,Integer
2418,Value corresponding to
2419,bind_receiver_resp.
2420,5.1.2
2421,command_status
2422,4
2423,Integer
2424,Indicates status (success or error
2425,code) of original bind_receiver
2426,request.
2427,5.1.3
2428,sequence_number
2429,4
2430,Integer
2431,Set to sequence number of original
2432,bind_receiver request.
2433,5.1.4
2434,B
2435,O
2436,D
2437,Y
2438,system_id
2439,Var.
2440,max
2441,16
2442,C-
2443,Octet
2444,String
2445,SMSC identifier.
2446,Identifies the SMSC to the ESME.
2447,5.2.1
2448,OPTIONAL PARAMETERS for BIND_RECEIVER_RESP
2449,Optional Parameter Name
2450,Type
2451,Description
2452,Ref.
2453,sc_interface_version
2454,TLV
2455,SMPP version supported by SMSC
2456,5.3.2.25
2457,Table 4-4: bind_receiver_resp PDU
2458,SMPP Protocol Specification v3.4
2459,SMPP PDU Definition
2460,Issue 1.2
2461,©SMPP Developers Forum
2462,4.1.5
2463,“BIND_TRANSCEIVER” Syntax
2464,The format of the SMPP bind_transceiver PDU is defined in the following table.
2465,H
2466,E
2467,A
2468,D
2469,E
2470,R
2471,Field Name
2472,Size
2473,octets
2474,Type
2475,Description
2476,Ref.
2477,command_length
2478,4
2479,Integer
2480,Defines the overall length of the PDU.
2481,5.1.1
2482,command_id
2483,4
2484,Integer
2485,Value corresponding to
2486,bind_transceiver request.
2487,5.1.2
2488,command_status
2489,4
2490,Integer
2491,Not used in bind_transceiver PDU.
2492,Set to NULL.
2493,5.1.3
2494,sequence_numbera
2495,4
2496,Integer
2497,Set to a unique sequence number.
2498,The associated bind_transceiver_resp
2499,PDU will echo the same sequence
2500,number.
2501,5.1.4
2502,B
2503,O
2504,D
2505,Y
2506,system_idb
2507,Var.
2508,max
2509,16
2510,C-
2511,Octet
2512,String
2513,Identifies the ESME system
2514,requesting to bind as a transceiver
2515,with the SMSC.
2516,5.2.1
2517,passwordc
2518,Var.
2519,max
2520,9
2521,C-
2522,Octet
2523,String
2524,The password may be used by the
2525,SMSC to authenticate the ESME
2526,requesting to bind.
2527,5.2.2
2528,system_typed
2529,Var.
2530,max
2531,13
2532,C-
2533,Octet
2534,String
2535,Identifies the type of ESME system
2536,requesting to bind as a transceiver
2537,with the SMSC.
2538,5.2.3
2539,interface_version
2540,1
2541,Integer
2542,Identifies the version of the SMPP
2543,protocol supported by the ESME.
2544,5.2.4
2545,addr_tone
2546,1
2547,Integer
2548,Type of Number (TON) for ESME
2549,address(es) served via this SMPP
2550,transceiver session.
2551,Set to NULL (Unknown) if not
2552,known.
2553,5.2.5
2554,addr_npie
2555,1
2556,Integer
2557,Numbering Plan Indicator (NPI) for
2558,ESME address(es) served via this
2559,SMPP transceiver session.
2560,Set to NULL (Unknown) if not
2561,known.
2562,5.2.6
2563,address_rangee
2564,Var.
2565,max
2566,41
2567,C-
2568,Octet
2569,String
2570,A single ESME address or a range of
2571,ESME addresses served via this
2572,SMPP transceiver session. This field
2573,may be used by the SMSC for
2574,"authentication, verification or routing"
2575,purposes. Set to NULL if not known.
2576,5.2.7
2577,Table 4-5: SMPP bind_transceiver PDU
2578,©SMPP Developers Forum
2579,Issue 1.2
2580,SMPP PDU Definition
2581,SMPP Protocol Specification v3.4
2582,"a. There is no specific requirement on how the sequence_number should be set. However, it is rec-"
2583,ommended that the sequence number be a monotonically increasing number.
2584,"b. The recommended use of system_id is to identify the binding entity, e.g., “InternetGW” in the"
2585,case of an Internet Gateway or ‘VMS’ for a Voice Mail System.
2586,c. The password is used for authentication to secure SMSC access. The ESME may set it to NULL
2587,to gain insecure access (if allowed by SMSC administration).
2588,"d. The system_type (optional) may be used to categorise the system, e.g., “EMAIL”, “WWW”, etc."
2589,"e. The use of the parameters addr_ton, addr_npi and addr_range is SMSC implementation specific."
2590,"By specifying these fields in the bind_transceiver operation, the ESME is providing the SMSC"
2591,with the SME address(es) that it serves.
2592,SMPP Protocol Specification v3.4
2593,SMPP PDU Definition
2594,Issue 1.2
2595,©SMPP Developers Forum
2596,4.1.6
2597,“BIND_TRANSCEIVER_RESP”
2598,The format of the SMPP bind_transceiver_resp PDU is defined in the following table.
2599,H
2600,E
2601,A
2602,D
2603,E
2604,R
2605,Field Name
2606,Size
2607,octets
2608,Type
2609,Description
2610,Ref.
2611,command_length
2612,4
2613,Integer
2614,Defines the overall length of the PDU.
2615,5.1.1
2616,command_id
2617,4
2618,Integer
2619,Value corresponding to
2620,bind_transceiver_resp.
2621,5.1.2
2622,command_status
2623,4
2624,Integer
2625,Indicates status (success or error
2626,code) of original bind_transceiver
2627,request.
2628,5.1.3
2629,sequence_number
2630,4
2631,Integer
2632,Set to sequence number of original
2633,bind_transceiver request.
2634,5.1.4
2635,B
2636,O
2637,D
2638,Y
2639,system_id
2640,Var.
2641,max
2642,16
2643,C-
2644,Octet
2645,String
2646,SMSC identifier.
2647,Identifies the SMSC to the ESME.
2648,5.2.1
2649,OPTIONAL PARAMETERS for BIND_RECEIVER_RESP
2650,Optional Parameter Name
2651,Type
2652,Description
2653,Ref.
2654,sc_interface_version
2655,TLV
2656,SMPP version supported by SMSC
2657,5.3.2.25
2658,Table 4-6: bind_transceiver_resp PDU
2659,©SMPP Developers Forum
2660,Issue 1.2
2661,SMPP PDU Definition
2662,SMPP Protocol Specification v3.4
2663,4.1.7
2664,“OUTBIND” Operation.
2665,This operation is used by the SMSC to signal an ESME to originate a bind_receiver request to
2666,the SMSC.
2667,4.1.7.1
2668,“OUTBIND” Syntax
2669,The format of the SMPP outbind PDU is defined in the following table.
2670,H
2671,E
2672,A
2673,D
2674,E
2675,R
2676,Field Name
2677,Size
2678,octets
2679,Type
2680,Description
2681,Ref.
2682,command_length
2683,4
2684,Integer
2685,Defines the overall length of the PDU.
2686,5.1.1
2687,command_id
2688,4
2689,Integer
2690,Value corresponding to outbind.
2691,5.1.2
2692,command_status
2693,4
2694,Integer
2695,Not used in outbind PDU.
2696,Set to NULL.
2697,5.1.3
2698,sequence_number
2699,4
2700,Integer
2701,Set to a unique sequence number.
2702,5.1.4
2703,B
2704,O
2705,D
2706,Y
2707,system_id
2708,Var.
2709,max
2710,16
2711,C-
2712,Octet
2713,String
2714,SMSC identifier.
2715,Identifies the SMSC to the ESME.
2716,5.2.1
2717,passworda
2718,a. The password is used for authentication to secure ESME access. The SMSC may set it to NULL
2719,to gain insecure access (if allowed by ESME administration).
2720,Var.
2721,max
2722,9
2723,C-
2724,Octet
2725,String
2726,The password may be used by the
2727,ESME for security reasons to
2728,authenticate the SMSC originating the
2729,outbind.
2730,5.2.2
2731,SMPP Protocol Specification v3.4
2732,SMPP PDU Definition
2733,Issue 1.2
2734,©SMPP Developers Forum
2735,4.2
2736,“UNBIND” Operation
2737,The purpose of the SMPP unbind operation is to deregister an instance of an ESME from the
2738,SMSC and inform the SMSC that the ESME no longer wishes to use this network connection
2739,for the submission or delivery of messages.
2740,"Thus, the unbind operation may be viewed as a form of SMSC logoff request to close the"
2741,current SMPP session.
2742,©SMPP Developers Forum
2743,Issue 1.2
2744,SMPP PDU Definition
2745,SMPP Protocol Specification v3.4
2746,4.2.1
2747,“UNBIND”
2748,The format of the SMPP unbind PDU is defined in the following table. The command_id field
2749,must include the Command ID value corresponding to the unbind operation.
2750,4.2.2
2751,“UNBIND_RESP”
2752,The SMPP unbind_resp PDU is used to reply to an unbind request. It comprises the SMPP
2753,message header only.
2754,The format of the SMPP unbind_resp PDU is defined in the following table. The command_id
2755,field must include the Command ID value corresponding to the unbind_resp operation.
2756,H
2757,E
2758,A
2759,D
2760,E
2761,R
2762,Field Name
2763,Size
2764,octets
2765,Type
2766,Description
2767,Ref.
2768,command_length
2769,4
2770,Integer
2771,Defines the overall length of the
2772,PDU.
2773,5.1.1
2774,command_id
2775,4
2776,Integer
2777,Value corresponding to unbind
2778,request.
2779,5.1.2
2780,command_status
2781,4
2782,Integer
2783,Not used.
2784,Set to NULL.
2785,5.1.3
2786,sequence_number
2787,4
2788,Integer
2789,Set to a unique sequence number.
2790,The associated unbind_resp PDU
2791,will echo the same sequence number.
2792,5.1.4
2793,Table 4-7: SMPP unbind PDU format
2794,H
2795,E
2796,A
2797,D
2798,E
2799,R
2800,Field Name
2801,Size
2802,octets
2803,Type
2804,Description
2805,Ref.
2806,command_length
2807,4
2808,Integer
2809,Defines the overall length of the
2810,PDU.
2811,5.1.1
2812,command_id
2813,4
2814,Integer
2815,Value corresponding to unbind_resp
2816,PDU.
2817,5.1.2
2818,command_status
2819,4
2820,Integer
2821,Indicates outcome of original unbind
2822,request.
2823,5.1.3
2824,sequence_number
2825,4
2826,Integer
2827,Set to sequence number of original
2828,unbind request.
2829,5.1.4
2830,Table 4-8: SMPP unbind_resp PDU format
2831,SMPP Protocol Specification v3.4
2832,SMPP PDU Definition
2833,Issue 1.2
2834,©SMPP Developers Forum
2835,4.3
2836,“GENERIC_NACK” PDU
2837,This is a generic negative acknowledgement to an SMPP PDU submitted with an invalid
2838,message header. A generic_nack response is returned in the following cases:
2839,•
2840,Invalid command_length
2841,"If the receiving SMPP entity, on decoding an SMPP PDU, detects an invalid"
2842,"command_length (either too short or too long), it should assume that the data is corrupt. In"
2843,such cases a generic_nack PDU must be returned to the message originator.
2844,•
2845,Unknown command_id
2846,"If an unknown or invalid command_id is received, a generic_nack PDU must also be"
2847,returned to the originator.
2848,4.3.1
2849,“GENERIC_NACK” Syntax
2850,Following is the format of the SMPP generic_nack PDU. It comprises the SMPP message
2851,header only.
2852,H
2853,E
2854,A
2855,D
2856,E
2857,R
2858,Field Name
2859,Size
2860,octets
2861,Type
2862,Description
2863,Ref.
2864,command_length
2865,4
2866,Integer
2867,Defines the overall length of the
2868,PDU.
2869,5.1.1
2870,command_id
2871,4
2872,Integer
2873,Value corresponding to generic_nack
2874,PDU.
2875,5.1.2
2876,command_status
2877,4
2878,Integer
2879,Error code corresponding to reason
2880,for sending the generic_nack.
2881,5.1.3
2882,sequence_number
2883,4
2884,Integer
2885,Set to sequence number of original
2886,PDU or to NULL if the original PDU
2887,cannot be decoded.
2888,5.1.4
2889,Table 4-9: SMPP generic_nack PDU format
2890,©SMPP Developers Forum
2891,Issue 1.2
2892,SMPP PDU Definition
2893,SMPP Protocol Specification v3.4
2894,4.4
2895,“SUBMIT_SM” Operation
2896,This operation is used by an ESME to submit a short message to the SMSC for onward
2897,transmission to a specified short message entity (SME). The submit_sm PDU does not support
2898,the transaction message mode.
2899,SMPP Protocol Specification v3.4
2900,SMPP PDU Definition
2901,Issue 1.2
2902,©SMPP Developers Forum
2903,4.4.1
2904,“SUBMIT_SM” Syntax
2905,The format of the SMPP submit_sm PDU is defined in the following table.
2906,H
2907,E
2908,A
2909,D
2910,E
2911,R
2912,Field Name
2913,Size
2914,octets
2915,Type
2916,Description
2917,Ref.
2918,command_length
2919,4
2920,Integer
2921,Set to overall length of PDU.
2922,5.1.1
2923,command_id
2924,4
2925,Integer
2926,submit_sm
2927,5.1.2
2928,command_status
2929,4
2930,Integer
2931,Not used.
2932,Set to NULL.
2933,5.1.3
2934,sequence_number
2935,4
2936,Integer
2937,Set to a Unique sequence
2938,number. The associated
2939,submit_sm_resp PDU will
2940,echo this sequence number.
2941,5.1.4
2942,M
2943,A
2944,N
2945,D
2946,A
2947,T
2948,O
2949,R
2950,Y
2951,P
2952,A
2953,R
2954,A
2955,M
2956,E
2957,T
2958,E
2959,R
2960,S
2961,service_type
2962,Var.
2963,max
2964,6
2965,C-
2966,Octet
2967,String
2968,The service_type parameter
2969,can be used to indicate the
2970,SMS Application service
2971,associated with the message.
2972,Specifying the service_type
2973,allows the ESME to
2974,•
2975,avail
2976,of
2977,enhanced
2978,messaging services such as
2979,“replace by service” type
2980,•
2981,to control the teleservice
2982,used on the air interface.
2983,Set to NULL for default
2984,SMSC settings.
2985,5.2.11
2986,source_addr_ton
2987,1
2988,Integer
2989,Type of Number for source
2990,address.
2991,"If not known, set to NULL"
2992,(Unknown).
2993,5.2.5
2994,source_addr_npi
2995,1
2996,Integer
2997,Numbering Plan Indicator for
2998,source address.
2999,"If not known, set to NULL"
3000,(Unknown).
3001,5.2.6
3002,source_addr
3003,Var.
3004,max
3005,21
3006,C-
3007,Octet
3008,String
3009,Address of SME which
3010,originated this message.
3011,"If not known, set to NULL"
3012,(Unknown).
3013,5.2.8
3014,Table 4-10: submit_sm PDU
3015,©SMPP Developers Forum
3016,Issue 1.2
3017,SMPP PDU Definition
3018,SMPP Protocol Specification v3.4
3019,Field Name
3020,Size
3021,octets
3022,Type
3023,Description
3024,Ref.
3025,M
3026,A
3027,N
3028,D
3029,A
3030,T
3031,O
3032,R
3033,Y
3034,P
3035,A
3036,R
3037,A
3038,M
3039,E
3040,T
3041,E
3042,R
3043,S
3044,dest_addr_ton
3045,1
3046,Integer
3047,Type of Number for
3048,destination.
3049,5.2.5
3050,dest_addr_npi
3051,1
3052,Integer
3053,Numbering Plan Indicator for
3054,destination.
3055,5.2.6
3056,destination_addr
3057,Var.
3058,max
3059,21
3060,C-
3061,Octet
3062,String
3063,Destination address of this
3064,short message.
3065,For mobile terminated
3066,"messages, this is the directory"
3067,number of the recipient MS.
3068,5.2.9
3069,esm_class
3070,1
3071,Integer
3072,Indicates Message Mode &
3073,Message Type.
3074,5.2.12
3075,protocol_id
3076,1
3077,Integer
3078,Protocol Identifier.
3079,Network specific field.
3080,5.2.13
3081,priority_flag
3082,1
3083,Integer
3084,Designates the priority level
3085,of the message.
3086,5.2.14
3087,schedule_delivery_time
3088,1 or
3089,17
3090,C-
3091,Octet
3092,String
3093,The short message is to be
3094,scheduled by the SMSC for
3095,delivery.
3096,Set to NULL for immediate
3097,message delivery.
3098,5.2.15
3099,validity_period
3100,1 or
3101,17
3102,C-
3103,Octet
3104,String
3105,The validity period of this
3106,message.
3107,Set to NULL to request the
3108,SMSC default validity period.
3109,5.2.16
3110,registered_delivery
3111,1
3112,Integer
3113,Indicator to signify if an
3114,SMSC delivery receipt or an
3115,SME acknowledgement is
3116,required.
3117,5.2.17
3118,replace_if_present_flag
3119,1
3120,Integer
3121,Flag indicating if submitted
3122,message should replace an
3123,existing message.
3124,5.2.18
3125,data_coding
3126,1
3127,Integer
3128,Defines the encoding scheme
3129,of the short message user
3130,data.
3131,5.2.19
3132,Table 4-10: submit_sm PDU
3133,SMPP Protocol Specification v3.4
3134,SMPP PDU Definition
3135,Issue 1.2
3136,©SMPP Developers Forum
3137,Field Name
3138,Size
3139,octets
3140,Type
3141,Description
3142,Ref.
3143,M
3144,A
3145,N
3146,D
3147,A
3148,T
3149,O
3150,R
3151,Y
3152,P
3153,A
3154,R
3155,A
3156,M
3157,E
3158,T
3159,E
3160,R
3161,S
3162,sm_default_msg_id
3163,1
3164,Integer
3165,Indicates the short message to
3166,send from a list of pre-
3167,defined (‘canned’) short
3168,messages stored on the
3169,SMSC. If not using an SMSC
3170,"canned message, set to"
3171,NULL.
3172,5.2.20
3173,sm_length
3174,1
3175,Integer
3176,Length in octets of the
3177,short_message user data.
3178,5.2.21
3179,short_message
3180,Var.
3181,0-254
3182,Octet
3183,String
3184,Up to 254 octets of short
3185,message user data.
3186,The exact physical limit for
3187,short_message size may vary
3188,according to the underlying
3189,network.
3190,Applications which need to
3191,send messages longer than
3192,254 octets should use the
3193,message_payload parameter.
3194,In this case the sm_length
3195,field should be set to zero.
3196,Note:
3197,The short message data
3198,should be inserted in either
3199,the short_message or
3200,message_payload fields.
3201,Both fields must not be used
3202,simultaneously.
3203,5.2.22
3204,Table 4-10: submit_sm PDU
3205,©SMPP Developers Forum
3206,Issue 1.2
3207,SMPP PDU Definition
3208,SMPP Protocol Specification v3.4
3209,OPTIONAL PARAMETERS for SUBMIT_SM
3210,Optional Parameter Name
3211,Type
3212,Description
3213,Ref.
3214,O
3215,P
3216,T
3217,I
3218,O
3219,N
3220,A
3221,L
3222,P
3223,A
3224,R
3225,A
3226,M
3227,E
3228,T
3229,E
3230,R
3231,S
3232,user_message_reference
3233,TLV
3234,ESME assigned message
3235,reference number.
3236,5.3.2.17
3237,source_port
3238,TLV
3239,Indicates the application port
3240,number associated with the
3241,source address of the
3242,message. This parameter
3243,should be present for WAP
3244,applications.
3245,5.3.2.20
3246,source_addr_subunit
3247,TLV
3248,The subcomponent in the
3249,destination device which
3250,created the user data.
3251,5.3.2.2
3252,destination_port
3253,TLV
3254,Indicates the application port
3255,number associated with the
3256,destination address of the
3257,message. This parameter
3258,should be present for WAP
3259,applications.
3260,5.3.2.21
3261,dest_addr_subunit
3262,TLV
3263,The subcomponent in the
3264,destination device for which
3265,the user data is intended.
3266,5.3.2.1
3267,sar_msg_ref_num
3268,TLV
3269,The reference number for a
3270,particular concatenated short
3271,message.
3272,5.3.2.22
3273,sar_total_segments
3274,TLV
3275,Indicates the total number of
3276,short messages within the
3277,concatenated short message.
3278,5.3.2.23
3279,sar_segment_seqnum
3280,TLV
3281,Indicates the sequence
3282,number of a particular short
3283,message fragment within the
3284,concatenated short message.
3285,5.3.2.24
3286,more_messages_to_send
3287,TLV
3288,Indicates that there are more
3289,messages to follow for the
3290,destination SME.
3291,5.3.2.34
3292,payload_type
3293,TLV
3294,defines the type of payload
3295,"(e.g. WDP, WCMP, etc.)."
3296,5.3.2.10
3297,Table 4-10: submit_sm PDU
3298,SMPP Protocol Specification v3.4
3299,SMPP PDU Definition
3300,Issue 1.2
3301,©SMPP Developers Forum
3302,Optional Parameter Name
3303,Type
3304,Description
3305,Ref.
3306,O
3307,P
3308,T
3309,I
3310,O
3311,N
3312,A
3313,L
3314,P
3315,A
3316,R
3317,A
3318,M
3319,E
3320,T
3321,E
3322,R
3323,S
3324,message_payload
3325,TLV
3326,Contains the extended short
3327,message user data. Up to 64K
3328,octets can be transmitted.
3329,Note: The short message data
3330,should be inserted in either
3331,the short_message or
3332,message_payload fields. Both
3333,fields should not be used
3334,simultaneously.
3335,The sm_length field should be
3336,set to zero if using the
3337,message_payload parameter.
3338,5.3.2.32
3339,privacy_indicator
3340,TLV
3341,Indicates the level of privacy
3342,associated with the message.
3343,5.3.2.14
3344,callback_num
3345,TLV
3346,A callback number associated
3347,with the short message.
3348,This parameter can be
3349,included a number of times
3350,for multiple callback
3351,addresses.
3352,5.3.2.36
3353,callback_num_pres_ind
3354,TLV
3355,Defines the callback number
3356,presentation and screening.
3357,If this parameter is present
3358,and there are multiple
3359,instances of the callback_num
3360,parameter then this parameter
3361,must occur an equal number
3362,of instances and the order of
3363,occurrence determines the
3364,particular
3365,callback_num_pres_ind
3366,which corresponds to a
3367,particular callback_num.
3368,5.3.2.37
3369,Table 4-10: submit_sm PDU
3370,©SMPP Developers Forum
3371,Issue 1.2
3372,SMPP PDU Definition
3373,SMPP Protocol Specification v3.4
3374,Optional Parameter Name
3375,Type
3376,Description
3377,Ref.
3378,O
3379,P
3380,T
3381,I
3382,O
3383,N
3384,A
3385,L
3386,P
3387,A
3388,R
3389,A
3390,M
3391,E
3392,T
3393,E
3394,R
3395,S
3396,callback_num_atag
3397,TLV
3398,Associates a displayable
3399,alphanumeric tag with the
3400,callback number.
3401,If this parameter is present
3402,and there are multiple
3403,instances of the callback_num
3404,parameter then this parameter
3405,must occur an equal number
3406,of instances and the order of
3407,occurrence determines the
3408,particular callback_num_atag
3409,which corresponds to a
3410,particular callback_num.
3411,5.3.2.38
3412,source_subaddress
3413,TLV
3414,The subaddress of the
3415,message originator.
3416,5.3.2.15
3417,dest_subaddress
3418,TLV
3419,The subaddress of the
3420,message destination.
3421,5.3.2.16
3422,user_response_code
3423,TLV
3424,A user response code. The
3425,actual response codes are
3426,implementation specific.
3427,5.3.2.18
3428,display_time
3429,TLV
3430,Provides the receiving MS
3431,with a display time associated
3432,with the message.
3433,5.3.2.26
3434,sms_signal
3435,TLV
3436,Indicates the alerting
3437,mechanism when the message
3438,is received by an MS.
3439,5.3.2.40
3440,ms_validity
3441,TLV
3442,Indicates validity information
3443,for this message to the
3444,recipient MS.
3445,5.3.2.27
3446,ms_msg_wait_facilities
3447,TLV
3448,This parameter controls the
3449,indication and specifies the
3450,message type (of the message
3451,associated with the MWI) at
3452,the mobile station.
3453,5.3.2.13
3454,number_of_messages
3455,TLV
3456,Indicates the number of
3457,messages stored in a mail box
3458,5.3.2.39
3459,alert_on_msg_delivery
3460,TLV
3461,Request an MS alert signal be
3462,invoked on message delivery.
3463,5.3.2.41
3464,language_indicator
3465,TLV
3466,Indicates the language of an
3467,alphanumeric text message.
3468,5.3.2.19
3469,Table 4-10: submit_sm PDU
3470,SMPP Protocol Specification v3.4
3471,SMPP PDU Definition
3472,Issue 1.2
3473,©SMPP Developers Forum
3474,Optional Parameter Name
3475,Type
3476,Description
3477,Ref.
3478,O
3479,P
3480,T
3481,I
3482,O
3483,N
3484,A
3485,L
3486,P
3487,A
3488,R
3489,A
3490,M
3491,E
3492,T
3493,E
3494,R
3495,S
3496,its_reply_type
3497,TLV
3498,The MS user’s reply method
3499,to an SMS delivery message
3500,received from the network is
3501,indicated and controlled by
3502,this parameter.
3503,5.3.2.42
3504,its_session_info
3505,TLV
3506,Session control information
3507,for Interactive Teleservice.
3508,5.3.2.43
3509,ussd_service_op
3510,TLV
3511,This parameter is used to
3512,identify the required USSD
3513,Service type when interfacing
3514,to a USSD system.
3515,5.3.2.44
3516,Table 4-10: submit_sm PDU
3517,©SMPP Developers Forum
3518,Issue 1.2
3519,SMPP PDU Definition
3520,SMPP Protocol Specification v3.4
3521,4.4.1.1
3522,Source and Destination Addressing
3523,The submit_sm PDU includes provision for both ‘source address’ and ‘destination address’.
3524,"The ‘source address’ is comprised of the source_addr_ton, source_addr_npi and source_addr"
3525,"fields and ‘destination address’ is comprised of the dest_addr_ton, dest_addr_npi and"
3526,destination_addr fields.
3527,"An ESME Transmitter may enter NULL values in the ‘source address’ fields. In this event, the"
3528,SMSC may then substitute a default address for that particular ESME. This feature is designed
3529,for interfaces that are not normally familiar with the notion of a source address for a short
3530,"message, e.g., paging systems, voice mail system."
3531,4.4.1.2
3532,Message Replace operation in “SUBMIT_SM”
3533,"Though SMPP offers a dedicated replace_sm operation, the submit_sm operation also"
3534,facilitates replacement of a short message which has been previously submitted but has not yet
3535,been delivered to the designated destination.
3536,The replace function can be activated in the submit_sm PDU by setting the
3537,replace_if_present_flag to 1 (one).
3538,"Alternatively, an SMSC administrator may define a specific service_type to provide ‘replace-"
3539,"if-present’ functionality. In this case, the replace function can be activated in the submit_sm"
3540,PDU by setting the service_type field to the defined value.
3541,"For both methods of replacing a message using the submit_sm operation, the data contained in"
3542,"the short message found in the SMSC, whose source and destination addresses and service_type"
3543,"match those addresses specified in the latest submit_sm operation, will be replaced with the text"
3544,contained in the short_message field of that latest submit_sm operation.
3545,Note:
3546,"If the submit_sm PDU is used to replace an as yet undelivered message in the SMSC, and a"
3547,"matching message is not found in the SMSC, a new short message will be submitted to the"
3548,SMSC.
3549,"If a matching message is not found when using the replace_sm operation, the replace_sm"
3550,operation will not result in a new message being submitted to the SMSC - an SMPP error will
3551,be returned to the ESME in the replace_sm_resp PDU.
3552,SMPP Protocol Specification v3.4
3553,SMPP PDU Definition
3554,Issue 1.2
3555,©SMPP Developers Forum
3556,4.4.2
3557,“SUBMIT_SM_RESP”
3558,This is the response to the submit_sm PDU and has the following format:
3559,Note:
3560,The submit_sm_resp PDU Body is not returned if the command_status field contains
3561,a non-zero value.
3562,H
3563,E
3564,A
3565,D
3566,E
3567,R
3568,Field Name
3569,Size
3570,octets
3571,Type
3572,Description
3573,Ref.
3574,command_length
3575,4
3576,Integer
3577,Set to overall length of PDU.
3578,5.1.1
3579,command_id
3580,4
3581,Integer
3582,submit_sm_resp
3583,5.1.2
3584,command_status
3585,4
3586,Integer
3587,Indicates outcome of
3588,submit_sm request.
3589,5.1.3
3590,sequence_number
3591,4
3592,Integer
3593,Set to sequence number of
3594,original submit_sm PDU.
3595,5.1.4
3596,B
3597,O
3598,D
3599,Y
3600,message_id
3601,Var.
3602,max
3603,9 33 65
3604,C-
3605,Octet
3606,String
3607,This field contains the SMSC
3608,message ID of the submitted
3609,message. It may be used at a
3610,later stage to query the status
3611,"of a message, cancel or"
3612,replace the message.
3613,5.2.23
3614,Table 4-11: submit_sm_resp PDU
3615,©SMPP Developers Forum
3616,Issue 1.2
3617,SMPP PDU Definition
3618,SMPP Protocol Specification v3.4
3619,4.5
3620,“SUBMIT_MULTI” Operation
3621,The submit_multi operation may be used to submit an SMPP message for delivery to multiple
3622,recipients or to one or more Distribution Lists. The submit_multi PDU does not support the
3623,transaction message mode.
3624,SMPP Protocol Specification v3.4
3625,SMPP PDU Definition
3626,Issue 1.2
3627,©SMPP Developers Forum
3628,4.5.1
3629,“SUBMIT_MULTI” Syntax
3630,Following is the format of the SMPP submit_multi PDU. The command_id field contains the
3631,command identifier code for submit_multi.
3632,H
3633,E
3634,A
3635,D
3636,E
3637,R
3638,Field Name
3639,Size
3640,octets
3641,Type
3642,Description
3643,Ref.
3644,command_length
3645,4
3646,Integer
3647,Set to overall length of PDU.
3648,5.1.1
3649,command_id
3650,4
3651,Integer
3652,submit_multi
3653,5.1.2
3654,command_status
3655,4
3656,Integer
3657,Not used.
3658,Set to NULL.
3659,5.1.3
3660,sequence_number
3661,4
3662,Integer
3663,Set to a unique sequence
3664,number. The associated
3665,submit_multi_resp PDU will
3666,echo the same sequence
3667,number.
3668,5.1.4
3669,M
3670,A
3671,N
3672,D
3673,A
3674,T
3675,O
3676,R
3677,Y
3678,P
3679,A
3680,R
3681,A
3682,M
3683,E
3684,T
3685,E
3686,R
3687,S
3688,service_type
3689,Var
3690,max
3691,6
3692,C-
3693,Octet
3694,String
3695,The service_type parameter
3696,can be used to indicate the
3697,SMS Application service
3698,associated with the message.
3699,Specifying the service_type
3700,allows the ESME to
3701,•
3702,avail
3703,of
3704,enhanced
3705,messaging services such as
3706,replace by service type
3707,•
3708,to control the teleservice
3709,used on the air interface.
3710,Set to NULL for default
3711,SMSC settings.
3712,5.2.11
3713,source_addr_ton
3714,1
3715,Integer
3716,Type of Number for source
3717,address.
3718,"If not known, set to NULL"
3719,(Unknown).
3720,5.2.5
3721,source_addr_npi
3722,1
3723,Integer
3724,Numbering Plan Indicator for
3725,source.
3726,"If not known, set to NULL"
3727,(Unknown).
3728,5.2.6
3729,source_addr
3730,Var.
3731,max
3732,21
3733,C-
3734,Octet
3735,String
3736,Address of SME which
3737,originated this message.
3738,"If not known, set to NULL"
3739,(Unknown).
3740,5.2.8
3741,Table 4-12: submit_multi PDU
3742,©SMPP Developers Forum
3743,Issue 1.2
3744,SMPP PDU Definition
3745,SMPP Protocol Specification v3.4
3746,Field Name
3747,Size
3748,octets
3749,Type
3750,Description
3751,Ref.
3752,M
3753,A
3754,N
3755,D
3756,A
3757,T
3758,O
3759,R
3760,Y
3761,P
3762,A
3763,R
3764,A
3765,M
3766,E
3767,T
3768,E
3769,R
3770,S
3771,number_of_dests
3772,1
3773,Integer
3774,Number of destination
3775,addresses - indicates the
3776,number of dest_address
3777,structures that are to follow.
3778,A maximum of 254
3779,destination addresses are
3780,allowed.
3781,Note:
3782,Set to 1 when
3783,submitting to one
3784,SME Address OR
3785,when submitting to
3786,one Distribution List.
3787,5.2.24
3788,dest_address(es)
3789,Var.
3790,n[2-24]
3791,See
3792,Ref.
3793,See
3794,Ref.
3795,Contains one or more
3796,(number_of_dests) SME
3797,addresses or/and Distribution
3798,List names.
3799,Table 4-
3800,13
3801,esm_class
3802,1
3803,Integer
3804,Indicates Message Mode &
3805,Message Type.
3806,5.2.12
3807,protocol_id
3808,1
3809,Integer
3810,Protocol Identifier.
3811,Network specific field.
3812,5.2.13
3813,priority_flag
3814,1
3815,Integer
3816,Designates the priority level
3817,of the message.
3818,5.2.14
3819,schedule_delivery_time
3820,1 or
3821,17
3822,C-
3823,Octet
3824,String
3825,The short message is to be
3826,scheduled by the SMSC for
3827,delivery.
3828,Set to NULL for immediate
3829,message delivery.
3830,5.2.15
3831,validity_period
3832,1 or
3833,17
3834,C-
3835,Octet
3836,String
3837,The validity period of this
3838,message.
3839,Set to NULL to request the
3840,SMSC default validity period.
3841,5.2.16
3842,registered_delivery
3843,1
3844,Integer
3845,Indicator to signify if an
3846,SMSC delivery receipt or an
3847,SME acknowledgement is
3848,required.
3849,5.2.17
3850,replace_if_present_flag
3851,1
3852,Integer
3853,Reserved. Must be set to
3854,NULL.
3855,5.2.18
3856,data_coding
3857,1
3858,Integer
3859,Indicates the encoding
3860,scheme of the short message.
3861,5.2.19
3862,Table 4-12: submit_multi PDU (Continued)
3863,SMPP Protocol Specification v3.4
3864,SMPP PDU Definition
3865,Issue 1.2
3866,©SMPP Developers Forum
3867,Field Name
3868,Size
3869,octets
3870,Type
3871,Description
3872,Ref.
3873,M
3874,A
3875,N
3876,D
3877,A
3878,T
3879,O
3880,R
3881,Y
3882,P
3883,A
3884,R
3885,A
3886,M
3887,E
3888,T
3889,E
3890,R
3891,S
3892,sm_default_msg_id
3893,1
3894,Integer
3895,Indicates the short message to
3896,send from a list of predefined
3897,(“canned”) short messages
3898,stored on the SMSC.
3899,If not using an SMSC
3900,"predefined message, set to"
3901,NULL.
3902,5.2.20
3903,sm_length
3904,1
3905,Integer
3906,Length in octets of the
3907,short_message user data.
3908,5.2.21
3909,short_message
3910,Var.
3911,0-254
3912,Octet
3913,String
3914,Up to 254 octets of short
3915,message user data.
3916,The exact physical limit for
3917,short_message size may vary
3918,according to the underlying
3919,network.
3920,Applications which need to
3921,send messages longer than
3922,254 octets should use the
3923,message_payload parameter.
3924,In this case the sm_length
3925,parameter should be set to
3926,zero.
3927,Note:
3928,The short message data
3929,should be inserted in either
3930,the short_message or
3931,message_payload parameters.
3932,Both parameters must not be
3933,used simultaneously.
3934,5.2.22
3935,Table 4-12: submit_multi PDU (Continued)
3936,©SMPP Developers Forum
3937,Issue 1.2
3938,SMPP PDU Definition
3939,SMPP Protocol Specification v3.4
3940,OPTIONAL PARAMETERS for SUBMIT_MULTI
3941,Optional Parameter Name
3942,Type
3943,Description
3944,Ref.
3945,O
3946,P
3947,T
3948,I
3949,O
3950,N
3951,A
3952,L
3953,P
3954,A
3955,R
3956,A
3957,M
3958,E
3959,T
3960,E
3961,R
3962,S
3963,user_message_reference
3964,TLV
3965,ESME assigned message
3966,reference number.
3967,5.3.2.17
3968,source_port
3969,TLV
3970,Indicates the application port
3971,number associated with the
3972,source address of the
3973,message. This parameter
3974,should be present for WAP
3975,applications.
3976,5.3.2.20
3977,source_addr_subunit
3978,TLV
3979,The subcomponent in the
3980,destination device which
3981,created the user data.
3982,5.3.2.2
3983,destination_port
3984,TLV
3985,Indicates the application port
3986,number associated with the
3987,destination address of the
3988,message. This parameter
3989,should be present for WAP
3990,applications
3991,5.3.2.21
3992,dest_addr_subunit
3993,TLV
3994,The subcomponent in the
3995,destination device for which
3996,the user data is intended.
3997,5.3.2.1
3998,sar_msg_ref_num
3999,TLV
4000,The reference number for a
4001,particular concatenated short
4002,message.
4003,5.3.2.22
4004,sar_total_segments
4005,TLV
4006,Indicates the total number of
4007,short messages within the
4008,concatenated short message.
4009,5.3.2.23
4010,sar_segment_seqnum
4011,TLV
4012,Indicates the sequence
4013,number of a particular short
4014,message fragment within the
4015,concatenated short message.
4016,5.3.2.24
4017,payload_type
4018,TLV
4019,Defines the type of payload
4020,"(e.g. WDP, WCMP, etc.)"
4021,5.3.2.10
4022,Table 4-12: submit_multi PDU (Continued)
4023,SMPP Protocol Specification v3.4
4024,SMPP PDU Definition
4025,Issue 1.2
4026,©SMPP Developers Forum
4027,Optional Parameter Name
4028,Type
4029,Description
4030,Ref.
4031,O
4032,P
4033,T
4034,I
4035,O
4036,N
4037,A
4038,L
4039,P
4040,A
4041,R
4042,A
4043,M
4044,E
4045,T
4046,E
4047,R
4048,S
4049,message_payload
4050,TLV
4051,Contains the extended short
4052,message user data. Up to 64K
4053,octets can be transmitted.
4054,Note: The short message data
4055,should be inserted in either
4056,the short_message or
4057,message_payload fields. Both
4058,fields should not be used
4059,simultaneously.
4060,The sm_length field should be
4061,set to zero if using the
4062,message_payload parameter.
4063,5.3.2.32
4064,privacy_indicator
4065,TLV
4066,Indicates the level of privacy
4067,associated with the message.
4068,5.3.2.14
4069,callback_num
4070,TLV
4071,A callback number associated
4072,with the short message.
4073,This parameter can be
4074,included a number of times
4075,for multiple callback
4076,addresses.
4077,5.3.2.36
4078,callback_num_pres_ind
4079,TLV
4080,Identifies the presentation and
4081,screening associated with the
4082,callback number.
4083,If this parameter is present
4084,and there are multiple
4085,instances of the callback_num
4086,parameter then this parameter
4087,must occur an equal number
4088,of instances and the order of
4089,occurrence determines the
4090,particular
4091,callback_num_pres_ind
4092,which corresponds to a
4093,particular callback_num.
4094,5.3.2.37
4095,Table 4-12: submit_multi PDU (Continued)
4096,©SMPP Developers Forum
4097,Issue 1.2
4098,SMPP PDU Definition
4099,SMPP Protocol Specification v3.4
4100,Optional Parameter Name
4101,Type
4102,Description
4103,Ref.
4104,O
4105,P
4106,T
4107,I
4108,O
4109,N
4110,A
4111,L
4112,P
4113,A
4114,R
4115,A
4116,M
4117,E
4118,T
4119,E
4120,R
4121,S
4122,callback_num_atag
4123,TLV
4124,Associates a displayable
4125,alphanumeric tag with the
4126,callback number.
4127,If this parameter is present
4128,and there are multiple
4129,instances of the callback_num
4130,parameter then this parameter
4131,must occur an equal number
4132,of instances and the order of
4133,occurrence determines the
4134,particular callback_num_atag
4135,which corresponds to a
4136,particular callback_num.
4137,5.3.2.38
4138,source_subaddress
4139,TLV
4140,The subaddress of the
4141,message originator.
4142,5.3.2.15
4143,dest_subaddress
4144,TLV
4145,The subaddress of the
4146,message destination.
4147,5.3.2.16
4148,display_time
4149,TLV
4150,Provides the receiving MS
4151,based SME with a display
4152,time associated with the
4153,message.
4154,5.3.2.26
4155,sms_signal
4156,TLV
4157,Indicates the alerting
4158,mechanism when the message
4159,is received by an MS.
4160,5.3.2.40
4161,ms_validity
4162,TLV
4163,Indicates validity information
4164,for this message to the
4165,recipient MS.
4166,5.3.2.27
4167,ms_msg_wait_facilities
4168,TLV
4169,This parameter controls the
4170,indication and specifies the
4171,message type (of the message
4172,associated with the MWI) at
4173,the mobile station.
4174,5.3.2.13
4175,alert_on_msg_delivery
4176,TLV
4177,Requests an MS alert signal
4178,be invoked on message
4179,delivery.
4180,5.3.2.41
4181,language_indicator
4182,TLV
4183,Indicates the language of an
4184,alphanumeric text message.
4185,5.3.2.19
4186,Table 4-12: submit_multi PDU (Continued)
4187,SMPP Protocol Specification v3.4
4188,SMPP PDU Definition
4189,Issue 1.2
4190,©SMPP Developers Forum
4191,4.5.1.1
4192,Destination Address definition
4193,4.5.1.2
4194,Distribution List (DL) definition
4195,Field Name
4196,Size
4197,octets
4198,Type
4199,Description
4200,Ref.
4201,dest_flag
4202,1
4203,Integer
4204,Flag which will identify
4205,whether destination address is
4206,a Distribution List name or
4207,SME address.
4208,5.2.25
4209,SME Address
4210,or
4211,Distribution List Name
4212,See
4213,Ref.
4214,See
4215,Ref.
4216,Depending on dest_flag this
4217,could be an SME Address or
4218,a Distribution List Name.
4219,Table
4220,4-14&
4221,Table
4222,4-15
4223,Table 4-13: dest_address
4224,Field Name
4225,Size
4226,octets
4227,Type
4228,Description
4229,Ref.
4230,dest_addr_ton
4231,1
4232,Integer
4233,Type of Number for
4234,destination SME.
4235,5.2.5
4236,dest_addr_npi
4237,1
4238,Integer
4239,Numbering Plan Indicator for
4240,destination SME.
4241,5.2.6
4242,destination_addr
4243,Var.
4244,max.
4245,21
4246,C-
4247,Octet
4248,String
4249,Destination Address for this
4250,short message.
4251,5.2.9
4252,Table 4-14: SME_dest_address
4253,Field Name
4254,Size
4255,octets
4256,Type
4257,Description
4258,Ref.
4259,dl_name
4260,Var.
4261,max.
4262,21
4263,C-
4264,Octet
4265,String
4266,Name of Distribution List.
4267,5.2.27
4268,Table 4-15: DL Name
4269,©SMPP Developers Forum
4270,Issue 1.2
4271,SMPP PDU Definition
4272,SMPP Protocol Specification v3.4
4273,4.5.2
4274,“SUBMIT_MULTI_RESP” Syntax
4275,The following is the format of the SMPP submit_multi_resp PDU. The command_id field
4276,contains the command identifier code for submit_multi_resp.
4277,H
4278,E
4279,A
4280,D
4281,E
4282,R
4283,Field Name
4284,Size
4285,octets
4286,Type
4287,Description
4288,Ref.
4289,command_length
4290,4
4291,Integer
4292,Set to overall length of PDU.
4293,5.1.1
4294,command_id
4295,4
4296,Integer
4297,submit_multi_resp
4298,5.1.2
4299,command_status
4300,4
4301,Integer
4302,Outcome of submit_multi
4303,request.
4304,5.1.3
4305,sequence_number
4306,4
4307,Integer
4308,Set to sequence number of
4309,original submit_multi PDU.
4310,5.1.4
4311,B
4312,O
4313,D
4314,Y
4315,message_id
4316,Var.
4317,max
4318,65
4319,C-
4320,Octet
4321,String
4322,The SMSC message ID of the
4323,submitted message.
4324,5.2.23
4325,no_unsuccess
4326,1
4327,Integer
4328,The number of messages to
4329,destination SME addresses
4330,that were unsuccessfully
4331,submitted to the SMSC.
4332,5.2.26
4333,unsuccess_sme(s)
4334,Var.
4335,n[7-27]
4336,See
4337,Ref.
4338,See
4339,Ref.
4340,Contains one or more
4341,(no_unsuccess) SME
4342,address(es) or/and
4343,Distribution List names to
4344,which submission was
4345,unsuccessful.
4346,Table
4347,4-17
4348,Table 4-16: submit_multi_resp PDU
4349,SMPP Protocol Specification v3.4
4350,SMPP PDU Definition
4351,Issue 1.2
4352,©SMPP Developers Forum
4353,4.5.2.1
4354,Unsuccessful deliveries
4355,Field
4356,Size
4357,octets
4358,Type
4359,Description
4360,Ref.
4361,dest_addr_ton
4362,1
4363,Integer
4364,Type of number for destination
4365,SME.
4366,5.2.5
4367,dest_addr_npi
4368,1
4369,Integer
4370,Numbering Plan Indicator for
4371,destination SME
4372,5.2.6
4373,destination_addr
4374,Var.
4375,max.
4376,21
4377,C-Octet
4378,String
4379,Destination Address of
4380,destination SME
4381,5.2.9
4382,error_status_code
4383,4
4384,Integer
4385,Indicates the success or failure of
4386,the submit_multi request to this
4387,SME address.
4388,5.1.3
4389,Table 4-17: Unsuccess_smes
4390,©SMPP Developers Forum
4391,Issue 1.2
4392,SMPP PDU Definition
4393,SMPP Protocol Specification v3.4
4394,4.6
4395,“DELIVER_SM” Operation
4396,"The deliver_sm is issued by the SMSC to send a message to an ESME. Using this command,"
4397,the SMSC may route a short message to the ESME for delivery.
4398,In addition the SMSC uses the deliver_sm operation to transfer the following types of short
4399,messages to the ESME:-
4400,•
4401,SMSC Delivery Receipt. A delivery receipt relating to a a message which had been
4402,previously submitted with the submit_sm operation and the ESME had requested a
4403,delivery receipt via the registered_delivery parameter. The delivery receipt data relating to
4404,the original short message will be included in the short_message field of the deliver_sm.
4405,(Reference Appendix B for an example Delivery Receipt format.)
4406,•
4407,SME Delivery Acknowledgement. The user data of the SME delivery acknowledgement
4408,is included in the short_message field of the deliver_sm
4409,•
4410,SME Manual/User Acknowledgement. The user data of the SME delivery
4411,acknowledgement is included in the short_message field of the deliver_sm
4412,•
4413,Intermediate Notification.
4414,SMPP Protocol Specification v3.4
4415,SMPP PDU Definition
4416,Issue 1.2
4417,©SMPP Developers Forum
4418,4.6.1
4419,“DELIVER_SM” Syntax
4420,"The deliver_sm PDU has the same format as the submit_sm PDU. For this reason, some fields"
4421,are unused.
4422,Field Name
4423,Size
4424,octets
4425,Type
4426,Description
4427,Ref.
4428,H
4429,E
4430,A
4431,D
4432,E
4433,R
4434,command_length
4435,4
4436,Integer
4437,Set to overall length of PDU.
4438,5.1.1
4439,command_id
4440,4
4441,Integer
4442,deliver_sm
4443,5.1.2
4444,command_status
4445,4
4446,Integer
4447,Unused.
4448,Set to NULL.
4449,5.1.3
4450,sequence_number
4451,4
4452,Integer
4453,Set to a unique sequence
4454,number. The associated
4455,deliver_sm_resp PDU should
4456,echo the same sequence
4457,number.
4458,5.1.4
4459,M
4460,A
4461,N
4462,D
4463,A
4464,T
4465,O
4466,R
4467,Y
4468,P
4469,A
4470,R
4471,A
4472,M
4473,E
4474,T
4475,E
4476,R
4477,S
4478,service_type
4479,Var
4480,max
4481,6
4482,C-
4483,Octet
4484,String
4485,The service_type parameter
4486,can be used to indicate the
4487,SMS Application service
4488,associated with the message.
4489,5.2.11
4490,source_addr_ton
4491,1
4492,Integer
4493,Type of Number for source
4494,address.
4495,"If not known, set to NULL"
4496,(Unknown).
4497,5.2.5
4498,source_addr_npi
4499,1
4500,Integer
4501,Numbering Plan Indicator for
4502,source.
4503,"If not known, set to NULL"
4504,(Unknown).
4505,5.2.6
4506,source_addr
4507,Var.
4508,max
4509,21
4510,C-
4511,Octet
4512,String
4513,Address of SME which
4514,originated this message.
4515,"If not known, set to NULL"
4516,(Unknown).
4517,5.2.8
4518,dest_addr_ton
4519,1
4520,Integer
4521,Type of number of
4522,destination SME.
4523,5.2.5
4524,dest_addr_npi
4525,1
4526,Integer
4527,Numbering Plan Indicator of
4528,destination SME.
4529,5.2.6
4530,destination_addr
4531,Var.
4532,max
4533,21
4534,C-
4535,Octet
4536,String
4537,Destination address of
4538,destination SME.
4539,5.2.9
4540,Table 4-18: deliver_sm PDU
4541,©SMPP Developers Forum
4542,Issue 1.2
4543,SMPP PDU Definition
4544,SMPP Protocol Specification v3.4
4545,Field Name
4546,Size
4547,octets
4548,Type
4549,Description
4550,Ref.
4551,M
4552,A
4553,N
4554,D
4555,A
4556,T
4557,O
4558,R
4559,Y
4560,P
4561,A
4562,R
4563,A
4564,M
4565,E
4566,T
4567,E
4568,R
4569,S
4570,esm_class
4571,1
4572,Integer
4573,Indicates Message Type and
4574,enhanced network services.
4575,5.2.12
4576,protocol_id
4577,1
4578,Integer
4579,Protocol Identifier.
4580,Network Specific Field.
4581,5.2.13
4582,priority_flag
4583,1
4584,Integer
4585,Designates the priority level
4586,of the message.
4587,5.2.14
4588,schedule_delivery_time
4589,1
4590,C-
4591,Octet
4592,String
4593,This field is unused for
4594,deliver_sm.
4595,It must be set to NULL.
4596,5.2.15
4597,validity_period
4598,1
4599,C-
4600,Octet
4601,String
4602,This field is unused for
4603,deliver_sm
4604,It must be set to NULL.
4605,5.2.16
4606,registered_delivery
4607,1
4608,Integer
4609,Indicates if an ESME
4610,acknowledgement is required.
4611,5.2.17
4612,replace_if_present_flag
4613,1
4614,Integer
4615,Not used in deliver_sm.
4616,It must be set to NULL.
4617,5.2.18
4618,data_coding
4619,1
4620,Integer
4621,Indicates the encoding
4622,scheme of the short message.
4623,5.2.19
4624,sm_default_msg_id
4625,1
4626,Integer
4627,Unused in deliver_sm.
4628,It must be set to NULL.
4629,5.2.20
4630,sm_length
4631,1
4632,Integer
4633,Length of short message user
4634,data in octets.
4635,5.2.21
4636,Table 4-18: deliver_sm PDU
4637,SMPP Protocol Specification v3.4
4638,SMPP PDU Definition
4639,Issue 1.2
4640,©SMPP Developers Forum
4641,Field Name
4642,Size
4643,octets
4644,Type
4645,Description
4646,Ref.
4647,M
4648,A
4649,N
4650,D
4651,A
4652,T
4653,O
4654,R
4655,Y
4656,P
4657,A
4658,R
4659,A
4660,M
4661,E
4662,T
4663,E
4664,R
4665,S
4666,short_message
4667,Var.
4668,0-254
4669,Octet
4670,String
4671,Up to 254 octets of short
4672,message user data.
4673,When sending messages
4674,longer than 254 octets the
4675,message_payload parameter
4676,should be used and the
4677,sm_length parameter should
4678,be set to zero.
4679,Note: The message data
4680,should be inserted in either
4681,the short_message or the
4682,message_payload parameters.
4683,Both parameters must not be
4684,used simultaneously.
4685,5.2.22
4686,Table 4-18: deliver_sm PDU
4687,©SMPP Developers Forum
4688,Issue 1.2
4689,SMPP PDU Definition
4690,SMPP Protocol Specification v3.4
4691,OPTIONAL PARAMETERS for DELIVER_SM
4692,Optional Parameter Name
4693,Type
4694,Description
4695,Ref.
4696,O
4697,P
4698,T
4699,I
4700,O
4701,N
4702,A
4703,L
4704,P
4705,A
4706,R
4707,A
4708,M
4709,E
4710,T
4711,E
4712,R
4713,S
4714,user_message_reference
4715,TLV
4716,A reference assigned by the
4717,originating SME to the
4718,message.
4719,In the case that the
4720,deliver_sm is carrying an
4721,"SMSC delivery receipt, an"
4722,SME delivery
4723,acknowledgement or an SME
4724,user acknowledgement (as
4725,indicated in the esm_class
4726,"field), the"
4727,user_message_reference
4728,parameter is set to the
4729,message reference of the
4730,original message.
4731,5.3.2.17
4732,source_port
4733,TLV
4734,Indicates the application port
4735,number associated with the
4736,source address of the
4737,message. The parameter
4738,should be present for WAP
4739,applications.
4740,5.3.2.20
4741,destination_port
4742,TLV
4743,Indicates the application port
4744,number associated with the
4745,destination address of the
4746,message. The parameter
4747,should be present for WAP
4748,applications.
4749,5.3.2.21
4750,sar_msg_ref_num
4751,TLV
4752,The reference number for a
4753,particular concatenated short
4754,message.
4755,5.3.2.22
4756,sar_total_segments
4757,TLV
4758,Indicates the total number of
4759,short messages within the
4760,concatenated short message.
4761,5.3.2.23
4762,sar_segment_seqnum
4763,TLV
4764,Indicates the sequence
4765,number of a particular short
4766,message fragment within the
4767,concatenated short message.
4768,5.3.2.24
4769,user_response_code
4770,TLV
4771,A user response code. The
4772,actual response codes are
4773,SMS application specific.
4774,5.3.2.18
4775,Table 4-18: deliver_sm PDU
4776,SMPP Protocol Specification v3.4
4777,SMPP PDU Definition
4778,Issue 1.2
4779,©SMPP Developers Forum
4780,Optional Parameter Name
4781,Type
4782,Description
4783,Ref.
4784,O
4785,P
4786,T
4787,I
4788,O
4789,N
4790,A
4791,L
4792,P
4793,A
4794,R
4795,A
4796,M
4797,E
4798,T
4799,E
4800,R
4801,S
4802,privacy_indicator
4803,TLV
4804,Indicates a level of privacy
4805,associated with the message.
4806,5.3.2.14
4807,payload_type
4808,TLV
4809,Defines the type of payload
4810,"(e.g. WDP, WCMP, etc.)"
4811,5.3.2.10
4812,message_payload
4813,TLV
4814,Contains the extended short
4815,message user data. Up to 64K
4816,octets can be transmitted.
4817,Note: The short message data
4818,should be inserted in either
4819,the short_message or
4820,message_payload fields. Both
4821,fields should not be used
4822,simultaneously.
4823,The sm_length field should be
4824,set to zero if using the
4825,message_payload parameter.
4826,5.3.2.32
4827,callback_num
4828,TLV
4829,A callback number associated
4830,with the short message. This
4831,parameter can be included a
4832,number of times for multiple
4833,call back addresses.
4834,5.3.2.36
4835,source_subaddress
4836,TLV
4837,The subaddress of the
4838,message originator.
4839,5.3.2.15
4840,dest_subaddress
4841,TLV
4842,The subaddress of the
4843,message destination.
4844,5.3.2.16
4845,language_indicator
4846,TLV
4847,Indicates the language of an
4848,alphanumeric text message.
4849,5.3.2.19
4850,its_session_info
4851,TLV
4852,Session control information
4853,for Interactive Teleservice.
4854,5.3.2.43
4855,network_error_code
4856,TLV
4857,Network Error Code.
4858,May be present for
4859,Intermediate Notifications
4860,and SMSC Delivery Receipts
4861,5.3.2.31
4862,message_state
4863,TLV
4864,Message State.
4865,Should be present for SMSC
4866,Delivery Receipts and
4867,Intermediate Notifications.
4868,5.3.2.35
4869,Table 4-18: deliver_sm PDU
4870,©SMPP Developers Forum
4871,Issue 1.2
4872,SMPP PDU Definition
4873,SMPP Protocol Specification v3.4
4874,Optional Parameter Name
4875,Type
4876,Description
4877,Ref.
4878,receipted_message_id
4879,TLV
4880,SMSC message ID of
4881,receipted message
4882,Should be present for SMSC
4883,Delivery Receipts and
4884,Intermediate Notifications.
4885,5.3.2.12
4886,Table 4-18: deliver_sm PDU
4887,SMPP Protocol Specification v3.4
4888,SMPP PDU Definition
4889,Issue 1.2
4890,©SMPP Developers Forum
4891,4.6.2
4892,“DELIVER_SM_RESP” Syntax
4893,The following is the format of the SMPP deliver_sm_resp PDU.
4894,H
4895,E
4896,A
4897,D
4898,E
4899,R
4900,Field Name
4901,Size
4902,octets
4903,Type
4904,Description
4905,Ref.
4906,command_length
4907,4
4908,Integer
4909,Set to overall length of PDU.
4910,5.1.1
4911,command_id
4912,4
4913,Integer
4914,deliver_sm_resp
4915,5.1.2
4916,command_status
4917,4
4918,Integer
4919,Indicates outcome of
4920,deliver_sm request.
4921,5.1.3
4922,sequence_number
4923,4
4924,Integer
4925,Set to sequence number of
4926,deliver_sm PDU.
4927,5.1.4
4928,B
4929,O
4930,D
4931,Y
4932,message_id
4933,1
4934,C-
4935,Octet
4936,String
4937,This field is unused and is set
4938,to NULL.
4939,5.2.23
4940,Table 4-19: deliver_sm_resp PDU
4941,©SMPP Developers Forum
4942,Issue 1.2
4943,SMPP PDU Definition
4944,SMPP Protocol Specification v3.4
4945,4.7
4946,“DATA_SM” Operation
4947,This command is used to transfer data between the SMSC and the ESME. It may be used by
4948,both the ESME and SMSC.
4949,This command is an alternative to the submit_sm and deliver_sm commands. It is introduced
4950,as a new command to be used by interactive applications such as those provided via a WAP
4951,framework.
4952,The ESME may use this command to request the SMSC to transfer a message to an MS. The
4953,SMSC may also use this command to transfer an MS originated message to an ESME.
4954,"In addition, the data_sm operation can be used to transfer the following types of special"
4955,messages to the ESME:-
4956,•
4957,SMSC Delivery Receipt.
4958,•
4959,SME Delivery Acknowledgement. The user data of the SME delivery acknowledgement
4960,is included in the short_message field of the data_sm
4961,•
4962,SME Manual/User Acknowledgement. The user data of the SME delivery
4963,acknowledgement is included in the short_message field of the data_sm
4964,•
4965,Intermediate Notification.
4966,SMPP Protocol Specification v3.4
4967,SMPP PDU Definition
4968,Issue 1.2
4969,©SMPP Developers Forum
4970,4.7.1
4971,“DATA_SM” Syntax
4972,The following is the format of the SMPP data_sm PDU.
4973,Field Name
4974,Size
4975,octets
4976,Type
4977,Description
4978,Ref.
4979,H
4980,E
4981,A
4982,D
4983,E
4984,R
4985,command_length
4986,4
4987,Integer
4988,Set to overall length of PDU.
4989,5.1.1
4990,command_id
4991,4
4992,Integer
4993,data_sm
4994,5.1.2
4995,command_status
4996,4
4997,Integer
4998,Not used.
4999,Set to NULL.
5000,5.1.3
5001,sequence_number
5002,4
5003,Integer
5004,Set to a unique sequence
5005,number. The associated
5006,data_sm_resp PDU will echo
5007,the same sequence number.
5008,This parameter is used to
5009,facilitate transaction
5010,windowing.
5011,5.1.4
5012,M
5013,A
5014,N
5015,D
5016,A
5017,T
5018,O
5019,R
5020,Y
5021,P
5022,A
5023,R
5024,A
5025,M
5026,E
5027,T
5028,E
5029,R
5030,S
5031,service_type
5032,Var.
5033,max
5034,6
5035,C-
5036,Octet
5037,String
5038,The service_type parameter
5039,can be used to indicate the
5040,SMS Application service
5041,associated with the message.
5042,Specifying the service_type
5043,allows the ESME/SMSC to
5044,•
5045,to indicate the teleservice
5046,used on the air interface.
5047,5.2.11
5048,source_addr_ton
5049,1
5050,Integer
5051,Type of Number for source
5052,address.
5053,"If not known, set to"
5054,“Unknown” (0x00).
5055,5.2.5
5056,source_addr_npi
5057,1
5058,Integer
5059,Numbering Plan Indicator for
5060,source address.
5061,"If not known, set to"
5062,“Unknown” (0x00).
5063,5.2.6
5064,source_addr
5065,Var.
5066,max
5067,65
5068,C-
5069,Octet
5070,String
5071,Address of SME which
5072,originated this message.
5073,5.2.8
5074,dest_addr_ton
5075,1
5076,Integer
5077,Type of Number for
5078,destination.
5079,5.2.5
5080,dest_addr_npi
5081,1
5082,Integer
5083,Numbering Plan Indicator for
5084,destination.
5085,5.2.6
5086,Table 4-20: data_sm PDU
5087,©SMPP Developers Forum
5088,Issue 1.2
5089,SMPP PDU Definition
5090,SMPP Protocol Specification v3.4
5091,Field Name
5092,Size
5093,octets
5094,Type
5095,Description
5096,Ref.
5097,M
5098,A
5099,N
5100,D
5101,A
5102,T
5103,O
5104,R
5105,Y
5106,P
5107,A
5108,R
5109,S
5110,destination_addr
5111,Var.
5112,max
5113,65
5114,C-
5115,Octet
5116,String
5117,Destination address of this
5118,short message. For mobile
5119,"terminated messages, this is"
5120,the directory number of the
5121,recipient MS.
5122,5.2.9
5123,esm_class
5124,1
5125,Integer
5126,Indicates Message Mode and
5127,Message Type.
5128,5.2.12
5129,registered_delivery
5130,1
5131,Integer
5132,Indicator for requesting a
5133,SMSC delivery receipt or an
5134,SME acknowledgement
5135,5.2.17
5136,data_coding
5137,1
5138,Integer
5139,Indicates the encoding
5140,scheme of the payload data
5141,5.2.19
5142,Table 4-20: data_sm PDU
5143,SMPP Protocol Specification v3.4
5144,SMPP PDU Definition
5145,Issue 1.2
5146,©SMPP Developers Forum
5147,OPTIONAL PARAMETERS for DATA_SM
5148,Optional Parameter Name
5149,Type
5150,Description
5151,Ref.
5152,O
5153,P
5154,T
5155,I
5156,O
5157,N
5158,A
5159,L
5160,P
5161,A
5162,R
5163,A
5164,M
5165,E
5166,T
5167,E
5168,R
5169,S
5170,source_port
5171,TLV
5172,Indicates the application port
5173,number associated with the
5174,source address of the
5175,message. This parameter
5176,should be present for WAP
5177,applications.
5178,5.3.2.20
5179,source_addr_subunit
5180,TLV
5181,The subcomponent in the
5182,destination device which
5183,created the user data.
5184,5.3.2.2
5185,source_network_type
5186,TLV
5187,The correct network
5188,associated with the
5189,originating device.
5190,5.3.2.4
5191,source_bearer_type
5192,TLV
5193,The correct bearer type for
5194,the delivering the user data to
5195,the destination.
5196,5.3.2.6
5197,source_telematics_id
5198,TLV
5199,The telematics identifier
5200,associated with the source.
5201,5.3.2.8
5202,destination_port
5203,TLV
5204,Indicates the application port
5205,number associated with the
5206,destination address of the
5207,message. This parameter
5208,should be present for WAP
5209,applications.
5210,5.3.2.21
5211,dest_addr_subunit
5212,TLV
5213,The subcomponent in the
5214,destination device for which
5215,the user data is intended.
5216,5.3.2.1
5217,dest_network_type
5218,TLV
5219,The correct network for the
5220,destination device.
5221,5.3.2.3
5222,dest_bearer_type
5223,TLV
5224,The correct bearer type for
5225,the delivering the user data to
5226,the destination.
5227,5.3.2.5
5228,dest_telematics_id
5229,TLV
5230,The telematics identifier
5231,associated with the
5232,destination.
5233,5.3.2.7
5234,Table 4-20: data_sm PDU
5235,©SMPP Developers Forum
5236,Issue 1.2
5237,SMPP PDU Definition
5238,SMPP Protocol Specification v3.4
5239,Optional Parameter Name
5240,Type
5241,Description
5242,Ref.
5243,O
5244,P
5245,T
5246,I
5247,O
5248,N
5249,A
5250,L
5251,P
5252,A
5253,R
5254,A
5255,M
5256,E
5257,T
5258,E
5259,R
5260,S
5261,sar_msg_ref_num
5262,TLV
5263,The reference number for a
5264,particular concatenated short
5265,message.
5266,5.3.2.22
5267,sar_total_segments
5268,TLV
5269,Indicates the total number of
5270,short messages within the
5271,concatenated short message.
5272,5.3.2.23
5273,sar_segment_seqnum
5274,TLV
5275,Indicates the sequence
5276,number of a particular short
5277,message fragment within the
5278,concatenated short message.
5279,5.3.2.24
5280,more_messages_to_send
5281,TLV
5282,Indicates that there are more
5283,messages to follow for the
5284,destination SME.
5285,5.3.2.34
5286,qos_time_to_live
5287,TLV
5288,Time to live as a relative time
5289,in seconds from submission.
5290,5.3.2.9
5291,payload_type
5292,TLV
5293,Defines the type of payload
5294,"(e.g. WDP, WCMP, etc.)."
5295,5.3.2.10
5296,message_payload
5297,TLV
5298,Contains the message user
5299,data. Up to 64K octets can be
5300,transmitted.
5301,5.3.2.32
5302,set_dpf
5303,TLV
5304,Indicator for setting Delivery
5305,Pending Flag on delivery
5306,failure.
5307,5.3.2.29
5308,receipted_message_id
5309,TLV
5310,SMSC message ID of
5311,message being receipted.
5312,Should be present for SMSC
5313,Delivery Receipts and
5314,Intermediate Notifications.
5315,5.3.2.12
5316,message_state
5317,TLV
5318,Message State.
5319,Should be present for SMSC
5320,Delivery Receipts and
5321,Intermediate Notifications.
5322,5.3.2.35
5323,network_error_code
5324,TLV
5325,Network error code.
5326,May be present for SMSC
5327,Delivery Receipts and
5328,Intermediate Notifications.
5329,5.3.2.31
5330,user_message_reference
5331,TLV
5332,ESME assigned message
5333,reference number.
5334,5.3.2.17
5335,Table 4-20: data_sm PDU
5336,SMPP Protocol Specification v3.4
5337,SMPP PDU Definition
5338,Issue 1.2
5339,©SMPP Developers Forum
5340,Optional Parameter Name
5341,Type
5342,Description
5343,Ref.
5344,O
5345,P
5346,T
5347,I
5348,O
5349,N
5350,A
5351,L
5352,P
5353,A
5354,R
5355,A
5356,M
5357,E
5358,T
5359,E
5360,R
5361,S
5362,privacy_indicator
5363,TLV
5364,Indicates a level of privacy
5365,associated with the message.
5366,5.3.2.14
5367,callback_num
5368,TLV
5369,A callback number associated
5370,with the short message. This
5371,parameter can be included a
5372,number of times for multiple
5373,call back addresses.
5374,5.3.2.36
5375,callback_num_pres_ind
5376,TLV
5377,This parameter identifies the
5378,presentation and screening
5379,associated with the callback
5380,number.
5381,If this parameter is present
5382,and there are multiple
5383,instances of the callback_num
5384,parameter then this parameter
5385,must occur an equal number
5386,of instances and the order of
5387,occurrence determines the
5388,particular
5389,callback_num_pres_ind
5390,which corresponds to a
5391,particular callback_num.
5392,5.3.2.37
5393,callback_num_atag
5394,TLV
5395,This parameter associates a
5396,displayable alphanumeric tag
5397,with the callback number.
5398,If this parameter is present
5399,and there are multiple
5400,instances of the callback_num
5401,parameter then this parameter
5402,must occur an equal number
5403,of instances and the order of
5404,occurrence determines the
5405,particular callback_num_atag
5406,which corresponds to a
5407,particular callback_num.
5408,5.3.2.38
5409,source_subaddress
5410,TLV
5411,The subaddress of the
5412,message originator.
5413,5.3.2.15
5414,dest_subaddress
5415,TLV
5416,The subaddress of the
5417,message destination.
5418,5.3.2.16
5419,user_response_code
5420,TLV
5421,A user response code. The
5422,actual response codes are
5423,implementation specific.
5424,5.3.2.18
5425,Table 4-20: data_sm PDU
5426,©SMPP Developers Forum
5427,Issue 1.2
5428,SMPP PDU Definition
5429,SMPP Protocol Specification v3.4
5430,Optional Parameter Name
5431,Type
5432,Description
5433,Ref.
5434,O
5435,P
5436,T
5437,I
5438,O
5439,N
5440,A
5441,L
5442,P
5443,A
5444,R
5445,A
5446,M
5447,E
5448,T
5449,E
5450,R
5451,S
5452,display_time
5453,TLV
5454,Provides the receiving MS
5455,based SME with a display
5456,time associated with the
5457,message.
5458,5.3.2.26
5459,sms_signal
5460,TLV
5461,Indicates the alerting
5462,mechanism when the message
5463,is received by an MS.
5464,5.3.2.40
5465,ms_validity
5466,TLV
5467,Indicates validity information
5468,for this message to the
5469,recipient MS.
5470,5.3.2.27
5471,ms_msg_wait_facilities
5472,TLV
5473,This parameter controls the
5474,indication and specifies the
5475,message type (of the message
5476,associated with the MWI) at
5477,the mobile station.
5478,5.3.2.13
5479,number_of_messages
5480,TLV
5481,Indicates the number of
5482,messages stored in a mail box
5483,(e.g. voice mail box).
5484,5.3.2.39
5485,alert_on_msg_delivery
5486,TLV
5487,Requests an MS alert signal
5488,be invoked on message
5489,delivery.
5490,5.3.2.41
5491,language_indicator
5492,TLV
5493,Indicates the language of an
5494,alphanumeric text message.
5495,5.3.2.19
5496,its_reply_type
5497,TLV
5498,The MS user’s reply method
5499,to an SMS delivery message
5500,received from the network is
5501,indicated and controlled by
5502,this parameter.
5503,5.3.2.42
5504,its_session_info
5505,TLV
5506,Session control information
5507,for Interactive Teleservice.
5508,5.3.2.43
5509,Table 4-20: data_sm PDU
5510,SMPP Protocol Specification v3.4
5511,SMPP PDU Definition
5512,Issue 1.2
5513,©SMPP Developers Forum
5514,4.7.2
5515,“DATA_SM_RESP” Syntax
5516,The following is the format of the SMPP data_sm_resp PDU.
5517,note
5518,a.
5519,These parameters are only relevant for transaction message mode.
5520,H
5521,E
5522,A
5523,D
5524,E
5525,R
5526,Field Name
5527,Size
5528,octets
5529,Type
5530,Description
5531,Ref.
5532,command_length
5533,4
5534,Integer
5535,Set to overall length of PDU
5536,5.1.1
5537,command_id
5538,4
5539,Integer
5540,data_sm_resp
5541,5.1.2
5542,command_status
5543,4
5544,Integer
5545,Indicates outcome of data_sm
5546,request.
5547,5.1.3
5548,sequence_number
5549,4
5550,Integer
5551,Set to sequence number of
5552,original data_sm PDU.
5553,5.1.4
5554,B
5555,O
5556,D
5557,Y
5558,message_id
5559,Var.
5560,max
5561,65
5562,C-
5563,Octet
5564,String
5565,This field contains the SMSC
5566,assigned message ID of the
5567,short message.
5568,5.2.23
5569,OPTIONAL PARAMETERS for DATA_SM_RESP
5570,Optional Parameter Name
5571,Type
5572,Description
5573,Ref.
5574,delivery_failure_reasona
5575,TLV
5576,Include to indicate reason for
5577,delivery failure.
5578,5.3.2.33
5579,network_error_codea
5580,TLV
5581,Error code specific to a
5582,wireless network.
5583,5.3.2.31
5584,additional_status_info_text
5585,TLV
5586,ASCII text giving a
5587,description of the meaning of
5588,the response
5589,5.3.2.11
5590,dpf_resulta
5591,TLV
5592,Indicates whether the
5593,Delivery Pending Flag was
5594,set.
5595,5.3.2.28
5596,Table 4-21: data_sm_resp PDU
5597,©SMPP Developers Forum
5598,Issue 1.2
5599,SMPP PDU Definition
5600,SMPP Protocol Specification v3.4
5601,4.8
5602,“QUERY_SM” Operation
5603,This command is issued by the ESME to query the status of a previously submitted short
5604,message.
5605,The matching mechanism is based on the SMSC assigned message_id and source address.
5606,"Where the original submit_sm, data_sm or submit_multi ‘source address’ was defaulted to"
5607,"NULL, then the source address in the query_sm command should also be set to NULL."
5608,SMPP Protocol Specification v3.4
5609,SMPP PDU Definition
5610,Issue 1.2
5611,©SMPP Developers Forum
5612,4.8.1
5613,“QUERY_SM” Syntax
5614,Following is the format of the SMPP query_sm PDU.
5615,H
5616,E
5617,A
5618,D
5619,E
5620,R
5621,Field Name
5622,Size
5623,octets
5624,Type
5625,Description
5626,Ref.
5627,command_length
5628,4
5629,Integer
5630,Set to overall length of PDU
5631,5.1.1
5632,command_id
5633,4
5634,Integer
5635,query_sm
5636,5.1.2
5637,command_status
5638,4
5639,Integer
5640,Not used.
5641,Set to NULL.
5642,5.1.3
5643,sequence_number
5644,4
5645,Integer
5646,Set to a unique sequence number. The
5647,associated query_sm_resp PDU
5648,should echo the same sequence
5649,number
5650,5.1.4
5651,M
5652,A
5653,N
5654,D
5655,A
5656,T
5657,O
5658,R
5659,Y
5660,P
5661,A
5662,R
5663,A
5664,M
5665,E
5666,T
5667,E
5668,R
5669,S
5670,message_id
5671,Var.
5672,Max
5673,65
5674,C-Octet
5675,String
5676,Message ID of the message whose
5677,state is to be queried. This must be the
5678,SMSC assigned Message ID allocated
5679,to the original short message when
5680,submitted to the SMSC by the
5681,"submit_sm, data_sm or submit_multi"
5682,"command, and returned in the"
5683,response PDU by the SMSC.
5684,5.2.23
5685,source_addr_ton
5686,1
5687,Integer
5688,Type of Number of message
5689,originator. This is used for
5690,"verification purposes, and must match"
5691,that supplied in the original request
5692,PDU (e.g. submit_sm).
5693,"If not known, set to NULL."
5694,5.2.5
5695,source_addr_npi
5696,1
5697,Integer
5698,Numbering Plan Identity of message
5699,originator. This is used for
5700,"verification purposes, and must match"
5701,that supplied in the original request
5702,PDU (e.g. submit_sm).
5703,"If not known, set to NULL."
5704,5.2.6
5705,source_addr
5706,Var.
5707,Max
5708,21
5709,C-Octet
5710,String
5711,Address of message originator.
5712,"This is used for verification purposes,"
5713,and must match that supplied in the
5714,original request PDU (e.g.
5715,submit_sm).
5716,"If not known, set to NULL."
5717,5.2.8
5718,Table 4-22: query_sm PDU
5719,©SMPP Developers Forum
5720,Issue 1.2
5721,SMPP PDU Definition
5722,SMPP Protocol Specification v3.4
5723,4.8.2
5724,“QUERY_SM_RESP” Syntax
5725,Following is the format of the SMPP query_sm_resp PDU.
5726,H
5727,E
5728,A
5729,D
5730,E
5731,R
5732,Field Name
5733,Size
5734,octets
5735,Type
5736,Description
5737,Ref.
5738,command_length
5739,4
5740,Integer
5741,Set to overall length of PDU.
5742,5.1.1
5743,command_id
5744,4
5745,Integer
5746,query_sm_resp
5747,5.1.2
5748,command_status
5749,4
5750,Integer
5751,Indicates outcome of query_sm
5752,request
5753,5.1.3
5754,sequence_number
5755,4
5756,Integer
5757,Set to sequence number of
5758,original query_sm PDU.
5759,5.1.4
5760,M
5761,A
5762,N
5763,D
5764,A
5765,T
5766,O
5767,R
5768,Y
5769,P
5770,A
5771,R
5772,A
5773,M
5774,E
5775,T
5776,E
5777,R
5778,S
5779,message_id
5780,Var.
5781,max
5782,65
5783,C-
5784,Octet
5785,String
5786,SMSC Message ID of the
5787,message whose state is being
5788,queried.
5789,5.2.23
5790,final_date
5791,1 or 17
5792,C-
5793,Octet
5794,String
5795,Date and time when the queried
5796,message reached a final state. For
5797,messages which have not yet
5798,reached a final state this field will
5799,contain a single NULL octet.
5800,7.1.1
5801,message_state
5802,1
5803,Integer
5804,Specifies the status of the queried
5805,short message.
5806,5.2.28
5807,error_code
5808,1
5809,Integer
5810,Where appropriate this holds a
5811,network error code defining the
5812,reason for failure of message
5813,delivery.
5814,6.1
5815,Table 4-23: query_sm_resp PDU
5816,SMPP Protocol Specification v3.4
5817,SMPP PDU Definition
5818,Issue 1.2
5819,©SMPP Developers Forum
5820,4.9
5821,“CANCEL_SM” Operation
5822,This command is issued by the ESME to cancel one or more previously submitted short
5823,messages that are still pending delivery. The command may specify a particular message to
5824,"cancel, or all messages for a particular source, destination and service_type are to be cancelled."
5825,•
5826,"If the message_id is set to the ID of a previously submitted message, then provided the"
5827,"source address supplied by the ESME matches that of the stored message, that message"
5828,will be cancelled.
5829,•
5830,"If the message_id is NULL, all outstanding undelivered messages with matching source"
5831,"and destination addresses given in the PDU are cancelled. If provided, service_type is"
5832,included in this matching.
5833,"Where the original submit_sm, data_sm or submit_multi ‘source address’ was defaulted to"
5834,"NULL, then the source address in the cancel_sm command should also be NULL."
5835,©SMPP Developers Forum
5836,Issue 1.2
5837,SMPP PDU Definition
5838,SMPP Protocol Specification v3.4
5839,4.9.1
5840,“CANCEL_SM” Syntax
5841,Following is the format of the SMPP cancel_sm PDU.
5842,H
5843,E
5844,A
5845,D
5846,E
5847,R
5848,Field Name
5849,Size
5850,octets
5851,Type
5852,Description
5853,Ref.
5854,command_length
5855,4
5856,Integer
5857,Set to overall length of PDU.
5858,5.1.1
5859,command_id
5860,4
5861,Integer
5862,cancel_sm
5863,5.1.2
5864,command_status
5865,4
5866,Integer
5867,Not used. Set to NULL.
5868,5.1.3
5869,sequence_number
5870,4
5871,Integer
5872,Set to a unique sequence number.
5873,The associated cancel_sm_resp
5874,PDU should echo the same
5875,sequence number.
5876,5.1.4
5877,M
5878,A
5879,N
5880,D
5881,A
5882,T
5883,O
5884,R
5885,Y
5886,P
5887,A
5888,R
5889,A
5890,M
5891,E
5892,T
5893,E
5894,R
5895,S
5896,service_type
5897,Var.
5898,max
5899,6
5900,C-
5901,Octet
5902,String
5903,Set to indicate SMS Application
5904,"service, if cancellation of a group"
5905,of application service messages is
5906,desired.
5907,Otherwise set to NULL.
5908,5.2.11
5909,message_id
5910,Var.
5911,max
5912,65
5913,C-
5914,Octet
5915,String
5916,Message ID of the message to be
5917,cancelled. This must be the SMSC
5918,assigned Message ID of the
5919,original message.
5920,Set to NULL if cancelling a group
5921,of messages.
5922,5.2.23
5923,source_addr_ton
5924,1
5925,Integer
5926,Type of Number of message
5927,originator. This is used for
5928,"verification purposes, and must"
5929,match that supplied in the original
5930,message submission request PDU.
5931,"If not known, set to NULL."
5932,5.2.5
5933,source_addr_npi
5934,1
5935,Integer
5936,Numbering Plan Identity of
5937,message originator.
5938,This is used for verification
5939,"purposes, and must match that"
5940,supplied in the original message
5941,submission request PDU.
5942,"If not known, set to NULL."
5943,5.2.6
5944,source_addr
5945,Var.
5946,max
5947,21
5948,C-
5949,Octet
5950,String
5951,Source address of message(s) to
5952,be cancelled. This is used for
5953,"verification purposes, and must"
5954,match that supplied in the original
5955,message submission request
5956,PDU(s).
5957,5.2.8
5958,Table 4-24: cancel_sm PDU
5959,SMPP Protocol Specification v3.4
5960,SMPP PDU Definition
5961,Issue 1.2
5962,©SMPP Developers Forum
5963,Field Name
5964,Size
5965,octets
5966,Type
5967,Description
5968,Ref.
5969,M
5970,A
5971,N
5972,D
5973,A
5974,T
5975,O
5976,R
5977,Y
5978,P
5979,A
5980,R
5981,A
5982,M
5983,E
5984,T
5985,E
5986,R
5987,S
5988,dest_addr_ton
5989,1
5990,Integer
5991,Type of number of destination
5992,SME address of the message(s) to
5993,be cancelled.
5994,This is used for verification
5995,"purposes, and must match that"
5996,supplied in the original message
5997,submission request PDU (e.g.
5998,submit_sm).
5999,May be set to NULL when the
6000,message_id is provided.
6001,5.2.5
6002,dest_addr_npi
6003,1
6004,Integer
6005,Numbering Plan Indicator of
6006,destination SME address of the
6007,message(s)) to be cancelled.
6008,This is used for verification
6009,"purposes, and must match that"
6010,supplied in the original message
6011,submission request PDU.
6012,May be set to NULL when the
6013,message_id is provided.
6014,5.2.6
6015,destination_addr
6016,Var.
6017,max
6018,21
6019,C-
6020,Octet
6021,String
6022,Destination address of message(s)
6023,to be cancelled.
6024,This is used for verification
6025,"purposes, and must match that"
6026,supplied in the original message
6027,submission request PDU. May be
6028,set to NULL when the message_id
6029,is provided.
6030,5.2.9
6031,Table 4-24: cancel_sm PDU (Continued)
6032,©SMPP Developers Forum
6033,Issue 1.2
6034,SMPP PDU Definition
6035,SMPP Protocol Specification v3.4
6036,4.9.2
6037,“CANCEL_SM_RESP” Syntax
6038,The cancel_sm_resp PDU is used to reply to a cancel_sm request. It comprises the SMPP
6039,message header only.
6040,.
6041,H
6042,E
6043,A
6044,D
6045,E
6046,R
6047,Field Name
6048,Size
6049,octets
6050,Type
6051,Description
6052,Ref.
6053,command_length
6054,4
6055,Integer
6056,Set to overall length of PDU.
6057,5.1.1
6058,command_id
6059,4
6060,Integer
6061,cancel_sm_resp
6062,5.1.2
6063,command_status
6064,4
6065,Integer
6066,Indicates outcome of cancel_sm
6067,request.
6068,5.1.3
6069,sequence_number
6070,4
6071,Integer
6072,Set to sequence number of
6073,cancel_sm PDU.
6074,5.1.4
6075,Table 4-25: cancel_sm_resp PDU
6076,SMPP Protocol Specification v3.4
6077,SMPP PDU Definition
6078,Issue 1.2
6079,©SMPP Developers Forum
6080,4.10 “REPLACE_SM” Operation
6081,This command is issued by the ESME to replace a previously submitted short message that is
6082,still pending delivery. The matching mechanism is based on the message_id and source address
6083,of the original message.
6084,"Where the original submit_sm ‘source address’ was defaulted to NULL, then the source address"
6085,in the replace_sm command should also be NULL
6086,©SMPP Developers Forum
6087,Issue 1.2
6088,SMPP PDU Definition
6089,SMPP Protocol Specification v3.4
6090,4.10.1
6091,“REPLACE_SM” Syntax
6092,Following is the format of the SMPP replace_sm PDU. The command_id field contains the
6093,command identifier code for replace_sm.
6094,H
6095,E
6096,A
6097,D
6098,E
6099,R
6100,Field Name
6101,Size
6102,octets
6103,Type
6104,Description
6105,Ref.
6106,command_length
6107,4
6108,Integer
6109,Set to overall length of PDU.
6110,5.1.1
6111,command_id
6112,4
6113,Integer
6114,replace_sm
6115,5.1.2
6116,command_status
6117,4
6118,Integer
6119,Not used. Set to NULL
6120,5.1.3
6121,sequence_number
6122,4
6123,Integer
6124,Set to a unique sequence
6125,number. The associated
6126,replace_sm_resp PDU should
6127,echo the same sequence
6128,number.
6129,5.1.4
6130,M
6131,A
6132,N
6133,D
6134,A
6135,T
6136,O
6137,R
6138,Y
6139,P
6140,A
6141,R
6142,A
6143,M
6144,E
6145,T
6146,E
6147,R
6148,S
6149,message_id
6150,Var.
6151,max
6152,65
6153,C-
6154,Octet
6155,String
6156,SMSC message ID of the
6157,message to be replaced. This
6158,must be the message ID
6159,allocated to the original short
6160,message when submitted to the
6161,SMSC by the submit_sm
6162,"command, and returned in the"
6163,submit_sm_resp message by
6164,the SMSC.
6165,5.2.23
6166,source_addr_ton
6167,1
6168,Integer
6169,Type of Number of mesage
6170,originator. This is used for
6171,"verification purposes, and must"
6172,match that supplied in the
6173,corresponding submit_sm
6174,request.
6175,"If not known, set to NULL."
6176,5.2.5
6177,source_addr_npi
6178,1
6179,Integer
6180,Numbering Plan Identity of
6181,message originator. This is used
6182,"for verification purposes, and"
6183,must match that supplied in the
6184,corresponding submit_sm
6185,request.
6186,If not known set to NULL.
6187,5.2.6
6188,source_addr
6189,Var.
6190,1-21
6191,C-
6192,Octet
6193,String
6194,Originating address of the short
6195,message to be replaced. This is
6196,"used for verification purposes,"
6197,and must match that supplied in
6198,the corresponding submit_sm
6199,request.
6200,5.2.8
6201,Table 4-26: replace_sm PDU
6202,SMPP Protocol Specification v3.4
6203,SMPP PDU Definition
6204,Issue 1.2
6205,©SMPP Developers Forum
6206,Field Name
6207,Size
6208,octets
6209,Type
6210,Description
6211,Ref.
6212,M
6213,A
6214,N
6215,D
6216,A
6217,T
6218,O
6219,R
6220,Y
6221,P
6222,A
6223,R
6224,A
6225,M
6226,E
6227,T
6228,E
6229,R
6230,S
6231,schedule_delivery_time
6232,1 or
6233,17
6234,C-
6235,Octet
6236,String
6237,New scheduled delivery time
6238,for the short message.
6239,"Set to NULL, if updating of the"
6240,original scheduled delivery
6241,time is not desired.
6242,5.2.15
6243,validity_period
6244,1 or
6245,17
6246,C-
6247,Octet
6248,String
6249,New expiration time for the
6250,"short message. Set to NULL, if"
6251,updating of the original
6252,expiration time is not required.
6253,5.2.16
6254,registered_delivery
6255,1
6256,Integer
6257,New registered delivery
6258,parameter setting.
6259,5.2.17
6260,sm_default_msg_id
6261,1
6262,Integer
6263,New pre-defined (canned)
6264,message identifier.
6265,5.2.20
6266,sm_length
6267,1
6268,Integer
6269,Length of new short message in
6270,octets.
6271,5.2.21
6272,short_message
6273,Var.
6274,0-254
6275,Octet
6276,String
6277,New short message to replace
6278,existing message.
6279,5.2.22
6280,Table 4-26: replace_sm PDU (Continued)
6281,©SMPP Developers Forum
6282,Issue 1.2
6283,SMPP PDU Definition
6284,SMPP Protocol Specification v3.4
6285,4.10.2
6286,“REPLACE_SM_RESP” Syntax
6287,The replace_sm_resp PDU is used to reply to a replace_sm request. It comprises the SMPP
6288,message header only.
6289,H
6290,E
6291,A
6292,D
6293,E
6294,R
6295,Field Name
6296,Size
6297,octets
6298,Type
6299,Description
6300,Ref.
6301,command_length
6302,4
6303,Integer
6304,Set to overall length of PDU.
6305,5.1.1
6306,command_id
6307,4
6308,Integer
6309,replace_sm_resp
6310,5.1.2
6311,command_status
6312,4
6313,Integer
6314,Indicates outcome of
6315,replace_sm request
6316,5.1.3
6317,sequence_number
6318,4
6319,Integer
6320,Expected to be the same
6321,sequence number of original
6322,replace_sm PDU.
6323,5.1.4
6324,Table 4-27: replace_sm_resp PDU
6325,SMPP Protocol Specification v3.4
6326,SMPP PDU Definition
6327,Issue 1.2
6328,©SMPP Developers Forum
6329,4.11 “ENQUIRE_LINK” Operation
6330,This message can be sent by either the ESME or SMSC and is used to provide a confidence-
6331,check of the communication path between an ESME and an SMSC. On receipt of this request
6332,"the receiving party should respond with an enquire_link_resp, thus verifying that the"
6333,application level connection between the SMSC and the ESME is functioning. The ESME may
6334,also respond by sending any valid SMPP primitive.
6335,©SMPP Developers Forum
6336,Issue 1.2
6337,SMPP PDU Definition
6338,SMPP Protocol Specification v3.4
6339,4.11.1
6340,“ENQUIRE_LINK” Syntax
6341,The enquire_link PDU comprises the SMPP message header only.
6342,4.11.2
6343,“ENQUIRE_LINK_RESP” Syntax
6344,The enquire_link_resp PDU is used to reply to an enquire_link request. It comprises the SMPP
6345,message header only.
6346,H
6347,E
6348,A
6349,D
6350,E
6351,R
6352,Field Name
6353,Size
6354,octets
6355,Type
6356,Description
6357,Ref.
6358,command_length
6359,4
6360,Integer
6361,Set to overall length of PDU
6362,5.1.1
6363,command_id
6364,4
6365,Integer
6366,enquire_link
6367,5.1.2
6368,command_status
6369,4
6370,Integer
6371,Not used. Set to NULL
6372,5.1.3
6373,sequence_number
6374,4
6375,Integer
6376,Set to a unique sequence
6377,number. The associated
6378,enquire_link_resp PDU should
6379,echo the same sequence number
6380,5.1.4
6381,Table 4-28: enquire_link PDU
6382,H
6383,E
6384,A
6385,D
6386,E
6387,R
6388,Field Name
6389,Size
6390,octets
6391,Type
6392,Description
6393,Ref.
6394,command_length
6395,4
6396,Integer
6397,Set to overall length of PDU
6398,5.1.1
6399,command_id
6400,4
6401,Integer
6402,enquire_link_resp
6403,5.1.2
6404,command_status
6405,4
6406,Integer
6407,Set to ESME_ROK (Success)
6408,5.1.3
6409,sequence_number
6410,4
6411,Integer
6412,Set to the same sequence
6413,number of original
6414,enquire_link PDU
6415,5.1.4
6416,Table 4-29: enquire_link_resp PDU
6417,SMPP Protocol Specification v3.4
6418,SMPP PDU Definition
6419,Issue 1.2
6420,©SMPP Developers Forum
6421,4.12 “ALERT_NOTIFICATION” Operation
6422,"This message is sent by the SMSC to the ESME, when the SMSC has detected that a particular"
6423,mobile subscriber has become available and a delivery pending flag had been set for that
6424,subscriber from a previous data_sm operation.
6425,It may be used for example to trigger a data content ‘Push’ to the subscriber from a WAP Proxy
6426,Server.
6427,Note:
6428,There is no alert_notification_resp PDU.
6429,©SMPP Developers Forum
6430,Issue 1.2
6431,SMPP PDU Definition
6432,SMPP Protocol Specification v3.4
6433,4.12.1
6434,“ALERT_NOTIFICATION” Syntax
6435,Following is the format of the SMPP alert_notification PDU.
6436,H
6437,E
6438,A
6439,D
6440,E
6441,R
6442,Field Name
6443,Size
6444,octets
6445,Type
6446,Description
6447,Ref.
6448,command_length
6449,4
6450,Integer
6451,Set to overall length of PDU.
6452,5.1.1
6453,command_id
6454,4
6455,Integer
6456,alert_notification
6457,5.1.2
6458,command_status
6459,4
6460,Integer
6461,Not used.
6462,Set to NULL.
6463,5.1.3
6464,sequence_number
6465,4
6466,Integer
6467,Set to a unique sequence
6468,number.
6469,5.1.4
6470,M
6471,A
6472,N
6473,D
6474,A
6475,T
6476,O
6477,R
6478,Y
6479,P
6480,A
6481,R
6482,A
6483,M
6484,E
6485,T
6486,E
6487,R
6488,S
6489,source_addr_ton
6490,1
6491,Integer
6492,Type of number for the MS
6493,which has become available.
6494,"If not known, set to NULL."
6495,5.2.5
6496,source_addr_npi
6497,1
6498,Integer
6499,Numbering Plan Indicator for
6500,the MS which has become
6501,available.
6502,"If not known, set to NULL."
6503,5.2.6
6504,source_addr
6505,Var.
6506,max
6507,65
6508,C-
6509,Octet
6510,String
6511,Address of MS which has
6512,become available.
6513,5.2.8
6514,esme_addr_ton
6515,1
6516,Integer
6517,Type of number for
6518,destination address which
6519,requested an alert on a
6520,particular MS becoming
6521,available.
6522,"If not known, set to NULL."
6523,5.2.5
6524,esme_addr_npi
6525,1
6526,Integer
6527,Numbering Plan Indicator for
6528,ESME which requested an
6529,alert on a particular MS
6530,becoming available.
6531,"If not known, set to NULL."
6532,5.2.6
6533,esme_addr
6534,Var.
6535,max
6536,65
6537,C-
6538,Octet
6539,String
6540,Address of ESME which
6541,requested an alert on a
6542,particular MS becoming
6543,available.
6544,5.2.10
6545,OPTIONAL PARAMETERS for ALERT_NOTIFICATION
6546,Optional Parameter Name
6547,Type
6548,Description
6549,Ref.
6550,ms_availability_status
6551,TLV
6552,The status of the mobile
6553,station.
6554,5.3.2.30
6555,Table 4-30: alert_notification PDU
6556,SMPP Protocol Specification v3.4
6557,SMPP Parameter Definition
6558,Issue 1.2
6559,©SMPP Developers Forum
6560,5.
6561,SMPP Parameter Definition
6562,This section describes the parameters which can be specified in an SMPP command.
6563,5.1
6564,Command Header Parameters
6565,5.1.1
6566,command_length
6567,The command_length parameter indicates the length in octets of the SMPP message. The SMPP
6568,"message header (including the command_length field itself), the mandatory parameters and the"
6569,optional parameters are all considered.
6570,5.1.2
6571,command_id
6572,"The command_id field identifies the type of message the SMPP PDU represents, for example,"
6573,"submit_sm, query_sm etc."
6574,A command identifier is allocated to each SMPP request primitive. For reserved range value
6575,settings refer to Table 5-1:.
6576,A response command identifier is allocated to each response primitive. For reserved range
6577,value settings refer to Table 5-1: (In general a response command identifier is identical to the
6578,"corresponding request command identifier, but with bit 31 set)."
6579,©SMPP Developers Forum
6580,Issue 1.2
6581,SMPP Parameter Definition
6582,SMPP Protocol Specification v3.4
6583,5.1.2.1
6584,SMPP Command set
6585,The complete set of SMPP Command IDs and their associated values are defined in the
6586,following table.
6587,Command ID
6588,Value
6589,generic_nack
6590,0x80000000
6591,bind_receiver
6592,0x00000001
6593,bind_receiver_resp
6594,0x80000001
6595,bind_transmitter
6596,0x00000002
6597,bind_transmitter_resp
6598,0x80000002
6599,query_sm
6600,0x00000003
6601,query_sm_resp
6602,0x80000003
6603,submit_sm
6604,0x00000004
6605,submit_sm_resp
6606,0x80000004
6607,deliver_sm
6608,0x00000005
6609,deliver_sm_resp
6610,0x80000005
6611,unbind
6612,0x00000006
6613,unbind_resp
6614,0x80000006
6615,replace_sm
6616,0x00000007
6617,replace_sm_resp
6618,0x80000007
6619,cancel_sm
6620,0x00000008
6621,cancel_sm_resp
6622,0x80000008
6623,bind_transceiver
6624,0x00000009
6625,bind_transceiver_resp
6626,0x80000009
6627,Reserved
6628,0x0000000A
6629,0x8000000A
6630,outbind
6631,0x0000000B
6632,Reserved
6633,0x0000000C - 0x00000014
6634,0x8000000B - 0x80000014
6635,enquire_link
6636,0x00000015
6637,enquire_link_resp
6638,0x80000015
6639,Reserved
6640,0x00000016 - 0x00000020
6641,0x80000016 - 0x80000020
6642,Table 5-1: SMPP Command ID Values
6643,SMPP Protocol Specification v3.4
6644,SMPP Parameter Definition
6645,Issue 1.2
6646,©SMPP Developers Forum
6647,submit_multi
6648,0x00000021
6649,submit_multi_resp
6650,0x80000021
6651,Reserved
6652,0x00000022 - 0x000000FF
6653,0x80000022 - 0x800000FF
6654,Reserved
6655,0x00000100
6656,Reserved
6657,0x80000100
6658,Reserved
6659,0x00000101
6660,0x80000101
6661,alert_notification
6662,0x00000102
6663,Reserved
6664,0x80000102
6665,data_sm
6666,0x00000103
6667,data_sm_resp
6668,0x80000103
6669,Reserved for SMPP extension
6670,0x00000104 - 0x0000FFFF
6671,0x80000104 - 0x8000FFFF
6672,Reserved
6673,0x00010000 - 0x000101FF
6674,0x80010000 - 0x800101FF
6675,Reserved for SMSC Vendor
6676,0x00010200 - 0x000102FF
6677,0x80010200 - 0x800102FF
6678,Reserved
6679,0x00010300 - 0xFFFFFFFF
6680,Command ID
6681,Value
6682,Table 5-1: SMPP Command ID Values (Continued)
6683,©SMPP Developers Forum
6684,Issue 1.2
6685,SMPP Parameter Definition
6686,SMPP Protocol Specification v3.4
6687,5.1.3
6688,command_status
6689,The command_status field of an SMPP message response indicates the success or failure of an
6690,SMPP request. It is relevant only in the SMPP response message and should be set to NULL in
6691,SMPP request messages.
6692,The SMPP Error status codes are returned by the SMSC in the command_status field of the
6693,SMPP message header and in the error_status_code field of a submit_multi_resp message.
6694,The complete set of SMPP Error Codes and their associated values are defined in the following
6695,table.
6696,Error Code
6697,Value
6698,Description
6699,ESME_ROK
6700,0x00000000
6701,No Error
6702,ESME_RINVMSGLEN
6703,0x00000001
6704,Message Length is invalid
6705,ESME_RINVCMDLEN
6706,0x00000002
6707,Command Length is invalid
6708,ESME_RINVCMDID
6709,0x00000003
6710,Invalid Command ID
6711,ESME_RINVBNDSTS
6712,0x00000004
6713,Incorrect BIND Status for given com-
6714,mand
6715,ESME_RALYBND
6716,0x00000005
6717,ESME Already in Bound State
6718,ESME_RINVPRTFLG
6719,0x00000006
6720,Invalid Priority Flag
6721,ESME_RINVREGDLVFLG
6722,0x00000007
6723,Invalid Registered Delivery Flag
6724,ESME_RSYSERR
6725,0x00000008
6726,System Error
6727,Reserved
6728,0x00000009
6729,Reserved
6730,ESME_RINVSRCADR
6731,0x0000000A
6732,Invalid Source Address
6733,ESME_RINVDSTADR
6734,0x0000000B
6735,Invalid Dest Addr
6736,ESME_RINVMSGID
6737,0x0000000C
6738,Message ID is invalid
6739,ESME_RBINDFAIL
6740,0x0000000D
6741,Bind Failed
6742,ESME_RINVPASWD
6743,0x0000000E
6744,Invalid Password
6745,ESME_RINVSYSID
6746,0x0000000F
6747,Invalid System ID
6748,Reserved
6749,0x00000010
6750,Reserved
6751,ESME_RCANCELFAIL
6752,0x00000011
6753,Cancel SM Failed
6754,Reserved
6755,0x00000012
6756,Reserved
6757,ESME_RREPLACEFAIL
6758,0x00000013
6759,Replace SM Failed
6760,Table 5-2: SMPP Error Codes
6761,SMPP Protocol Specification v3.4
6762,SMPP Parameter Definition
6763,Issue 1.2
6764,©SMPP Developers Forum
6765,ESME_RMSGQFUL
6766,0x00000014
6767,Message Queue Full
6768,ESME_RINVSERTYP
6769,0x00000015
6770,Invalid Service Type
6771,Reserved
6772,0x00000016-
6773,0x00000032
6774,Reserved
6775,ESME_RINVNUMDESTS
6776,0x00000033
6777,Invalid number of destinations
6778,ESME_RINVDLNAME
6779,0x00000034
6780,Invalid Distribution List name
6781,Reserved
6782,0x00000035-
6783,0x0000003F
6784,Reserved
6785,ESME_RINVDESTFLAG
6786,0x00000040
6787,Destination
6788,flag
6789,is
6790,invalid
6791,(submit_multi)
6792,Reserved
6793,0x00000041
6794,Reserved
6795,ESME_RINVSUBREP
6796,0x00000042
6797,Invalid ‘submit with replace’ request
6798,(i.e.
6799,submit_sm
6800,with
6801,replace_if_present_flag set)
6802,ESME_RINVESMCLASS
6803,0x00000043
6804,Invalid esm_class field data
6805,ESME_RCNTSUBDL
6806,0x00000044
6807,Cannot Submit to Distribution List
6808,ESME_RSUBMITFAIL
6809,0x00000045
6810,submit_sm or submit_multi failed
6811,Reserved
6812,0x00000046-
6813,0x00000047
6814,Reserved
6815,ESME_RINVSRCTON
6816,0x00000048
6817,Invalid Source address TON
6818,ESME_RINVSRCNPI
6819,0x00000049
6820,Invalid Source address NPI
6821,ESME_RINVDSTTON
6822,0x00000050
6823,Invalid Destination address TON
6824,ESME_RINVDSTNPI
6825,0x00000051
6826,Invalid Destination address NPI
6827,Reserved
6828,0x00000052
6829,Reserved
6830,ESME_RINVSYSTYP
6831,0x00000053
6832,Invalid system_type field
6833,ESME_RINVREPFLAG
6834,0x00000054
6835,Invalid replace_if_present flag
6836,ESME_RINVNUMMSGS
6837,0x00000055
6838,Invalid number of messages
6839,Reserved
6840,0x00000056-
6841,0x00000057
6842,Reserved
6843,ESME_RTHROTTLED
6844,0x00000058
6845,Throttling error (ESME has exceeded
6846,allowed message limits)
6847,Reserved
6848,0x00000059-
6849,0x00000060
6850,Reserved
6851,Error Code
6852,Value
6853,Description
6854,Table 5-2: SMPP Error Codes
6855,©SMPP Developers Forum
6856,Issue 1.2
6857,SMPP Parameter Definition
6858,SMPP Protocol Specification v3.4
6859,ESME_RINVSCHED
6860,0x00000061
6861,Invalid Scheduled Delivery Time
6862,ESME_RINVEXPIRY
6863,0x00000062
6864,Invalid
6865,message
6866,validity
6867,period
6868,(Expiry time)
6869,ESME_RINVDFTMSGID
6870,0x00000063
6871,Predefined Message Invalid or Not
6872,Found
6873,ESME_RX_T_APPN
6874,0x00000064
6875,ESME Receiver Temporary App
6876,Error Code
6877,ESME_RX_P_APPN
6878,0x00000065
6879,ESME Receiver Permanent App Error
6880,Code
6881,ESME_RX_R_APPN
6882,0x00000066
6883,ESME Receiver Reject Message Error
6884,Code
6885,ESME_RQUERYFAIL
6886,0x00000067
6887,query_sm request failed
6888,Reserved
6889,0x00000068
6890,-
6891,0x000000BF
6892,Reserved
6893,ESME_RINVOPTPARSTREAM
6894,0x000000C0
6895,Error in the optional part of the PDU
6896,Body.
6897,ESME_ROPTPARNOTALLWD
6898,0x000000C1
6899,Optional Parameter not allowed
6900,ESME_RINVPARLEN
6901,0x000000C2
6902,Invalid Parameter Length.
6903,ESME_RMISSINGOPTPARAM
6904,0x000000C3
6905,Expected Optional Parameter missing
6906,ESME_RINVOPTPARAMVAL
6907,0x000000C4
6908,Invalid Optional Parameter Value
6909,Reserved
6910,0x000000C5
6911,-
6912,0x000000FD
6913,Reserved
6914,ESME_RDELIVERYFAILURE
6915,0x000000FE
6916,Delivery
6917,Failure
6918,(used
6919,for
6920,data_sm_resp)
6921,ESME_RUNKNOWNERR
6922,0x000000FF
6923,Unknown Error
6924,Reserved for SMPP extension
6925,0x00000100-
6926,0x000003FF
6927,Reserved for SMPP extension
6928,Reserved for SMSC vendor
6929,specific errors
6930,0x00000400-
6931,0x000004FF
6932,Reserved for SMSC vendor specific
6933,errors
6934,Reserved
6935,0x00000500-
6936,0xFFFFFFFF
6937,Reserved
6938,Error Code
6939,Value
6940,Description
6941,Table 5-2: SMPP Error Codes
6942,SMPP Protocol Specification v3.4
6943,SMPP Parameter Definition
6944,Issue 1.2
6945,©SMPP Developers Forum
6946,5.1.4
6947,sequence_number
6948,A sequence number allows a response PDU to be correlated with a request PDU.
6949,The associated SMPP response PDU must preserve this field.
6950,The allowed sequence_number range is from 0x00000001 to 0x7FFFFFFF.
6951,©SMPP Developers Forum
6952,Issue 1.2
6953,SMPP Parameter Definition
6954,SMPP Protocol Specification v3.4
6955,5.2
6956,Mandatory SMPP Parameters
6957,5.2.1
6958,system_id
6959,The system_id parameter is used to identify an ESME or an SMSC at bind time. An ESME
6960,system_id identifies the ESME or ESME agent to the SMSC. The SMSC system_id provides an
6961,identification of the SMSC to the ESME.
6962,5.2.2
6963,password
6964,The password parameter is used by the SMSC to authenticate the identity of the binding ESME.
6965,The Service Provider may require ESME’s to provide a password when binding to the SMSC.
6966,This password is normally issued by the SMSC system administrator.
6967,The password parameter may also be used by the ESME to authenticate the identity of the
6968,binding SMSC (e.g. in the case of the outbind operation).
6969,5.2.3
6970,system_type
6971,The system_type parameter is used to categorize the type of ESME that is binding to the SMSC.
6972,Examples include “VMS” (voice mail system) and “OTA” (over-the-air activation system).
6973,Specification of the system_type is optional - some SMSC’s may not require ESME’s to provide
6974,"this detail. In this case, the ESME can set the system_type to NULL."
6975,5.2.4
6976,interface_version
6977,This parameter is used to indicate the version of the SMPP protocol. The following interface
6978,version values are defined:
6979,Interface Version
6980,Value
6981,Indicates that the EMSE supports
6982,version 3.3 or earlier of the SMPP
6983,protocol.
6984,0x00-0x33
6985,Indicates that the ESME is supporting
6986,SMPP version 3.4
6987,0x34
6988,All other values reserved
6989,SMPP Protocol Specification v3.4
6990,SMPP Parameter Definition
6991,Issue 1.2
6992,©SMPP Developers Forum
6993,5.2.5
6994,"addr_ton, source_addr_ton, dest_addr_ton, esme_addr_ton"
6995,These fields define the Type of Number (TON) to be used in the SME address parameters. The
6996,following TON values are defined:
6997,TON
6998,Value
6999,Unknown
7000,00000000
7001,International
7002,00000001
7003,National
7004,00000010
7005,Network Specific
7006,00000011
7007,Subscriber Number
7008,00000100
7009,Alphanumeric
7010,00000101
7011,Abbreviated
7012,00000110
7013,All other values reserved
7014,Table 5-3: TON values
7015,©SMPP Developers Forum
7016,Issue 1.2
7017,SMPP Parameter Definition
7018,SMPP Protocol Specification v3.4
7019,5.2.6
7020,"addr_npi, source_addr_npi, dest_addr_npi, esme_addr_npi"
7021,These fields define the Numeric Plan Indicator (NPI) to be used in the SME address parameters.
7022,The following NPI values are defined:
7023,5.2.7
7024,address_range
7025,The address_range parameter is used in the bind_receiver and bind_transceiver command to
7026,specify a set of SME addresses serviced by the ESME client. A single SME address may also
7027,be specified in the address_range parameter. UNIX Regular Expression notation should be used
7028,to specify a range of addresses (Refer to Appendix A.)
7029,Messages addressed to any destination in this range shall be routed to the ESME.
7030,Notes
7031,"For IP addresses, it is only possible to specify a single IP address. A range of IP addresses is"
7032,not allowed. IP version 6.0 is not currently supported in this version of the protocol.
7033,NPI
7034,Value
7035,Unknown
7036,00000000
7037,ISDN (E163/E164)
7038,00000001
7039,Data (X.121)
7040,00000011
7041,Telex (F.69)
7042,00000100
7043,Land Mobile (E.212)
7044,00000110
7045,National
7046,00001000
7047,Private
7048,00001001
7049,ERMES
7050,00001010
7051,Internet (IP)
7052,00001110
7053,WAP Client Id (to be
7054,defined by WAP Forum)
7055,00010010
7056,All other values reserved
7057,Table 5-4: NPI values
7058,SMPP Protocol Specification v3.4
7059,SMPP Parameter Definition
7060,Issue 1.2
7061,©SMPP Developers Forum
7062,5.2.8
7063,source_addr
7064,Specifies the address of SME which originated this message. An ESME which is implemented
7065,"as a single SME address, may set this field to NULL to allow the SMSC to default the source"
7066,address of the submitted message.
7067,Notes
7068,An IP address is specified in “aaa.bbb.ccc.ddd” notation. IP version 6.0 is not supported in V3.4
7069,of the SMPP protocol.
7070,5.2.9
7071,destination_addr
7072,"Specifies the destination SME address. For mobile terminated messages, this is the directory"
7073,number of the recipient MS.
7074,Notes
7075,An IP address is specified in “aaa.bbb.ccc.ddd” notation. IP version 6.0 is not supported in V3.4
7076,of the SMPP protocol.
7077,5.2.10
7078,esme_addr
7079,Specifies the address of an ESME address to which an alert_notification should be routed.
7080,Notes
7081,An IP address is specified in “aaa.bbb.ccc.ddd” notation. IP version 6.0 is not supported in V3.4
7082,of the SMPP protocol.
7083,©SMPP Developers Forum
7084,Issue 1.2
7085,SMPP Parameter Definition
7086,SMPP Protocol Specification v3.4
7087,5.2.11
7088,service_type
7089,The service_type parameter can be used to indicate the SMS Application service associated
7090,with the message. Specifying the service_type allows the ESME to:-
7091,•
7092,Avail of enhanced messaging services such as message ‘replace_if_present’ by service type
7093,(generic).
7094,•
7095,"Control the teleservice used on the air interface (e.g. ANSI-136/TDMA, IS-95/CDMA)."
7096,SMSC’s may implicitly associate a “replace if present” function from the indicated
7097,"service_type in a message submission operation, i.e., the SMSC will always replace an"
7098,"existing message pending delivery, that has the same originating and destination address as the"
7099,"submitted message. For example, an SMSC can ensure that a Voice Mail System using a"
7100,service_type of “VMA” has at most one outstanding notification per destination MS by
7101,automatically invoking the “replace if present” function.
7102,The following generic service_types are defined:
7103,““ (NULL)
7104,Default
7105,“CMT”
7106,Cellular Messaging
7107,“CPT”
7108,Cellular Paging
7109,“VMN”
7110,Voice Mail Notification
7111,“VMA”
7112,Voice Mail Alerting
7113,“WAP”
7114,Wireless Application Protocol
7115,“USSD”
7116,Unstructured Supplementary Services Data
7117,All other values are carrier specific and are defined by mutual agreement between the SMSC
7118,Service Provider and the ESME application.
7119,SMPP Protocol Specification v3.4
7120,SMPP Parameter Definition
7121,Issue 1.2
7122,©SMPP Developers Forum
7123,5.2.12
7124,esm_class
7125,The esm_class parameter is used to indicate special message attributes associated with the short
7126,message.
7127,"The esm_class parameter is encoded as follows in the submit_sm, submit_multi and data_sm"
7128,(ESME -> SMSC) PDUs:
7129,Bits
7130,7 6 5 4 3 2 1 0
7131,Meaning
7132,Messaging Mode (bits 1-0)
7133,x x x x x x 0 0
7134,Default SMSC Mode (e.g. Store and Forward)
7135,x x x x x x 0 1
7136,Datagram mode
7137,x x x x x x 1 0
7138,Forward (i.e. Transaction) mode
7139,x x x x x x 1 1
7140,Store and Forward mode
7141,(use to select Store and Forward mode if Default SMSC Mode
7142,is non Store and Forward)
7143,Message Type (bits 5-2)
7144,x x 0 0 0 0 x x
7145,Default message Type (i.e. normal message)
7146,x x 0 0 1 0 x x
7147,Short Message contains ESME Delivery Acknowledgement
7148,x x 0 1 0 0 x x
7149,Short Message contains ESME Manual/User
7150,Acknowledgement
7151,GSM Network Specific Features (bits 7-6)
7152,0 0 x x x x x x
7153,No specific features selected
7154,0 1 x x x x x x
7155,UDHI Indicator (only relevant for MT short messages)
7156,1 0 x x x x x x
7157,Set Reply Path (only relevant for GSM network)
7158,1 1 x x x x x x
7159,Set UDHI and Reply Path (only relevant for GSM network)
7160,The esm_class parameter is encoded as follows in a deliver_sm and data_sm (SMSC -> ESME)
7161,PDUs:
7162,Bits
7163,7 6 5 4 3 2 1 0
7164,Meaning
7165,Message Mode (bits 1-0)
7166,x x x x x x x x
7167,not applicable - ignore bits 0 and 1
7168,Message Type (bits 5-2)
7169,x x 0 0 0 0 x x
7170,Default message Type (i.e. normal message)
7171,x x 0 0 0 1 x x
7172,Short Message contains SMSC Delivery Receipt
7173,x x 0 0 1 0 x x
7174,Short Message contains SME Delivery Acknowledgement
7175,x x 0 0 1 1 x x
7176,reserved
7177,x x 0 1 0 0 x x
7178,Short Message contains SME Manual/User Acknowledgment
7179,x x 0 1 0 1 x x
7180,reserved
7181,x x 0 1 1 0 x x
7182,Short Message contains Conversation Abort (Korean CDMA)
7183,x x 0 1 1 1 x x
7184,reserved
7185,x x 1 0 0 0 x x
7186,Short Message contains Intermediate Delivery Notification
7187,all other values reserved
7188,©SMPP Developers Forum
7189,Issue 1.2
7190,SMPP Parameter Definition
7191,SMPP Protocol Specification v3.4
7192,GSM Network Specific Features (bits 7-6)
7193,0 0 x x x x x x
7194,No specific features selected
7195,0 1 x x x x x x
7196,UDHI Indicator set
7197,1 0 x x x x x x
7198,Reply Path
7199,1 1 x x x x x x
7200,UDHI and Reply Path
7201,all other values reserved
7202,The default setting of the esm_class parameter is 0x00.
7203,Notes
7204,-
7205,"If an ESME encodes GSM User Data Header information in the short message user data, it"
7206,must set the UDHI flag in the esm_class field.
7207,-
7208,If the SMSC delivers a short message that contains GSM User Data Header information
7209,"encoded in the short_message or message_payload parameter, it must set the UDHI flag in"
7210,the esm_class field.
7211,-
7212,"For GSM networks, the concatenation related optional parameters (sar_msg_ref_num,"
7213,"sar_total_segments, sar_segment_seqnum) or port addressing related optional parameters"
7214,"(source_port, destination_port) cannot be used in conjunction with encoded User Data"
7215,Header in the short_message (user data) field. This means that the above listed optional
7216,parameters cannot be used if the User Data Header Indicator flag is set.
7217,SMPP Protocol Specification v3.4
7218,SMPP Parameter Definition
7219,Issue 1.2
7220,©SMPP Developers Forum
7221,5.2.13
7222,protocol_id
7223,GSM
7224,Set according to GSM 03.40 [GSM 03.40]
7225,ANSI-136 (TDMA)
7226,"For mobile terminated messages, this field is not used and is therefore ignored by the SMSC."
7227,"For ANSI-136 mobile originated messages, the SMSC should set this value to NULL."
7228,IS-95 (CDMA)
7229,"For mobile terminated messages, this field is not used and is therefore ignored by the SMSC."
7230,"For IS-95 mobile originated messages, the SMSC should set this value to NULL."
7231,5.2.14
7232,priority_flag
7233,The priority_flag parameter allows the originating SME to assign a priority level to the short
7234,message.
7235,Four Priority Levels are supported:
7236,0 = Level 0 (lowest) priority
7237,1 = Level 1 priority
7238,2 = Level 2 priority
7239,3 = Level 3 (highest) priority
7240,>3=Reserved
7241,These are applied in different networks as follows:-
7242,Priority Level
7243,GSMa
7244,"a. For GSM mobile terminated, messages with priority greater"
7245,than Level 0 are treated as priority when making a delivery
7246,attempt (i.e. a delivery attempt is made even when MWD is
7247,set in the HLR).
7248,ANSI-136
7249,IS-95
7250,0
7251,non-priority
7252,Bulk
7253,Normal
7254,1
7255,priority
7256,Normal
7257,Interactive
7258,2
7259,priority
7260,Urgent
7261,Urgent
7262,3
7263,priority
7264,Very Urgent
7265,Emergency
7266,All other values reserved
7267,Table 5-5: SMPP Message Priority values
7268,©SMPP Developers Forum
7269,Issue 1.2
7270,SMPP Parameter Definition
7271,SMPP Protocol Specification v3.4
7272,5.2.15
7273,schedule_delivery_time
7274,This parameter specifies the scheduled time at which the message delivery should be first
7275,attempted.
7276,It defines either the absolute date and time or relative time from the current SMSC time at which
7277,delivery of this message will be attempted by the SMSC.
7278,It can be specified in either absolute time format or relative time format. The encoding of a time
7279,format is specified in Section 7.1.1.
7280,5.2.16
7281,validity_period
7282,"The validity_period parameter indicates the SMSC expiration time, after which the message"
7283,should be discarded if not delivered to the destination. It can be defined in absolute time format
7284,or relative time format. The encoding of absolute and relative time format is specified in Section
7285,7.1.1.
7286,5.2.17
7287,registered_delivery
7288,The registered_delivery parameter is used to request an SMSC delivery receipt and/or SME
7289,originated acknowledgements. The following values are defined:
7290,Bits
7291,7 6 5 4 3 2 1 0
7292,Meaning
7293,SMSC Delivery Receipt (bits 1 and 0)
7294,x x x x x x 0 0
7295,No SMSC Delivery Receipt requested (default)
7296,x x x x x x 0 1
7297,SMSC Delivery Receipt requested where final delivery
7298,outcome is delivery success or failure
7299,x x x x x x 1 0
7300,SMSC Delivery Receipt requested where the final
7301,delivery outcome is delivery failure
7302,x x x x x x 1 1
7303,reserved
7304,SME originated Acknowledgement (bits 3 and 2)
7305,x x x x 0 0 x x
7306,No recipient SME acknowledgment requested (default)
7307,x x x x 0 1 x x
7308,SME Delivery Acknowledgement requested
7309,x x x x 1 0 x x
7310,SME Manual/User Acknowledgment requested
7311,x x x x 1 1 x x
7312,Both Delivery and Manual/User Acknowledgment requested
7313,Intermediate Notification (bit 5)
7314,x x x 0 x x x x
7315,No Intermediate notification requested (default)
7316,x x x 1 x x x x
7317,Intermediate notification requested **
7318,all other values reserved
7319,The default setting of the registered_delivery parameter is 0x00.
7320,Note:
7321,* A delivery receipt is returned only when the message has reached a non-delivered
7322,"final state such as cancelled or undeliverable, etc."
7323,** Support for Intermediate Notification Functionality is specific to the SMSC
7324,implementation and is beyond the scope of the SMPP Protocol Specification.
7325,SMPP Protocol Specification v3.4
7326,SMPP Parameter Definition
7327,Issue 1.2
7328,©SMPP Developers Forum
7329,5.2.18
7330,replace_if_present_flag
7331,The replace_if_present_flag parameter is used to request the SMSC to replace a previously
7332,"submitted message, that is still pending delivery. The SMSC will replace an existing message"
7333,"provided that the source address, destination address and service_type match the same fields in"
7334,the new message.
7335,0
7336,Don’t replace (default)
7337,1
7338,Replace
7339,2 - 255
7340,reserved
7341,ESME applications that use this SMSC messaging function should use the same service_type
7342,"and set the replace_if_present_flag parameter consistently to “1” for all messages, including the"
7343,first message. This ensures that the SMSC has at most one message pending per destination
7344,SME for a particular application (e.g. voice mail notification).
7345,©SMPP Developers Forum
7346,Issue 1.2
7347,SMPP Parameter Definition
7348,SMPP Protocol Specification v3.4
7349,5.2.19
7350,data_coding
7351,Bits
7352,7 6 5 4 3 2 1 0
7353,Meaning
7354,Notes
7355,0 0 0 0 0 0 0 0
7356,SMSC Default Alphabet
7357,0 0 0 0 0 0 0 1
7358,IA5 (CCITT T.50)/ASCII (ANSI X3.4) b
7359,0 0 0 0 0 0 1 0
7360,Octet unspecified (8-bit binary)
7361,b
7362,0 0 0 0 0 0 1 1
7363,Latin 1 (ISO-8859-1)
7364,b
7365,0 0 0 0 0 1 0 0
7366,Octet unspecified (8-bit binary)
7367,a
7368,0 0 0 0 0 1 0 1
7369,JIS (X 0208-1990)
7370,b
7371,0 0 0 0 0 1 1 0
7372,Cyrllic (ISO-8859-5)
7373,b
7374,0 0 0 0 0 1 1 1
7375,Latin/Hebrew (ISO-8859-8)
7376,b
7377,0 0 0 0 1 0 0 0
7378,UCS2 (ISO/IEC-10646)
7379,a
7380,0 0 0 0 1 0 0 1
7381,Pictogram Encoding
7382,b
7383,0 0 0 0 1 0 1 0
7384,ISO-2022-JP (Music Codes)
7385,b
7386,0 0 0 0 1 0 1 1 reserved
7387,0 0 0 0 1 1 0 0 reserved
7388,0 0 0 0 1 1 0 1
7389,Extended Kanji JIS(X 0212-1990)
7390,b
7391,0 0 0 0 1 1 1 0
7392,KS C 5601
7393,b
7394,0 0 0 0 1 1 1 1 reserved
7395,:
7396,1 0 1 1 1 1 1 1 reserved
7397,1 1 0 0 x x x x GSM MWI control - see [GSM 03.38]
7398,d
7399,1 1 0 1 x x x x GSM MWI control - see [GSM 03.38]
7400,d
7401,1 1 1 0 x x x x reserved
7402,1 1 1 1 x x x x GSM message class control - see [GSM 03.38] e
7403,Notes:
7404,a.
7405,"These coding schemes are common to GSM, TDMA and CDMA. The SMPP protocol"
7406,allows ESME applications to use the same DCS value (i.e. the GSM 03.38 value) for all
7407,three technologies.
7408,b.
7409,In cases where a Data Coding Scheme is defined for TDMA and/ or CDMA but not
7410,"defined for GSM, SMPP uses GSM 03.38 reserved values."
7411,c.
7412,There is no default setting for the data_coding parameter.
7413,d.
7414,The data_coding parameter will evolve to specify Character code settings only. Thus the
7415,recommended way to specify GSM MWI control is by specifying the relevant settings in
7416,the optional parameters _ms_msg_wait_facilities and ms_validity.
7417,e.
7418,The data_coding parameter will evolve to specify Character code settings only. Thus the
7419,recommended way to specify GSM message class control is by specifying the relevant
7420,setting in the optional parameter dest_addr_subunit.
7421,SMPP Protocol Specification v3.4
7422,SMPP Parameter Definition
7423,Issue 1.2
7424,©SMPP Developers Forum
7425,5.2.20
7426,sm_default_msg_id
7427,The sm_default_msg_id parameter specifies the SMSC index of a pre-defined (‘canned’)
7428,message.
7429,0
7430,reserved
7431,1 - 254
7432,Allowed values
7433,255
7434,Reserved
7435,©SMPP Developers Forum
7436,Issue 1.2
7437,SMPP Parameter Definition
7438,SMPP Protocol Specification v3.4
7439,5.2.21
7440,sm_length
7441,The sm_length parameter specifies the length of the short_message parameter in octets. The
7442,"sm_length should be set to 0 in the submit_sm, submit_multi, and deliver_sm PDUs if the"
7443,message_payload parameter is being used to send user data larger than 254 octets.
7444,0
7445,no user data in short message field
7446,1-254
7447,allowed
7448,255
7449,not allowed
7450,5.2.22
7451,short_message
7452,The short_message parameter contains the user data. A maximum of 254 octets can be sent.
7453,"ESME’s should use the optional message_payload parameter in submit_sm, submit_multi, and"
7454,deliver_sm to send larger user data sizes.
7455,5.2.23
7456,message_id
7457,The unique message identifier reference assigned by the SMSC to each submitted short
7458,message. It is an opaque value and is set according to SMSC implementation. It is returned by
7459,"the SMSC in the submit_sm_resp, submit_multi_resp, deliver_sm_resp and data_sm_resp"
7460,PDUs and may be used by the ESME in subsequent SMPP operations relating to the short
7461,"message, e.g. the ESME can use the query_sm operation to query a previously submitted"
7462,message using the SMSC message_id as the message handle.
7463,5.2.24
7464,number_of_dests
7465,The number_of_dests parameter indicates the number of dest_address structures that are to
7466,follow in the submit_multi operation.
7467,A maximum of 254 destination address structures are allowed.
7468,SMPP Protocol Specification v3.4
7469,SMPP Parameter Definition
7470,Issue 1.2
7471,©SMPP Developers Forum
7472,5.2.25
7473,dest_flag
7474,Flag which will identify whether destination address is a Distribution List (DL) name or SME
7475,address.
7476,1 - SME Address
7477,2 - Distribution List Name
7478,5.2.26
7479,no_unsuccess
7480,The number of unsuccessful SME destinations to which delivery was attempted for a
7481,submit_multi operation.
7482,5.2.27
7483,dl_name
7484,The reference name for a distribution list provisioned on the SMSC. Distribution list names are
7485,defined by mutual agreement between the SMSC and the ESME.
7486,©SMPP Developers Forum
7487,Issue 1.2
7488,SMPP Parameter Definition
7489,SMPP Protocol Specification v3.4
7490,5.2.28
7491,message_state
7492,The following is a list of allowable states for a short message. The message_state value is
7493,returned by the SMSC to the ESME as part of the query_sm_resp PDU.
7494,Message State
7495,Value
7496,Description
7497,ENROUTE
7498,1
7499,The message is in enroute
7500,state.
7501,DELIVERED
7502,2
7503,Message is delivered to
7504,destination
7505,EXPIRED
7506,3
7507,Message validity period has
7508,expired.
7509,DELETED
7510,4
7511,Message has been deleted.
7512,UNDELIVERABLE
7513,5
7514,Message is undeliverable
7515,ACCEPTED
7516,6
7517,Message is in accepted state
7518,(i.e. has been manually read
7519,on behalf of the subscriber by
7520,customer service)
7521,UNKNOWN
7522,7
7523,Message is in invalid state
7524,REJECTED
7525,8
7526,Message is in a rejected state
7527,Table 5-6: Message States
7528,SMPP Protocol Specification v3.4
7529,SMPP Parameter Definition
7530,Issue 1.2
7531,©SMPP Developers Forum
7532,5.3
7533,SMPP Optional Parameter Description
7534,5.3.1
7535,Optional Parameter Tag Identifiers
7536,"Optional Parameters are fields, which may be optionally included in an SMPP message."
7537,"Optional Parameters must always appear at the end of a message, in the ""Optional Parameters"""
7538,"section of the SMPP PDU. However, they may be included in any convenient order within the"
7539,"""Optional Parameters"" section of the SMPP PDU and need not be encoded in the order"
7540,presented in this document.
7541,"For a particular SMPP PDU, the ESME or SMSC may include some, all or none of the defined"
7542,optional parameters as required for the particular application context. For example a paging
7543,"system may in an SMPP submit_sm operation, include only the “callback number” related"
7544,optional parameters.
7545,All SMPP optional parameters have a 16 bit Parameter Tag Identifier. The SMPP protocol
7546,defines the following Parameter Tag blocks:
7547,0x0000
7548,Reserved
7549,0x0001 - 0x00FF
7550,SMPP defined optional parameters
7551,0x0100 - 0x01FF
7552,Reserved
7553,0x0200 - 0x05FF
7554,SMPP defined optional parameters
7555,0x0600 - 0x10FF
7556,Reserved for SMPP Protocol Extension
7557,0x1100 - 0x11FF
7558,Reserved
7559,0x1200 - 0x13FF
7560,SMPP defined optional parameters
7561,0x1400 - 0x3FFF
7562,Reserved for SMSC Vendor specific optional
7563,parameters
7564,0x4000 - 0xFFFF
7565,Reserved
7566,©SMPP Developers Forum
7567,Issue 1.2
7568,SMPP Parameter Definition
7569,SMPP Protocol Specification v3.4
7570,5.3.2
7571,SMPP Optional Parameter Tag definitions
7572,The SMPP supported Optional Parameters and their associated Tag Values are listed in Table
7573,5-7 below. The optional parameters are described individually in the following sections.
7574,"Generic optional parameters may be applicable to all wireless network technologies i.e., GSM/"
7575,"iDEN, TDMA and CDMA."
7576,Tag
7577,Value
7578,Wireless Network Technology
7579,dest_addr_subunit
7580,0x0005
7581,GSM
7582,dest_network_type
7583,0x0006
7584,Generic
7585,dest_bearer_type
7586,0x0007
7587,Generic
7588,dest_telematics_id
7589,0x0008
7590,GSM
7591,source_addr_subunit
7592,0x000D
7593,GSM
7594,source_network_type
7595,0x000E
7596,Generic
7597,source_bearer_type
7598,0x000F
7599,Generic
7600,source_telematics_id
7601,0x0010
7602,GSM
7603,qos_time_to_live
7604,0x0017
7605,Generic
7606,payload_type
7607,0x0019
7608,Generic
7609,additional_status_info_text
7610,0x001D
7611,Generic
7612,receipted_message_id
7613,0x001E
7614,Generic
7615,ms_msg_wait_facilities
7616,0x0030
7617,GSM
7618,privacy_indicator
7619,0x0201
7620,"CDMA, TDMA"
7621,source_subaddress
7622,0x0202
7623,"CDMA, TDMA"
7624,dest_subaddress
7625,0x0203
7626,"CDMA, TDMA"
7627,user_message_reference
7628,0x0204
7629,Generic
7630,user_response_code
7631,0x0205
7632,"CDMA, TDMA"
7633,source_port
7634,0x020A
7635,Generic
7636,destination_port
7637,0x020B
7638,Generic
7639,sar_msg_ref_num
7640,0x020C
7641,Generic
7642,language_indicator
7643,0x020D
7644,"CDMA, TDMA"
7645,sar_total_segments
7646,0x020E
7647,Generic
7648,sar_segment_seqnum
7649,0x020F
7650,Generic
7651,SC_interface_version
7652,0x0210
7653,Generic
7654,Table 5-7: Optional Parameter Tag values
7655,SMPP Protocol Specification v3.4
7656,SMPP Parameter Definition
7657,Issue 1.2
7658,©SMPP Developers Forum
7659,callback_num_pres_ind
7660,0x0302
7661,TDMA
7662,callback_num_atag
7663,0x0303
7664,TDMA
7665,number_of_messages
7666,0x0304
7667,CDMA
7668,callback_num
7669,0x0381
7670,"CDMA, TDMA, GSM, iDEN"
7671,dpf_result
7672,0x0420
7673,Generic
7674,set_dpf
7675,0x0421
7676,Generic
7677,ms_availability_status
7678,0x0422
7679,Generic
7680,network_error_code
7681,0x0423
7682,Generic
7683,message_payload
7684,0x0424
7685,Generic
7686,delivery_failure_reason
7687,0x0425
7688,Generic
7689,more_messages_to_send
7690,0x0426
7691,GSM
7692,message_state
7693,0x0427
7694,Generic
7695,ussd_service_op
7696,0x0501
7697,GSM (USSD)
7698,display_time
7699,0x1201
7700,"CDMA, TDMA"
7701,sms_signal
7702,0x1203
7703,TDMA
7704,ms_validity
7705,0x1204
7706,"CDMA, TDMA"
7707,alert_on_message_delivery
7708,0x130C
7709,CDMA
7710,its_reply_type
7711,0x1380
7712,CDMA
7713,its_session_info
7714,0x1383
7715,CDMA
7716,Tag
7717,Value
7718,Wireless Network Technology
7719,Table 5-7: Optional Parameter Tag values (Continued)
7720,©SMPP Developers Forum
7721,Issue 1.2
7722,SMPP Parameter Definition
7723,SMPP Protocol Specification v3.4
7724,5.3.2.1
7725,dest_addr_subunit
7726,"The dest_addr_subunit parameter is used to route messages when received by a mobile station,"
7727,for example to a smart card in the mobile station or to an external device connected to the
7728,mobile station.
7729,5.3.2.2
7730,source_addr_subunit
7731,The source_addr_subunit parameter is used to indicate where a message originated in the
7732,"mobile station, for example a smart card in the mobile station or an external device connected"
7733,to the mobile station.
7734,Field
7735,Size
7736,octets
7737,Type
7738,Description
7739,Parameter Tag
7740,2
7741,Integer
7742,dest_addr_subunit
7743,Length
7744,2
7745,Integer
7746,Length of Value part in octets
7747,Value
7748,1
7749,Integer
7750,0x00 = Unknown (default)
7751,0x01 = MS Display
7752,0x02 = Mobile Equipment
7753,0x03 = Smart Card 1 (expected to be SIM if
7754,a SIM exists in the MS)
7755,0x04 = External Unit 1
7756,5 to 255 = reserved
7757,Field
7758,Size
7759,octets
7760,Type
7761,Description
7762,Parameter Tag
7763,2
7764,Integer
7765,source_addr_subunit
7766,Length
7767,2
7768,Integer
7769,Length of Value part in octets
7770,Value
7771,1
7772,Integer
7773,see 5.3.2.1
7774,SMPP Protocol Specification v3.4
7775,SMPP Parameter Definition
7776,Issue 1.2
7777,©SMPP Developers Forum
7778,5.3.2.3
7779,dest_network_type
7780,The dest_network_type parameter is used to indicate a network type associated with the
7781,destination address of a message. In the case that the receiving system (e.g. SMSC) does not
7782,"support the indicated network type, it may treat this a failure and return a response PDU"
7783,reporting a failure.
7784,5.3.2.4
7785,source_network_type
7786,The source_network_type parameter is used to indicate the network type associated with the
7787,device that originated the message.
7788,Field
7789,Size
7790,octets
7791,Type
7792,Description
7793,Parameter Tag
7794,2
7795,Integer
7796,dest_network_type
7797,Length
7798,2
7799,Integer
7800,Length of Value part in octets
7801,Value
7802,1
7803,Integer
7804,0x00 = Unknown
7805,0x01 = GSM
7806,0x02 = ANSI-136/TDMA
7807,0x03 = IS-95/CDMA
7808,0x04 = PDC
7809,0x05 = PHS
7810,0x06 = iDEN
7811,0x07 = AMPS
7812,0x08 = Paging Network
7813,9 to 255 = reserved
7814,Field
7815,Size
7816,octets
7817,Type
7818,Description
7819,Parameter Tag
7820,2
7821,Integer
7822,source_network_type
7823,Length
7824,2
7825,Integer
7826,Length of Value part in octets
7827,Value
7828,1
7829,Integer
7830,see 5.3.2.3
7831,©SMPP Developers Forum
7832,Issue 1.2
7833,SMPP Parameter Definition
7834,SMPP Protocol Specification v3.4
7835,5.3.2.5
7836,dest_bearer_type
7837,The dest_bearer_type parameter is used to request the desired bearer for delivery of the
7838,message to the destination address. In the case that the receiving system (e.g. SMSC) does not
7839,"support the indicated bearer type, it may treat this a failure and return a response PDU reporting"
7840,a failure.
7841,5.3.2.6
7842,source_bearer_type
7843,The source_bearer_type parameter indicates the wireless bearer over which the message
7844,originated.
7845,Field
7846,Size
7847,octets
7848,Type
7849,Description
7850,Parameter Tag
7851,2
7852,Integer
7853,dest_bearer_type
7854,Length
7855,2
7856,Integer
7857,Length of Value part in octets
7858,Value
7859,1
7860,Integer
7861,0x00 = Unknown
7862,0x01 = SMS
7863,0x02 = Circuit Switched Data (CSD)
7864,0x03 = Packet Data
7865,0x04 = USSD
7866,0x05 = CDPD
7867,0x06 = DataTAC
7868,0x07 = FLEX/ReFLEX
7869,0x08 = Cell Broadcast (cellcast)
7870,9 to 255 = reserved
7871,Field
7872,Size
7873,octets
7874,Type
7875,Description
7876,Parameter Tag
7877,2
7878,Integer
7879,source_bearer_type
7880,Length
7881,2
7882,Integer
7883,Length of Value part in octets
7884,Value
7885,1
7886,Integer
7887,see 5.3.2.5
7888,SMPP Protocol Specification v3.4
7889,SMPP Parameter Definition
7890,Issue 1.2
7891,©SMPP Developers Forum
7892,5.3.2.7
7893,dest_telematics_id
7894,This parameter defines the telematic interworking to be used by the delivering system for the
7895,destination address. This is only useful when a specific dest_bearer_type parameter has also
7896,been specified as the value is bearer dependent. In the case that the receiving system (e.g.
7897,"SMSC) does not support the indicated telematic interworking, it may treat this a failure and"
7898,return a response PDU reporting a failure.
7899,5.3.2.8
7900,source_telematics_id
7901,The source_telematics_id parameter indicates the type of telematics interface over which the
7902,message originated.
7903,Field
7904,Size
7905,octets
7906,Type
7907,Description
7908,Parameter Tag
7909,2
7910,Integer
7911,dest_telematics_id
7912,Length
7913,2
7914,Integer
7915,Length of Value part in octets
7916,Value
7917,2
7918,Integer
7919,to be defined
7920,Field
7921,Size
7922,octets
7923,Type
7924,Description
7925,Parameter Tag
7926,2
7927,Integer
7928,source_telematics_id
7929,Length
7930,2
7931,Integer
7932,Length of Value part in octets
7933,Value
7934,1
7935,Integer
7936,see 5.3.2.7
7937,©SMPP Developers Forum
7938,Issue 1.2
7939,SMPP Parameter Definition
7940,SMPP Protocol Specification v3.4
7941,5.3.2.9
7942,qos_time_to_live
7943,This parameter defines the number of seconds which the sender requests the SMSC to keep the
7944,message if undelivered before it is deemed expired and not worth delivering. If the parameter
7945,"is not present, the SMSC may apply a default value."
7946,5.3.2.10
7947,payload_type
7948,The payload_type parameter defines the higher layer PDU type contained in the message
7949,payload.
7950,Field
7951,Size
7952,octets
7953,Type
7954,Description
7955,Parameter Tag
7956,2
7957,Integer
7958,qos_time_to_live
7959,Length
7960,2
7961,Integer
7962,Length of Value part in octets
7963,Value
7964,4
7965,Integer
7966,number of seconds for message to be
7967,retained by the receiving system.
7968,Field
7969,Size
7970,octets
7971,Type
7972,Description
7973,Parameter Tag
7974,2
7975,Integer
7976,payload_type
7977,Length
7978,2
7979,Integer
7980,Length of Value part in octets
7981,Value
7982,1
7983,Integer
7984,0
7985,Default. In the case of a WAP
7986,"application, the default higher layer"
7987,message type is a WDP message.
7988,See [WDP] for details.
7989,1
7990,WCMP message. Wireless Control
7991,Message Protocol formatted data.
7992,See [WCMP] for details.
7993,values 2 to 255 are reserved
7994,SMPP Protocol Specification v3.4
7995,SMPP Parameter Definition
7996,Issue 1.2
7997,©SMPP Developers Forum
7998,5.3.2.11
7999,additional_status_info_text
8000,The additional_status_info_text parameter gives an ASCII textual description of the meaning
8001,of a response PDU. It is to be used by an implementation to allow easy diagnosis of problems.
8002,5.3.2.12
8003,receipted_message_id
8004,The receipted_message_id parameter indicates the ID of the message being receipted in an
8005,SMSC Delivery Receipt. This is the opaque SMSC message identifier that was returned in the
8006,message_id parameter of the SMPP response PDU that acknowledged the submission of the
8007,original message.
8008,Field
8009,Size
8010,octets
8011,Type
8012,Description
8013,Parameter Tag
8014,2
8015,Integer
8016,additional_status_info_text
8017,Length
8018,2
8019,Integer
8020,Length of Value part in octets
8021,Value
8022,1 - 256
8023,C Octet
8024,String
8025,Free format text to allow implementations
8026,to supply the most useful information for
8027,problem diagnosis. Maximum length is 256
8028,octets.
8029,Field
8030,Size
8031,octets
8032,Type
8033,Description
8034,Parameter Tag
8035,2
8036,Integer
8037,receipted_message_id
8038,Length
8039,2
8040,Integer
8041,Length of Value part in octets
8042,Value
8043,1 - 65
8044,C Octet
8045,String
8046,SMSC handle of the message being
8047,receipted.
8048,©SMPP Developers Forum
8049,Issue 1.2
8050,SMPP Parameter Definition
8051,SMPP Protocol Specification v3.4
8052,5.3.2.13
8053,ms_msg_wait_facilities
8054,The ms_msg_wait_facilities parameter allows an indication to be provided to an MS that there
8055,are messages waiting for the subscriber on systems on the PLMN. The indication can be an icon
8056,on the MS screen or other MMI indication.
8057,The ms_msg_wait_facilities can also specify the type of message associated with the message
8058,waiting indication.
8059,Field
8060,Size
8061,octets
8062,Type
8063,Description
8064,Parameter Tag
8065,2
8066,Integer
8067,ms_msg_wait_facilities
8068,Length
8069,2
8070,Integer
8071,Length of Value part in octets
8072,Value
8073,1
8074,Bit mask
8075,Bits 7............0
8076,I00000TT
8077,This parameter controls the indication and
8078,specifies the message type (of the message
8079,associated with the MWI) at the mobile
8080,station.
8081,The Indicator is encoded in bit 7 as
8082,follows:
8083,0 = Set Indication Inactive
8084,1 = Set Indication Active
8085,The Type of Message associated with the
8086,MWI is encoded in bits 0 and 1 as follows:
8087,00 = Voicemail Message Waiting
8088,01 = Fax Message Waiting
8089,10 = Electronic Mail Message Waiting
8090,11 = Other Message Waiting
8091,SMPP Protocol Specification v3.4
8092,SMPP Parameter Definition
8093,Issue 1.2
8094,©SMPP Developers Forum
8095,5.3.2.14
8096,privacy_indicator
8097,The privacy_indicator indicates the privacy level of the message.
8098,Field
8099,Size
8100,octets
8101,Type
8102,Description
8103,Parameter Tag
8104,2
8105,Integer
8106,privacy_indicator
8107,Length
8108,2
8109,Integer
8110,Length of value part in octets
8111,Value
8112,1
8113,Integer
8114,0 = Privacy Level 0 (Not Restricted)
8115,(default)
8116,1 = Privacy Level 1 (Restricted)
8117,2 = Privacy Level 2 (Confidential)
8118,3 = Privacy Level 3 (Secret)
8119,values 4 to 255 are reserved
8120,Table 5-8: Privacy Indicator values
8121,©SMPP Developers Forum
8122,Issue 1.2
8123,SMPP Parameter Definition
8124,SMPP Protocol Specification v3.4
8125,5.3.2.15
8126,source_subaddress
8127,The source_subaddress parameter specifies a subaddress associated with the originator of the
8128,message.
8129,Field
8130,Size
8131,octets
8132,Type
8133,Description
8134,Parameter Tag
8135,2
8136,Integer
8137,Length
8138,2
8139,Integer
8140,Length of Value part in octets
8141,Value
8142,Var
8143,2 - 23
8144,Octet
8145,String
8146,The first octet of the data field is a Type of
8147,Subaddress tag and indicates the type of
8148,"subaddressing information included, and"
8149,implies the type and length of
8150,subaddressing information which can
8151,accompany this tag value in the data field.
8152,Valid Tag values are:
8153,00000001 - Reserved
8154,00000010 - Reserved
8155,10000000 - NSAP (Even) [ITUT X.213]
8156,10001000 - NSAP (Odd) [ITUT X.213]
8157,10100000 - User Specified
8158,All other values Reserved
8159,The remaining octets contain the
8160,subaddress.
8161,A NSAP address shall be encoded using
8162,the preferred binary encoding specified in
8163,[ITUT X.213]. In this case the subaddress
8164,field contains the Authority and Format
8165,Identifier.
8166,A User Specified subaddress is encoded
8167,"according to user specification, subject to a"
8168,maximum of 22 octets.
8169,SMPP Protocol Specification v3.4
8170,SMPP Parameter Definition
8171,Issue 1.2
8172,©SMPP Developers Forum
8173,5.3.2.16
8174,dest_subaddress
8175,The dest_subaddress parameter specifies a subaddress associated with the destination of the
8176,message.
8177,Note:
8178,The dest_subaddress parameter is not supported in the SMPP submit_multi PDU.
8179,5.3.2.17
8180,user_message_reference
8181,A reference assigned by the originating SME to the short message.
8182,Field
8183,Size
8184,octets
8185,Type
8186,Description
8187,Parameter Tag
8188,2
8189,Integer
8190,dest_subaddress
8191,Length
8192,2
8193,Integer
8194,Length of Value part in octets
8195,Value
8196,Var
8197,2 - 23
8198,Octet
8199,String
8200,See 5.3.2.15 for parameter encoding.
8201,Field
8202,Size
8203,octets
8204,Type
8205,Description
8206,Parameter Tag
8207,2
8208,Integer
8209,user_message_reference
8210,Length
8211,2
8212,Integer
8213,Length of value part in octets
8214,Value
8215,2
8216,Integer
8217,All values allowed.
8218,©SMPP Developers Forum
8219,Issue 1.2
8220,SMPP Parameter Definition
8221,SMPP Protocol Specification v3.4
8222,5.3.2.18
8223,user_response_code
8224,A response code set by the user in a User Acknowledgement/Reply message. The response
8225,codes are application specific.
8226,5.3.2.19
8227,language_indicator
8228,The language_indicator parameter is used to indicate the language of the short message.
8229,Field
8230,Size
8231,octets
8232,Type
8233,Description
8234,Parameter Tag
8235,2
8236,Integer
8237,user_response_code
8238,Length
8239,2
8240,Integer
8241,Length of value part in octets
8242,Value
8243,1
8244,Integer
8245,0 to 255 (IS-95 CDMA)
8246,0 to 15 (CMT-136 TDMA)
8247,Field
8248,Size
8249,octets
8250,Type
8251,Description
8252,Parameter Tag
8253,2
8254,Integer
8255,language_indicator
8256,Length
8257,2
8258,Integer
8259,Length of value part in octets
8260,Value
8261,1
8262,Integer
8263,0 = unspecified (default)
8264,1 = english
8265,2 = french
8266,3 = spanish
8267,4 = german
8268,5 = Portuguese
8269,refer to [CMT-136] for other values
8270,SMPP Protocol Specification v3.4
8271,SMPP Parameter Definition
8272,Issue 1.2
8273,©SMPP Developers Forum
8274,5.3.2.20
8275,source_port
8276,The source_port parameter is used to indicate the application port number associated with the
8277,source address of the message.
8278,5.3.2.21
8279,destination_port
8280,The destination_port parameter is used to indicate the application port number associated with
8281,the destination address of the message.
8282,Field
8283,Size
8284,octets
8285,Type
8286,Description
8287,Parameter Tag
8288,2
8289,Integer
8290,source_port
8291,Length
8292,2
8293,Integer
8294,Length of value part in octets
8295,Value
8296,2
8297,Integer
8298,All values allowed.
8299,Field
8300,Size
8301,octets
8302,Type
8303,Description
8304,Parameter Tag
8305,2
8306,Integer
8307,destination_port
8308,Length
8309,2
8310,Integer
8311,Length of value part in octets
8312,Value
8313,2
8314,Integer
8315,All values allowed.
8316,©SMPP Developers Forum
8317,Issue 1.2
8318,SMPP Parameter Definition
8319,SMPP Protocol Specification v3.4
8320,5.3.2.22
8321,sar_msg_ref_num
8322,The sar_msg_ref_num parameter is used to indicate the reference number for a particular
8323,concatenated short message.
8324,Field
8325,Size
8326,octets
8327,Type
8328,Description
8329,Parameter Tag
8330,2
8331,Integer
8332,sar_msg_ref_num
8333,Length
8334,2
8335,Integer
8336,Length of value part in octets
8337,Value
8338,2
8339,Integer
8340,This parameter shall contain a originator
8341,generated reference number so that a
8342,segmented short message may be
8343,reassembled into a single original message.
8344,This allows the parallel transmission of
8345,several segmented messages. This
8346,reference number shall remain constant for
8347,every segment which makes up a particular
8348,concatenated short message.
8349,"When present, the PDU must also contain"
8350,the sar_total_segments and
8351,sar_segment_seqnum parameters.
8352,Otherwise this parameter shall be ignored.
8353,SMPP Protocol Specification v3.4
8354,SMPP Parameter Definition
8355,Issue 1.2
8356,©SMPP Developers Forum
8357,5.3.2.23
8358,sar_total_segments
8359,The sar_total_segments parameter is used to indicate the total number of short messages
8360,within the concatenated short message.
8361,5.3.2.24
8362,sar_segment_seqnum
8363,The sar_segment_seqnum parameter is used to indicate the sequence number of a particular
8364,short message within the concatenated short message.
8365,Field
8366,Size
8367,octets
8368,Type
8369,Description
8370,Parameter Tag
8371,2
8372,Integer
8373,sar_total_segments
8374,Length
8375,2
8376,Integer
8377,Length of value part in octets
8378,Value
8379,1
8380,Integer
8381,This parameter shall contain a value in the
8382,range 1 to 255 indicating the total number
8383,of fragments within the concatenated short
8384,message. The value shall start at 1 and
8385,remain constant for every short message
8386,which makes up the concatenated short
8387,message.
8388,"When present, the PDU must also contain"
8389,the sar_msg_ref_num and
8390,sar_segment_seqnum parameters.
8391,Otherwise this parameter shall be ignored.
8392,Field
8393,Size
8394,octets
8395,Type
8396,Description
8397,Parameter Tag
8398,2
8399,Integer
8400,sar_segment_seqnum
8401,Length
8402,2
8403,Integer
8404,Length of value part in octets
8405,Value
8406,1
8407,Integer
8408,This octet shall contain a value in the range
8409,1 to 255 indicating the sequence number of
8410,a particular message within the
8411,concatenated short message. The value
8412,shall start at 1 and increment by one for
8413,every message sent within the concatenated
8414,short message.
8415,"When present, the PDU must also contain"
8416,the sar_total_segments and
8417,sar_msg_ref_num parameters. Otherwise
8418,this parameter shall be ignored.
8419,©SMPP Developers Forum
8420,Issue 1.2
8421,SMPP Parameter Definition
8422,SMPP Protocol Specification v3.4
8423,5.3.2.25
8424,sc_interface_version
8425,The sc_interface_version parameter is used to indicate the SMPP version supported by the
8426,SMSC. It is returned in the bind response PDUs.
8427,5.3.2.26
8428,display_time
8429,The display_time parameter is used to associate a display time of the short message on the MS.
8430,Field
8431,Size
8432,octets
8433,Type
8434,Description
8435,Parameter Tag
8436,2
8437,Integer
8438,sc_interface_version
8439,Length
8440,2
8441,Integer
8442,Length of value part in octets
8443,Value
8444,1
8445,Integer
8446,values as per 5.2.4. (interface_version)
8447,Field
8448,Size
8449,octets
8450,Type
8451,Description
8452,Parameter Tag
8453,2
8454,Integer
8455,display_time
8456,Length
8457,2
8458,Integer
8459,Length of value part in octets
8460,Value
8461,1
8462,Integer
8463,0 = Temporary
8464,1 = Default (default)
8465,2 = Invoke
8466,values 3 to 255 are reserved
8467,SMPP Protocol Specification v3.4
8468,SMPP Parameter Definition
8469,Issue 1.2
8470,©SMPP Developers Forum
8471,5.3.2.27
8472,ms_validity
8473,The ms_validity parameter is used to provide an MS with validity information associated with
8474,the received short message.
8475,5.3.2.28
8476,dpf_result
8477,The dpf_result parameter is used in the data_sm_resp PDU to indicate if delivery pending flag
8478,(DPF) was set for a delivery failure of the short message..
8479,"If the dpf_result parameter is not included in the data_sm_resp PDU, the ESME should assume"
8480,that DPF is not set.
8481,Currently this parameter is only applicable for the Transaction message mode.
8482,Field
8483,Size
8484,octets
8485,Type
8486,Description
8487,Parameter Tag
8488,2
8489,Integer
8490,ms_validity
8491,Length
8492,2
8493,Integer
8494,Length of value part in octets
8495,Value
8496,1
8497,Integer
8498,0 = Store Indefinitely (default)
8499,1 = Power Down
8500,2 = SID based registration area
8501,3 = Display Only
8502,values 4 to 255 are reserved
8503,Field
8504,Size
8505,octets
8506,Type
8507,Description
8508,Parameter Tag
8509,2
8510,Integer
8511,dpf_result
8512,Length
8513,2
8514,Integer
8515,Length of value part in octets
8516,Value
8517,1
8518,Integer
8519,0 = DPF not set
8520,1 = DPF set
8521,values 2 to 255 are reserved
8522,©SMPP Developers Forum
8523,Issue 1.2
8524,SMPP Parameter Definition
8525,SMPP Protocol Specification v3.4
8526,5.3.2.29
8527,set_dpf
8528,An ESME may use the set_dpf parameter to request the setting of a delivery pending flag (DPF)
8529,"for certain delivery failure scenarios, such as"
8530,- MS is unavailable for message delivery (as indicated by the HLR)
8531,The SMSC should respond to such a request with an alert_notification PDU when it detects
8532,that the destination MS has become available.
8533,The delivery failure scenarios under which DPF is set is SMSC implementation and network
8534,"implementation specific. If a delivery pending flag is set by the SMSC or network (e.g. HLR),"
8535,then the SMSC should indicate this to the ESME in the data_sm_resp message via the
8536,dpf_result parameter.
8537,Field
8538,Size
8539,octets
8540,Type
8541,Description
8542,Parameter Tag
8543,2
8544,Integer
8545,set_dpf
8546,Length
8547,2
8548,Integer
8549,length of value part in octets
8550,Value
8551,1
8552,Integer
8553,0 = Setting of DPF for delivery failure to MS not
8554,requested
8555,1 = Setting of DPF for delivery failure requested
8556,(default)
8557,values 2 to 255 are reserved
8558,SMPP Protocol Specification v3.4
8559,SMPP Parameter Definition
8560,Issue 1.2
8561,©SMPP Developers Forum
8562,5.3.2.30
8563,ms_availability_status
8564,The ms_availability_status parameter is used in the alert_notification operation to indicate the
8565,availability state of the MS to the ESME.
8566,"If the SMSC does not include the parameter in the alert_notification operation, the ESME"
8567,should assume that the MS is in an “available” state.
8568,Field
8569,Size
8570,octets
8571,Type
8572,Description
8573,Parameter Tag
8574,2
8575,Integer
8576,ms_availability_status
8577,Length
8578,2
8579,Integer
8580,Length of value part in octets
8581,Value
8582,1
8583,Integer
8584,0 = Available (Default)
8585,"1 = Denied (e.g. suspended, no SMS"
8586,"capability, etc.)"
8587,2 = Unavailable
8588,values 3 to 255 are reserved
8589,©SMPP Developers Forum
8590,Issue 1.2
8591,SMPP Parameter Definition
8592,SMPP Protocol Specification v3.4
8593,5.3.2.31
8594,network_error_code
8595,The network_error_code parameter is used to indicate the actual network error code for a
8596,delivery failure. The network error code is technology specific.
8597,Field
8598,Size
8599,octets
8600,Type
8601,Description
8602,Parameter Tag
8603,2
8604,Integer
8605,network_error_code
8606,Length
8607,2
8608,Integer
8609,Length of value part in octets
8610,Value
8611,3
8612,Octet
8613,String
8614,Sub-field Size Type
8615,Network Type 1 Integer
8616,Error Code 2 Integer
8617,.
8618,The first octet indicates the network type.
8619,The following values are defined:
8620,1 = ANSI-136
8621,2 = IS-95
8622,3 = GSM
8623,4 = Reserved
8624,All other values reserved.
8625,The remaining two octets specify the actual
8626,network error code appropriate to the
8627,network type.
8628,SMPP Protocol Specification v3.4
8629,SMPP Parameter Definition
8630,Issue 1.2
8631,©SMPP Developers Forum
8632,5.3.2.32
8633,message_payload
8634,The message_payload parameter contains the user data.
8635,5.3.2.33
8636,delivery_failure_reason
8637,The delivery_failure_reason parameter is used in the data_sm_resp operation to indicate the
8638,outcome of the message delivery attempt (only applicable for transaction message mode). If a
8639,"delivery failure due to a network error is indicated, the ESME may check the"
8640,network_error_code parameter (if present) for the actual network error code.
8641,The delivery_failure_reason parameter is not included if the delivery attempt was successful.
8642,Field
8643,Size
8644,octets
8645,Type
8646,Description
8647,Parameter Tag
8648,2
8649,Integer
8650,message_payload
8651,Length
8652,2
8653,Integer
8654,Set to length of user data
8655,Value
8656,Variable
8657,Octet
8658,String
8659,Short message user data. The maximum
8660,size is SMSC and network implementation
8661,specific.
8662,Field
8663,Size
8664,octets
8665,Type
8666,Description
8667,Parameter Tag
8668,2
8669,Integer
8670,delivery_failure_reason
8671,Length
8672,2
8673,Integer
8674,Length of value part in octets
8675,Value
8676,1
8677,Integer
8678,0 = Destination unavailable
8679,1 = Destination Address Invalid (e.g.
8680,"suspended, no SMS capability, etc.)"
8681,2 = Permanent network error
8682,3 = Temporary network error
8683,values 4 to are 255 reserved
8684,©SMPP Developers Forum
8685,Issue 1.2
8686,SMPP Parameter Definition
8687,SMPP Protocol Specification v3.4
8688,5.3.2.34
8689,more_messages_to_send
8690,The more_messages_to_send parameter is used by the ESME in the submit_sm and data_sm
8691,operations to indicate to the SMSC that there are further messages for the same destination
8692,SME. The SMSC may use this setting for network resource optimization.
8693,5.3.2.35
8694,message_state
8695,The message_state optional parameter is used by the SMSC in the deliver_sm and data_sm
8696,PDUs to indicate to the ESME the final message state for an SMSC Delivery Receipt.
8697,Field
8698,Size
8699,octets
8700,Type
8701,Description
8702,Parameter Tag
8703,2
8704,Integer
8705,more_messages_to_send
8706,Length
8707,2
8708,Integer
8709,Length of value part in octets
8710,Value
8711,1
8712,0 = No more messages to follow
8713,1 = More messages to follow (default)
8714,values 2 to 255 are reserved
8715,Field
8716,Size
8717,octets
8718,Type
8719,Description
8720,Parameter Tag
8721,2
8722,Integer
8723,message_state
8724,Length
8725,2
8726,Integer
8727,Length of value part in octets
8728,Value
8729,1
8730,Values as per section 5.2.28
8731,SMPP Protocol Specification v3.4
8732,SMPP Parameter Definition
8733,Issue 1.2
8734,©SMPP Developers Forum
8735,5.3.2.36
8736,callback_num
8737,The callback_num parameter associates a call back number with the message. In TDMA
8738,"networks, it is possible to send and receive multiple callback numbers to/from TDMA mobile"
8739,stations.
8740,Field
8741,Size
8742,octets
8743,Type
8744,Description
8745,Parameter Tag
8746,2
8747,Integer
8748,Length
8749,2
8750,Integer
8751,Length of Value part in octets
8752,Value
8753,Var
8754,4 - 19
8755,Octet
8756,String
8757,Bits 7.............0
8758,0000000D (octet 1)
8759,00000TTT (octet 2)
8760,0000NNNN (octet 3)
8761,XXXXXXXX (octet 4)
8762,:
8763,:
8764,XXXXXXXX (octet N)
8765,The originating SME can set a Call Back
8766,Number for the receiving Mobile Station.
8767,The first octet contains the Digit Mode
8768,Indicator.
8769,Bit D=0 indicates that the Call Back
8770,Number is sent to the mobile as DTMF
8771,digits encoded in TBCD. Bit D=1 indicates
8772,that the Call Back Number is sent to the
8773,mobile encoded as ASCII digits.
8774,The 2nd octet contains the Type of Number
8775,(TON). Encoded as in section 5.2.5.
8776,The third octet contains the Numbering
8777,Plan Indicator (NPI). Encoded as specified
8778,in section 5.2.6
8779,The remaining octets contain the Call Back
8780,Number digits encoded as ASCII
8781,characters
8782,©SMPP Developers Forum
8783,Issue 1.2
8784,SMPP Parameter Definition
8785,SMPP Protocol Specification v3.4
8786,5.3.2.37
8787,callback_num_pres_ind
8788,Field
8789,Size
8790,octets
8791,Type
8792,Description
8793,Parameter Tag
8794,2
8795,Integer
8796,callback_num_pres_ind
8797,Length
8798,2
8799,Integer
8800,Length of Value part in octets
8801,Value
8802,1
8803,Bit mask
8804,Bits 7............0
8805,0000ppss
8806,This parameter controls the presentation
8807,indication and screening of the
8808,CallBackNumber at the mobile station.If
8809,"present, the callback_num parameter must"
8810,also be present.
8811,The Presentation Indicator is encoded in
8812,bits 2 and 3 as follows:
8813,00 = Presentation Allowed
8814,01 = Presentation Restricted
8815,10 = Number Not Available
8816,11 = Reserved
8817,The Screening Indicator is encoded in bits
8818,0 and 1 as follows:
8819,"00 = User provided, not screened"
8820,"01 = User provided, verified and passed"
8821,"10 = User provided, verified and failed"
8822,11 = Network Provided.
8823,SMPP Protocol Specification v3.4
8824,SMPP Parameter Definition
8825,Issue 1.2
8826,©SMPP Developers Forum
8827,5.3.2.38
8828,callback_num_atag
8829,The callback_num_atag parameter associates an alphanumeric display with the call back
8830,number.
8831,Field
8832,Size
8833,octets
8834,Type
8835,Description
8836,Parameter Tag
8837,2
8838,Integer
8839,callback_num_atag
8840,Length
8841,2
8842,Integer
8843,Length of Value part in octets
8844,Value
8845,Var
8846,max
8847,65
8848,Octet
8849,string
8850,Alphanumeric display tag for call back
8851,number
8852,Bits 7...............0
8853,EEEEEEEE (octet 1)
8854,XXXXXXXX (octet 2)
8855,:
8856,:
8857,XXXXXXXX (octet N)
8858,The first octet contains the encoding
8859,scheme of the Alpha Tag display
8860,characters. This field contains the same
8861,values as for Data Coding Scheme (see
8862,section 5.2.19).
8863,The following octets contain the display
8864,characters:
8865,There is one octet per display character for
8866,7-bit and 8-bit encoding schemes.
8867,There are two octets per display character
8868,for 16-bit encoding schemes.
8869,©SMPP Developers Forum
8870,Issue 1.2
8871,SMPP Parameter Definition
8872,SMPP Protocol Specification v3.4
8873,5.3.2.39
8874,number_of_messages
8875,The number_of_messages parameter is used to indicate the number of messages stored in a
8876,mailbox.
8877,5.3.2.40
8878,sms_signal
8879,The sms_signal parameter is used to provide a TDMA MS with alert tone information
8880,associated with the received short message.
8881,Field
8882,Size
8883,octets
8884,Type
8885,Description
8886,Parameter Tag
8887,2
8888,Integer
8889,number_of_messages
8890,Length
8891,2
8892,Integer
8893,Length of Value part in octets
8894,Value
8895,1
8896,Integer
8897,0 to 99 = allowed values.
8898,values 100 to 255 are reserved
8899,Field
8900,Size
8901,octets
8902,Type
8903,Description
8904,Parameter Tag
8905,2
8906,Integer
8907,sms_signal
8908,Length
8909,2
8910,Integer
8911,Length of Value part in octets
8912,Value
8913,2
8914,Integer
8915,Encoded as per [CMT-136]
8916,SMPP Protocol Specification v3.4
8917,SMPP Parameter Definition
8918,Issue 1.2
8919,©SMPP Developers Forum
8920,5.3.2.41
8921,alert_on_message_delivery
8922,The alert_on_message_delivery parameter is set to instruct a MS to alert the user (in a MS
8923,implementation specific manner) when the short message arrives at the MS.
8924,5.3.2.42
8925,its_reply_type
8926,The its_reply_type parameter is a required parameter for the CDMA Interactive Teleservice as
8927,defined by the Korean PCS carriers [KORITS]. It indicates and controls the MS user’s reply
8928,method to an SMS delivery message received from the ESME.
8929,Field
8930,Size
8931,octets
8932,Type
8933,Description
8934,Parameter Tag
8935,2
8936,Integer
8937,alert_on_message_delivery
8938,Length
8939,2
8940,Integer
8941,Length of Value part in octets (= 0)
8942,Value
8943,0
8944,There is no Value part associated with this
8945,parameter.
8946,Field
8947,Size
8948,octets
8949,Type
8950,Description
8951,Parameter Tag
8952,2
8953,Integer
8954,its_reply_type
8955,Length
8956,2
8957,Integer
8958,Length of Value part in octets
8959,Value
8960,1
8961,Integer
8962,0 = Digit
8963,1 = Number
8964,2 = Telephone No.
8965,3 = Password
8966,4 = Character Line
8967,5 = Menu
8968,6 = Date
8969,7 = Time
8970,8 = Continue
8971,values 9 to 255 are reserved
8972,©SMPP Developers Forum
8973,Issue 1.2
8974,SMPP Parameter Definition
8975,SMPP Protocol Specification v3.4
8976,5.3.2.43
8977,its_session_info
8978,The its_session_info parameter is a required parameter for the CDMA Interactive Teleservice
8979,as defined by the Korean PCS carriers [KORITS]. It contains control information for the
8980,interactive session between an MS and an ESME.
8981,Field
8982,Size
8983,octets
8984,Type
8985,Description
8986,Parameter Tag
8987,2
8988,Integer
8989,its_session_info
8990,Length
8991,2
8992,Integer
8993,Length of Value part in octets
8994,Value
8995,2
8996,Octet
8997,String
8998,Bits 7...............0
8999,SSSS SSSS (octet 1)
9000,NNNN NNNE (octet 2)
9001,Octet 1 contains the session number (0 -
9002,255) encoded in binary. The session
9003,number remains constant for each session.
9004,The sequence number of the dialogue unit
9005,(as assigned by the ESME) within the
9006,session is encoded in bits 7..1 of octet 2.
9007,The End of Session Indicator indicates the
9008,message is the end of the conversation
9009,session and is encoded in bit 0 of octet 2 as
9010,follows:
9011,0 = End of Session Indicator inactive.
9012,1 = End of Session Indicator active.
9013,SMPP Protocol Specification v3.4
9014,SMPP Parameter Definition
9015,Issue 1.2
9016,©SMPP Developers Forum
9017,5.3.2.44
9018,ussd_service_op
9019,The ussd_service_op parameter is required to define the USSD service operation when SMPP
9020,is being used as an interface to a (GSM) USSD system.
9021,Field
9022,Size
9023,octets
9024,Type
9025,Description
9026,Parameter Tag
9027,2
9028,Integer
9029,ussd_service_op
9030,Length
9031,2
9032,Integer
9033,Length of Value part in octets
9034,Value
9035,1
9036,Octet
9037,String
9038,0 = PSSD indication
9039,1 = PSSR indication
9040,2 = USSR request
9041,3 = USSN request
9042,4 to 15 = reserved
9043,16 = PSSD response
9044,17 = PSSR response
9045,18 = USSR confirm
9046,19 = USSN confirm
9047,20 to 31 = reserved
9048,32 to 255 = reserved for vendor specific
9049,USSD operations
9050,©SMPP Developers Forum
9051,Issue 1.2
9052,Network Implementation
9053,SMPP Protocol Specification v3.4
9054,6.
9055,Network Implementation
9056,6.1
9057,Network Error Codes
9058,"The SMPP PDU, query_sm_resp contains an “error_code” field. The range of values this field"
9059,"may have, depends entirely on the underlying telecommunications network."
9060,6.2
9061,Maximum Message Length
9062,Each network variation is limited to some fixed maximum length. This may be further affected
9063,by data coding scheme.
9064,"The SMSC, depending on configuration, may reject or truncate messages that exceed the"
9065,network allowed maximum.
9066,SMPP Protocol Specification v3.4
9067,General Definitions
9068,Issue 1.2
9069,©SMPP Developers Forum
9070,7.
9071,General Definitions
9072,7.1
9073,Time Definitions
9074,7.1.1
9075,Time Format
9076,"In this interface, all time/date related fields will be in ASCII with the following format:"
9077,“YYMMDDhhmmsstnnp” where
9078,‘YY’
9079,last two digits of the year (00-99)
9080,‘MM’
9081,month (01-12)
9082,‘DD’
9083,day (01-31)
9084,‘hh’
9085,hour (00-23)
9086,‘mm’
9087,minute (00-59)
9088,‘ss’
9089,second (00-59)
9090,‘t’
9091,tenths of second (0-9)
9092,‘nn’
9093,Time difference in quarter hours between local
9094,time (as expressed in the first 13 octets) and UTC
9095,(Universal Time Constant) time (00-48).
9096,‘p’ - “+”
9097,Local time is in quarter hours advanced in relation
9098,to UTC time.
9099,“-”
9100,Local time is in quarter hours retarded in relation
9101,to UTC time.
9102,“R”
9103,Local time is relative to the current SMSC time.
9104,Note:
9105,"Where responses are reported by the SMSC the local time of the SMSC will be given,"
9106,"and the format will be “YYMMDDhhmmss”, with the same definitions as above."
9107,7.1.1.1
9108,Absolute Time format
9109,This is the default format used by SMPP. Scheduled delivery times and expiry times are
9110,"specified in their global UTC format, including the quarter hour offset and direction symbol ‘+’"
9111,or ‘-’.
9112,©SMPP Developers Forum
9113,Issue 1.2
9114,General Definitions
9115,SMPP Protocol Specification v3.4
9116,7.1.1.2
9117,Relative Time Format
9118,Relative Time can be indicated by setting the UTC orientation flag to ‘R’ instead of ‘+’ or ‘-’.
9119,"In this form, the SMSC interprets the time format as the number of years, months, days, hours,"
9120,minutes and seconds from the current SMSC time. Values for tenths of seconds ‘t’ and UTC
9121,offset ‘nn’ are ignored and should be set to ‘0’ and ‘00’ respectively.
9122,"For example, the following time format ‘020610233429000R”:"
9123,"- would be interpreted as a relative period of 2 years, 6 months, 10 days, 23 hours, 34"
9124,minutes and 29 seconds from the current SMSC time.
9125,Note:
9126,"An SMSC operator may choose to impose a limit on relative time offsets, thus either"
9127,rejecting a message that exceeds such a limit or reducing the offset to the maximum
9128,relative time allowed.
9129,For example:- a typical validity period might be 7 days and a typical scheduled delivery times
9130,might be 14 days from the submission time.
9131,SMPP Protocol Specification v3.4
9132,General Definitions
9133,Issue 1.2
9134,©SMPP Developers Forum
9135,7.2
9136,Timer Definitions
9137,It is recommended that the following timers be implemented for SMPP transmitter and receiver
9138,sessions. All timers should be configurable.
9139,Note:
9140,Definition of the various timer values is outside the scope of this SMPP Protocol
9141,Specification.
9142,Timer
9143,Action on
9144,expiration
9145,Description
9146,session_init_timer
9147,The network
9148,connection should
9149,be terminated.
9150,This timer specifies the time lapse allowed
9151,between a network connection being
9152,established and a bind_transmitter or
9153,bind_receiver request being sent to the SMSC.
9154,This timer should be active on the SMSC.
9155,enquire_link_timer
9156,An enquire_link
9157,request should be
9158,initiated.
9159,This timer specifies the time lapse allowed
9160,between operations after which an SMPP entity
9161,should interrogate whether it’s peer still has an
9162,active session.
9163,This timer may be active on either
9164,communicating SMPP entity (i.e. SMSC or
9165,ESME).
9166,inactivity_timer
9167,The SMPP
9168,session should be
9169,dropped.
9170,This timer specifies the maximum time lapse
9171,"allowed between transactions, after which"
9172,"period of inactivity, an SMPP entity may"
9173,assume that the session is no longer active.
9174,This timer may be active on either
9175,communicating SMPP entity (i.e. SMSC or
9176,ESME).
9177,response_timer
9178,The entity which
9179,originated the
9180,SMPP Request
9181,may assume that
9182,Request has not
9183,been processed
9184,and should take
9185,the appropriate
9186,action for the
9187,particular SMPP
9188,operation in
9189,question.
9190,This timer specifies the time lapse allowed
9191,between an SMPP request and the
9192,corresponding SMPP response.
9193,This timer may be active on either
9194,communicating SMPP entity (i.e. SMSC or
9195,ESME).
9196,©SMPP Developers Forum
9197,Issue 1.2
9198,General DefinitionsAppendix A
9199,SMPP Protocol Specification v3.4
9200,Appendix A
9201,UNIX Regular Expressions
9202,Full explanations of UNIX regular expressions can be found in section 5 of the standard on-line
9203,"UNIX manuals (man 5 regexp). Furthermore, many UNIX books explain regular expressions"
9204,and the various syntax used. This section gives useful and applicable examples of regular
9205,expressions in the context of the SMPP usage of same.
9206,SMPP uses a regular expression in the bind_receiver PDU. The ESME uses this to provide
9207,"routing criteria to the SMSC, namely, TON, NPI and routing_expr. The TON & NPI values are"
9208,fixed values where the routing_expr itself is the regular expression.
9209,•
9210,^1234
9211,"The ‘^’ char is used to represent “beginning with”, therefore ^1234 is interpreted as"
9212,MSISDNs beginning with 1234. This allows an ESME specify a specific set of numbers
9213,based on a a given prefix common to all.
9214,•
9215,5678$
9216,"The ‘$’ char is used to represent “ending with”, thus 5678$ will match any MSISDN"
9217,ending with 5678.
9218,•
9219,^123456$
9220,"A combination of ‘^’ and ‘$’ at the beginning and end of a regular expression, is used to"
9221,"specify an absolute address, i.e the above expression will match MSISDNs beginning with"
9222,and ending with 123456. The only value ever matched to this will in fact be ‘123456’
9223,itself.
9224,•
9225,[13579]$
9226,values within [] denote a character class. The above expression will match MSISDNs
9227,"ending with any of 1, 3, 5, 7 or 9. So this expression will match MSISDNs ending in an"
9228,"odd digit. If a ‘^’ character is placed inside the ‘[‘, then the match is based on any character"
9229,not in the specified class; e.g [^13579]$ will match MSISDNs not ending with any of the
9230,specified digits.
9231,SMPP Protocol Specification v3.4
9232,General DefinitionsAppendix B
9233,Issue 1.2
9234,©SMPP Developers Forum
9235,Appendix B
9236,Delivery Receipt Format
9237,"SMPP provides for return of an SMSC delivery receipt via the deliver_sm or data_sm PDU,"
9238,which indicates the delivery status of the message.
9239,The informational content of an SMSC Delivery Receipt may be inserted into the
9240,short_message parameter of the deliver_sm operation. The format for this Delivery Receipt
9241,message is SMSC vendor specific but following is a typical example of Delivery Receipt report.
9242,“id:IIIIIIIIII sub:SSS dlvrd:DDD submit date:YYMMDDhhmm done
9243,date:YYMMDDhhmm stat:DDDDDDD err:E Text: . . . . . . . . .”
9244,The fields of the above delivery receipt example are explained in the following
9245,table:
9246,Field
9247,Size
9248,(octets)
9249,Type
9250,Description
9251,id
9252,10
9253,C-Octet
9254,String
9255,(Decimal)
9256,The message ID allocated to the message by
9257,the SMSC when originally submitted.
9258,sub
9259,3
9260,C-Octet
9261,String
9262,(Decimal)
9263,Number of short messages originally
9264,submitted. This is only relevant when the
9265,original message was submitted to a
9266,distribution list.The value is padded with
9267,leading zeros if necessary.
9268,dlvrd
9269,3
9270,C-Octet Fixed
9271,Length String
9272,(Decimal)
9273,Number of short messages delivered. This is
9274,only relevant where the original message was
9275,submitted to a distribution list.The value is
9276,padded with leading zeros if necessary.
9277,submit date
9278,10
9279,C-Octet Fixed
9280,Length String
9281,The time and date at which the short message
9282,was submitted. In the case of a message which
9283,"has been replaced, this is the date that the"
9284,original message was replaced.The format is
9285,as follows:
9286,YYMMDDhhmm where:
9287,YY = last two digits of the year (00-99)
9288,MM = month (01-12)
9289,DD = day (01-31)
9290,hh = hour (00-23)
9291,mm = minute (00-59
9292,Table B-1: Delivery Receipt Short Message Text Format
9293,©SMPP Developers Forum
9294,Issue 1.2
9295,General DefinitionsAppendix B
9296,SMPP Protocol Specification v3.4
9297,Example Delivery Receipt message states:
9298,done date
9299,10
9300,C-Octet Fixed
9301,Length String
9302,The time and date at which the short message
9303,reached it’s final state. The format is the same
9304,as for the submit date.
9305,stat
9306,7
9307,C-Octet Fixed
9308,Length String
9309,The final status of the message.
9310,For settings for this field see Table B-2.
9311,err
9312,3
9313,C-Octet Fixed
9314,Length String
9315,Where appropriate this may hold a Network
9316,specific error code or an SMSC error code for
9317,the attempted delivery of the message.
9318,These errors are Network or SMSC specific
9319,and are not included here.
9320,text
9321,20
9322,Octet String
9323,The first 20 characters of the short message.
9324,Message State
9325,Final Message
9326,States
9327,Description
9328,DELIVERED
9329,DELIVRD
9330,Message is delivered to
9331,destination
9332,EXPIRED
9333,EXPIRED
9334,Message validity period has
9335,expired.
9336,DELETED
9337,DELETED
9338,Message has been deleted.
9339,UNDELIVERABLE
9340,UNDELIV
9341,Message is undeliverable
9342,ACCEPTED
9343,ACCEPTD
9344,Message is in accepted state
9345,(i.e. has been manually read
9346,on behalf of the subscriber by
9347,customer service)
9348,UNKNOWN
9349,UNKNOWN
9350,Message is in invalid state
9351,REJECTED
9352,REJECTD
9353,Message is in a rejected state
9354,Table B-2: Delivery Receipt Short Message Text Format
9355,Field
9356,Size
9357,(octets)
9358,Type
9359,Description
9360,Table B-1: Delivery Receipt Short Message Text Format
9361,SMPP Protocol Specification v3.4
9362,General DefinitionsAppendix C
9363,Issue 1.2
9364,©SMPP Developers Forum
9365,Appendix C
9366,SMPP and Year 2000 Conformance
9367,"SMPP adopts the definition of Year 2000 conformity, as specified by the British Standards"
9368,Institute. Further details on the British Standards Institute definition of Year 2000 conformity
9369,are available at:-
9370,http://www.bsi.org.uk/disc/year2000/2000.html
9371,Year 2000 Rollover Date Guideline as applied to SMPP
9372,"SMPP provides a two digit year field. Therefore, each SMPP entity must define a Year 2000"
9373,rollover date for 2-digit dates. As the Year 2000 rollover date will be defined for a computer
9374,"platform and all its interfaces as a whole, a generic rollover date is not explicitly defined for the"
9375,SMPP protocol.
9376,"SMPP developers should make the rollover date configurable within their implementations, to"
9377,ensure compatibility with various SMSC platforms.
9378,"In the interest of maximising compatibility between SMPP products and platforms, it is"
9379,strongly recommended that the following default guideline be adopted when implementing an
9380,SMPP interface:-
9381,•
9382,The century rollover date shall be ‘xx38’
9383,"Thus, dates ending in ranges:-"
9384,•
9385,38 to 99 shall be interpreted as meaning years 1938 to 1999 respectively
9386,•
9387,00 to 37 shall be interpreted as meaning years 2000 to 2037 respectively.
